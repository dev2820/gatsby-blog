{
    "version": "https://jsonfeed.org/version/1",
    "title": "Terra Dev Blog",
    "home_page_url": "https://dev2820.github.io/next-blog",
    "feed_url": "https://dev2820.github.io/next-blog/feed.json",
    "description": "Hello World",
    "icon": "https://dev2820.github.io/next-blog/images/hero.jpg",
    "author": {
        "name": "dev2820",
        "url": "https://dev2820.github.io/next-blog/about"
    },
    "items": [
        {
            "id": "algorithm-0-begin",
            "content_html": "<!DOCTYPE html><html lang=\"kr\" class=\"__variable_fa65fd __variable_7691e4 scroll-smooth\"><head><meta charSet=\"utf-8\"/><meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"/><link rel=\"preload\" href=\"/next-blog/_next/static/media/3e7b7e3fd4560936-s.p.woff2\" as=\"font\" crossorigin=\"\" type=\"font/woff2\"/><link rel=\"preload\" href=\"/next-blog/_next/static/media/ff840cfebfb63b0c-s.p.woff2\" as=\"font\" crossorigin=\"\" type=\"font/woff2\"/><link rel=\"preload\" as=\"image\" href=\"./images/n_compare_graph.png\"/><link rel=\"preload\" as=\"image\" href=\"./images/computational_complexity.png\"/><link rel=\"stylesheet\" href=\"/next-blog/_next/static/css/16077bc16defb9b9.css\" data-precedence=\"next\"/><link rel=\"stylesheet\" href=\"/next-blog/_next/static/css/203da25389b4eeab.css\" data-precedence=\"next\"/><link rel=\"preload\" as=\"script\" fetchPriority=\"low\" href=\"/next-blog/_next/static/chunks/webpack-8f27d743501d147d.js\"/><script src=\"/next-blog/_next/static/chunks/f14ca715-03ac7b40665f0731.js\" async=\"\"></script><script src=\"/next-blog/_next/static/chunks/465-9f8ee17d6a70e147.js\" async=\"\"></script><script src=\"/next-blog/_next/static/chunks/main-app-e31317f2a5bf611e.js\" async=\"\"></script><script src=\"/next-blog/_next/static/chunks/805-a8af350d35fb9160.js\" async=\"\"></script><script src=\"/next-blog/_next/static/chunks/app/posts/%5Bslug%5D/layout-1cf1294e1a2539f4.js\" async=\"\"></script><script src=\"/next-blog/_next/static/chunks/618-f2bb34773a0d24b2.js\" async=\"\"></script><script src=\"/next-blog/_next/static/chunks/app/posts/page-e8c6275c8ebfad50.js\" async=\"\"></script><script src=\"/next-blog/_next/static/chunks/372-b649e69f56e8eb19.js\" async=\"\"></script><script src=\"/next-blog/_next/static/chunks/app/layout-c7fa40d911107206.js\" async=\"\"></script><script src=\"/next-blog/_next/static/chunks/952ad60e-7cdac7b6bf36214c.js\" async=\"\"></script><script src=\"/next-blog/_next/static/chunks/app/posts/%5Bslug%5D/page-e951164d6ad6c144.js\" async=\"\"></script><link rel=\"preload\" href=\"https://giscus.app/client.js\" as=\"script\"/><link rel=\"preload\" href=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/prism.min.js\" as=\"script\"/><link rel=\"preload\" href=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-javascript.min.js\" as=\"script\"/><link rel=\"preload\" href=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-typescript.min.js\" as=\"script\"/><link rel=\"preload\" href=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-jsx.min.js\" as=\"script\"/><link rel=\"preload\" href=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-tsx.min.js\" as=\"script\"/><link rel=\"preload\" href=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-c.min.js\" as=\"script\"/><link rel=\"preload\" href=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/plugins/line-numbers/prism-line-numbers.min.js\" as=\"script\"/><title>Terra Dev Blog - algorithm-0-begin</title><link rel=\"canonical\" href=\"https://dev2820.github.io/next-blog/algorithm-0-begin\"/><meta property=\"og:title\" content=\"algorithm-0-begin\"/><meta property=\"og:url\" content=\"https://dev2820.github.io/next-blog/algorithm-0-begin\"/><meta property=\"og:locale\" content=\"ko_KR\"/><meta property=\"og:image\" content=\"https://dev2820.github.io/next-blog/next-blog/posts/algorithm-0-begin\"/><meta property=\"og:image:width\" content=\"800\"/><meta property=\"og:image:height\" content=\"600\"/><meta property=\"og:image:alt\" content=\"algorithm-0-begin\"/><meta property=\"og:type\" content=\"article\"/><meta name=\"twitter:card\" content=\"summary_large_image\"/><meta name=\"twitter:title\" content=\"algorithm-0-begin\"/><meta name=\"twitter:image\" content=\"https://dev2820.github.io/next-blog/next-blog/posts/algorithm-0-begin\"/><meta name=\"twitter:image:width\" content=\"800\"/><meta name=\"twitter:image:height\" content=\"600\"/><meta name=\"twitter:image:alt\" content=\"algorithm-0-begin\"/><link rel=\"icon\" href=\"/next-blog/favicon.ico\" type=\"image/x-icon\" sizes=\"16x16\"/><meta name=\"next-size-adjust\"/><script src=\"/next-blog/_next/static/chunks/polyfills-78c92fac7aa8fdd8.js\" noModule=\"\"></script></head><body class=\"__className_fa65fd flex flex-col text-gray-800\"><link href=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/plugins/line-numbers/prism-line-numbers.min.css\" rel=\"stylesheet\"/><header class=\"flex flex-row justify-center py-2 items-center self-center w-full max-w-screen-md px-4\"><a href=\"/next-blog\"><img alt=\"Terra&#x27;s Devlog logo\" loading=\"lazy\" width=\"258\" height=\"48\" decoding=\"async\" data-nimg=\"1\" style=\"color:transparent\" src=\"/next-blog/_next/static/media/logo-full.a2c57f51.svg\"/></a><div class=\"flex-1\"></div><nav class=\"\"><menu class=\"flex flex-row gap-8\"><li><a aria-disabled=\"false\" href=\"/next-blog/posts\"><div class=\"cursor-pointer duration-200 font-medium text-primary hover:text-primary\">Posts</div></a></li><li><a aria-disabled=\"true\" href=\"\"><div class=\"duration-200 font-medium cursor-not-allowed text-muted hover:text-muted\">About Me</div></a></li><li><a aria-disabled=\"true\" href=\"\"><div class=\"duration-200 font-medium cursor-not-allowed text-muted hover:text-muted\">Contact</div></a></li></menu></nav></header><main class=\"self-center w-full max-w-screen-md p-4 text-gray-800\"><article class=\"relative\"><header id=\"post-meta\"><h1 class=\"mt-10 mb-4 text-heading1 font-bold leading-normal\" id=\"algorithm-0-begin\">algorithm-0-begin</h1><time dateTime=\"2024-03-31\" aria-label=\"Published on 2024-03-31\">2024-03-31</time> <!-- -->|<!-- --> <time dateTime=\"PT2M\" aria-label=\"Estimated reading time\">2<!-- --> mins</time></header><div id=\"content\" class=\"relative\"><div id=\"table-of-header\" class=\"absolute -right-12 translate-x-full h-full w-52 desktop:block hidden\"><nav class=\"sticky top-24\"><ol><li><a href=\"#이-글을-작성하는-이유\"><div class=\"text-sm font-light data-[active=&quot;true&quot;]:text-base data-[active=&quot;true&quot;]:font-semibold py-0.5 text-neutral-400 data-[active=&quot;true&quot;]:text-primary duration-200 hover:text-primary pl-4\" data-id=\"#이-글을-작성하는-이유\">이 글을 작성하는 이유</div></a></li><li><a href=\"#왜-알고리즘을-공부해야할까\"><div class=\"text-sm font-light data-[active=&quot;true&quot;]:text-base data-[active=&quot;true&quot;]:font-semibold py-0.5 text-neutral-400 data-[active=&quot;true&quot;]:text-primary duration-200 hover:text-primary pl-4\" data-id=\"#왜-알고리즘을-공부해야할까\">왜 알고리즘을 공부해야할까?</div></a></li><li><a href=\"#알고리즘의-효율성-분석하기\"><div class=\"text-sm font-light data-[active=&quot;true&quot;]:text-base data-[active=&quot;true&quot;]:font-semibold py-0.5 text-neutral-400 data-[active=&quot;true&quot;]:text-primary duration-200 hover:text-primary pl-4\" data-id=\"#알고리즘의-효율성-분석하기\">알고리즘의 효율성 분석하기</div></a></li><li><a href=\"#cpu를-효율적으로-사용했다는-것\"><div class=\"text-sm font-light data-[active=&quot;true&quot;]:text-base data-[active=&quot;true&quot;]:font-semibold py-0.5 text-neutral-400 data-[active=&quot;true&quot;]:text-primary duration-200 hover:text-primary pl-10\" data-id=\"#cpu를-효율적으로-사용했다는-것\">CPU를 효율적으로 사용했다는 것</div></a></li><li><a href=\"#메모리를-효율적으로-사용했다는-것\"><div class=\"text-sm font-light data-[active=&quot;true&quot;]:text-base data-[active=&quot;true&quot;]:font-semibold py-0.5 text-neutral-400 data-[active=&quot;true&quot;]:text-primary duration-200 hover:text-primary pl-10\" data-id=\"#메모리를-효율적으로-사용했다는-것\">메모리를 효율적으로 사용했다는 것</div></a></li><li><a href=\"#효율적인-알고리즘이란\"><div class=\"text-sm font-light data-[active=&quot;true&quot;]:text-base data-[active=&quot;true&quot;]:font-semibold py-0.5 text-neutral-400 data-[active=&quot;true&quot;]:text-primary duration-200 hover:text-primary pl-10\" data-id=\"#효율적인-알고리즘이란\">효율적인 알고리즘이란?</div></a></li><li><a href=\"#최선-평균-최악의-복잡도\"><div class=\"text-sm font-light data-[active=&quot;true&quot;]:text-base data-[active=&quot;true&quot;]:font-semibold py-0.5 text-neutral-400 data-[active=&quot;true&quot;]:text-primary duration-200 hover:text-primary pl-4\" data-id=\"#최선-평균-최악의-복잡도\">최선, 평균, 최악의 복잡도</div></a></li><li><a href=\"#근데-이건-왜-언급하나요\"><div class=\"text-sm font-light data-[active=&quot;true&quot;]:text-base data-[active=&quot;true&quot;]:font-semibold py-0.5 text-neutral-400 data-[active=&quot;true&quot;]:text-primary duration-200 hover:text-primary pl-10\" data-id=\"#근데-이건-왜-언급하나요\">근데 이건 왜 언급하나요?</div></a></li><li><a href=\"#복잡도의-비교-big-o-표기법\"><div class=\"text-sm font-light data-[active=&quot;true&quot;]:text-base data-[active=&quot;true&quot;]:font-semibold py-0.5 text-neutral-400 data-[active=&quot;true&quot;]:text-primary duration-200 hover:text-primary pl-4\" data-id=\"#복잡도의-비교-big-o-표기법\">복잡도의 비교, Big-O 표기법</div></a></li><li><a href=\"#실용적인-관점의-big-o\"><div class=\"text-sm font-light data-[active=&quot;true&quot;]:text-base data-[active=&quot;true&quot;]:font-semibold py-0.5 text-neutral-400 data-[active=&quot;true&quot;]:text-primary duration-200 hover:text-primary pl-10\" data-id=\"#실용적인-관점의-big-o\">실용적인 관점의 Big-O</div></a></li></ol></nav></div><section aria-labelledby=\"0-시작하기\"><h1 class=\"mt-10 mb-4 text-heading1 font-bold leading-normal\" id=\"0-시작하기\"><a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#0-시작하기\"><span class=\"icon icon-link\"></span></a>0. 시작하기</h1><section aria-labelledby=\"이-글을-작성하는-이유\"><h2 class=\"mt-8 mb-3 text-heading2 font-semibold leading-normal\" id=\"이-글을-작성하는-이유\"><a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#이-글을-작성하는-이유\"><span class=\"icon icon-link\"></span></a>이 글을 작성하는 이유</h2><p class=\"font-light leading-normal mt-4 mb-2\">학부를 졸업하고 1년이 지난 시점에서 알게된 사실이 있다.</p><ol class=\"list-decimal my-4\">\n<li class=\"text-paragraph font-light leading-normal py-1 ml-6\">CS는 프론트,백,앱에 상관없이 활용할 수 있는 지식이다.</li>\n<li class=\"text-paragraph font-light leading-normal py-1 ml-6\">이미 공부한 내용도 시간이 지나 다시 공부하면 얻을 수 있는 인사이트가 달라진다.</li>\n</ol><p class=\"font-light leading-normal mt-4 mb-2\">1번은 요즘 들어 크게 다가오고 있는 사실이다. 앱개발도 해보고, 서버 개발도 해보며 느낀 점은, 어떤 것을 개발하든 그 안에서 결국 비슷한 고민을 하게 되며, 그 고민을 해결하기 위해선 CS지식이 활용된다는 사실이다.</p><p class=\"font-light leading-normal mt-4 mb-2\">2번은 자바스크립트 책을 1년뒤 다시 읽으며 그 전에 이해하지 못했던 개념과 인사이트를 얻는 경험을 하며 깨달게 되었다.</p><p class=\"font-light leading-normal mt-4 mb-2\">회사에서 기능 구현을 위해 고전하다 문뜩 학부생때 공부했던 내용도 지금 다시 공부하면 새로운 인사이트를 얻을 수 있지 않을까? 그리고 더 성장한 개발자가 될 수 있지 않을까?라는 생각을 하게 되었다.</p><p class=\"font-light leading-normal mt-4 mb-2\">그래서 무작정 학부생 때 사용한 알고리즘 교재를 펼처들고 읽기 시작했다. 하지만 1장을 다 읽은 시점에서 이 인사이트를 나 혼자만 알기보다 지금 정리해두면 미래의 나 또는 지나가다 발견한 누군가에게 도움일 될 것이라는 기대를 하게 됐다.</p><p class=\"font-light leading-normal mt-4 mb-2\">결론적으로 학부생때 읽었던 알고리즘 교재를 다시보며 얻는 인사이트를 블로그에 천천히 정리해보려고 한다.</p><p class=\"font-light leading-normal mt-4 mb-2\">앞으로 2가지에 집중해서 포스팅을 해보려한다.</p><blockquote class=\"my-4 border-l-4 border-primary p-6 bg-gray-100 text-gray-700 [&amp;_*:first-child]:mt-0 [&amp;_*:last-child]:mb-0\">\n<p class=\"font-light leading-normal mt-4 mb-2\">복잡한 수학적 증명이 아닌 그것이 주는 인사이트를 위주로 기술하고자 한다.\n비전공자도 이해할 수 있도록 쉽게 작성하고자 한다.</p>\n</blockquote></section><section aria-labelledby=\"왜-알고리즘을-공부해야할까\"><h2 class=\"mt-8 mb-3 text-heading2 font-semibold leading-normal\" id=\"왜-알고리즘을-공부해야할까\"><a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#왜-알고리즘을-공부해야할까\"><span class=\"icon icon-link\"></span></a>왜 알고리즘을 공부해야할까?</h2><p class=\"font-light leading-normal mt-4 mb-2\">살짝은 당연한 이야기지만, 그래도 이유를 분명히 하고 출발하자. 왜 우리는 알고리즘을 공부해야할까?</p><p></p><p class=\"font-light leading-normal mt-4 mb-2\">우리가 알고리즘을 공부함으로써 무얼 얻게 될까? 다양한 알고리즘과 그 알고리즘의 장단점을 알게 된다.<br/>\n다양한 알고리즘을 알면 무엇이 좋은가? 문제 해결에 있어 적절한 알고리즘을 선택할 수 있게 된다.<br/>\n문제 해결에서 적절한 알고리즘의 선택은 왜 중요한가? 적절한 알고리즘은 문제를 더 효율적으로 풀 수 있게 만들기 때문이다.</p><p></p><blockquote class=\"my-4 border-l-4 border-primary p-6 bg-gray-100 text-gray-700 [&amp;_*:first-child]:mt-0 [&amp;_*:last-child]:mb-0\">\n<p class=\"font-light leading-normal mt-4 mb-2\">알고리즘을 공부하면 문제를 더 효율적으로 풀 수 있게 된다.</p>\n</blockquote><p></p><p class=\"font-light leading-normal mt-4 mb-2\">n개의 원소를 가지며 정렬된 배열에서 특정 원소 x를 찾는 간단한 문제를 이야기해보자.</p><p></p><p class=\"font-light leading-normal mt-4 mb-2\">순차 탐색(sequential search)을 하는 경우 x를 찾는데 최악의 경우 n번의 비교를 해야한다.</p><p class=\"font-light leading-normal mt-4 mb-2\">이분 탐색(binary search)을 하는 경우 x를 찾는데 최악의 경우 logN+1번의 비교를 해야한다.</p><p></p><p class=\"font-light leading-normal mt-4 mb-2\">지구의 모든 사람을 정렬한 상태에서 &#x27;나&#x27;를 찾는 문제라고 한다면 순차 탐색으로는 80억번(2024년 기준)의 연산이 필요하다. 반면 이분 탐색으로는 33번의 비교만 하면 된다는 것이다. 순차 탐색보다 효율적이다.</p><p></p><p class=\"font-light leading-normal mt-4 mb-2\">CPU의 성능은 계속 좋아지고 있지만 일반적으로 1초 안에 약 10억번의 계산을 할 수 있다고 본다.</p><blockquote class=\"my-4 border-l-4 border-primary p-6 bg-gray-100 text-gray-700 [&amp;_*:first-child]:mt-0 [&amp;_*:last-child]:mb-0\">\n<p class=\"font-light leading-normal mt-4 mb-2\">10억번 = 1초</p>\n</blockquote><p class=\"font-light leading-normal mt-4 mb-2\">따라서 순차 탐색으로는 8초, 이분 탐색으로는 0.000000033 초만 소요된다.</p><p></p><p class=\"font-light leading-normal mt-4 mb-2\">이렇게 설명하지 않아도 효율적인 계산의 중요성은 알 것이라 생각하니 여기까지만 하고 넘어가자.</p></section><section aria-labelledby=\"알고리즘의-효율성-분석하기\"><h2 class=\"mt-8 mb-3 text-heading2 font-semibold leading-normal\" id=\"알고리즘의-효율성-분석하기\"><a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#알고리즘의-효율성-분석하기\"><span class=\"icon icon-link\"></span></a>알고리즘의 효율성 분석하기</h2><p class=\"font-light leading-normal mt-4 mb-2\">A알고리즘이 B알고리즘보다 효율적인가?<br/>\n이를 비교하기 위해서는 각 알고리즘의 효율성을 계산해야한다. 컴퓨터에서 문제를 푸는데에는 2가지의 자원이 사용된다. 바로 메모리와 CPU이다. 효율적으로 연산했다는 말은 메모리와 CPU를 효율적으로 사용했다고 볼 수 있다.</p><p></p><section aria-labelledby=\"cpu를-효율적으로-사용했다는-것\"><h3 class=\"mt-7 mb-2 text-heading3 font-semibold leading-normal\" id=\"cpu를-효율적으로-사용했다는-것\"><a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#cpu를-효율적으로-사용했다는-것\"><span class=\"icon icon-link\"></span></a>CPU를 효율적으로 사용했다는 것</h3><p class=\"font-light leading-normal mt-4 mb-2\">CPU를 효율적으로 썼다는 것은 어떻게 알 수 있을까? CPU가 동작한 시간을 비교하는 것은 효율성을 계산할 수 없다. CPU마다 성능이 다르기 때문이다. CPU가 수행한 명령의 수도 정확한 비교는 아니다. 사용한 프로그래밍 언어에 따라 같은 알고리즘에서도 CPU가 사용한 명령의 수가 달라지기 때문이다.</p><p></p><p class=\"font-light leading-normal mt-4 mb-2\">이처럼 물리적인 단위의 비교는 공정하지 않기 때문에 CPU의 효율성은 <strong class=\"font-medium\">논리적인 단위</strong>에서 비교한다. 이 논리적인 단위는 어떤 목적으로 알고리즘을 비교하는가에 따라 선택할 수 있다. 가장 범용적이고 일반적인 단위로는 비교문(exchange statement)이 있다. 할당문(assignment statement)을 얼만큼 사용했는지를 비교할수도 있다. 앞으로는 이러한 논리적인 단위를 <strong class=\"font-medium\">단위연산</strong>이라고 하겠다.</p><p></p><p class=\"font-light leading-normal mt-4 mb-2\">단위연산의 실행횟수는 입력값에 의해 좌우된다.</p><p class=\"font-light leading-normal mt-4 mb-2\">n개의 원소를 가진 배열에서 x를 찾는 문제를 보자.<br/>\n비교문을 단위연산으로 할 때, 단위연산은 최소 1번, 최대 n번 일어난다.</p><p class=\"font-light leading-normal mt-4 mb-2\">n개의 원소를 모두 더하는 문제라면 단위연산은 고정적으로 n번 일어난다.</p><p></p><p class=\"font-light leading-normal mt-4 mb-2\">이렇게 입력 n에 대해 알고리즘을 통해 일어나는 단위연산의 수를 <strong class=\"font-medium\">시간복잡도</strong>라고 한다.</p><p></p><p class=\"font-light leading-normal mt-4 mb-2\">다음의 알고리즘을 예로 들자.</p><pre class=\"rounded-md [&amp;_code]:py-0 [&amp;_code]:px-0 line-numbers language-js\"><code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2 language-js\"><span class=\"code-line\"><span class=\"token keyword\">function</span> <span class=\"token function\">sum</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token spread operator\">...</span>args</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">  <span class=\"token keyword\">let</span> total <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">  <span class=\"token keyword control-flow\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> args<span class=\"token punctuation\">.</span><span class=\"token property-access\">length</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">    total <span class=\"token operator\">+=</span> args<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">  <span class=\"token punctuation\">}</span>\n</span><span class=\"code-line\">  <span class=\"token keyword control-flow\">return</span> total<span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\"><span class=\"token punctuation\">}</span>\n</span></code></pre><p></p><p class=\"font-light leading-normal mt-4 mb-2\">모든 원소를 더하는 연산을 하는 위의 sum 알고리즘은 비교문을 단위연산으로 했을 때 <code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\">args.length</code> 만큼의 시간복잡도를 가진다.</p><p></p></section><section aria-labelledby=\"메모리를-효율적으로-사용했다는-것\"><h3 class=\"mt-7 mb-2 text-heading3 font-semibold leading-normal\" id=\"메모리를-효율적으로-사용했다는-것\"><a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#메모리를-효율적으로-사용했다는-것\"><span class=\"icon icon-link\"></span></a>메모리를 효율적으로 사용했다는 것</h3><p class=\"font-light leading-normal mt-4 mb-2\">메모리를 효율적으로 사용했다는 것도 마찬가지로 물리적인 계산이 아닌 논리적인 단위로 접근한다. 사용한 단위연산의 수를 <strong class=\"font-medium\">공간복잡도</strong>라고 부른다.</p><p></p><p class=\"font-light leading-normal mt-4 mb-2\">같은 알고리즘에서 공간복잡도를 계산해보자</p><pre class=\"rounded-md [&amp;_code]:py-0 [&amp;_code]:px-0 line-numbers language-js\"><code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2 language-js\"><span class=\"code-line\"><span class=\"token keyword\">function</span> <span class=\"token function\">sum</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token spread operator\">...</span>args</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">  <span class=\"token keyword\">let</span> total <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">  <span class=\"token keyword control-flow\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> args<span class=\"token punctuation\">.</span><span class=\"token property-access\">length</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">    total <span class=\"token operator\">+=</span> args<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">  <span class=\"token punctuation\">}</span>\n</span><span class=\"code-line\">  <span class=\"token keyword control-flow\">return</span> total<span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\"><span class=\"token punctuation\">}</span>\n</span></code></pre><p class=\"font-light leading-normal mt-4 mb-2\">자바스크립트는 변수가 고정적으로 double형이므로 8byte를 사용한다. sum 함수가 동작하는 동안 총 2개의 변수 total, i 가 사용되므로 공간복잡도는 16byte다.</p><p></p></section><section aria-labelledby=\"효율적인-알고리즘이란\"><h3 class=\"mt-7 mb-2 text-heading3 font-semibold leading-normal\" id=\"효율적인-알고리즘이란\"><a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#효율적인-알고리즘이란\"><span class=\"icon icon-link\"></span></a>효율적인 알고리즘이란?</h3><p class=\"font-light leading-normal mt-4 mb-2\">지금까지의 정의를 바탕으로 효율적인 알고리즘의 정의를 내리자.</p><blockquote class=\"my-4 border-l-4 border-primary p-6 bg-gray-100 text-gray-700 [&amp;_*:first-child]:mt-0 [&amp;_*:last-child]:mb-0\">\n<p class=\"font-light leading-normal mt-4 mb-2\">알고리즘이 효율적이다 = 시간복잡도와 공간복잡도가 비교적 낮다</p>\n</blockquote><p class=\"font-light leading-normal mt-4 mb-2\">상황에 따라서 공간복잡도가 높아도 시간복잡도가 더 낮은 알고리즘이 있을 수 있고 그 반대도 있을 수 있다. 이런 경우 문제에 따라 적절한(더 효율적인)알고리즘이 달라진다. 극한으로 적은 메모리를 가진 상황이면 공간복잡도가 더 적은 알고리즘이 효율적인 알고리즘이 될 수도 있을 것이다.</p></section></section><section aria-labelledby=\"최선-평균-최악의-복잡도\"><h2 class=\"mt-8 mb-3 text-heading2 font-semibold leading-normal\" id=\"최선-평균-최악의-복잡도\"><a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#최선-평균-최악의-복잡도\"><span class=\"icon icon-link\"></span></a>최선, 평균, 최악의 복잡도</h2><p class=\"font-light leading-normal mt-4 mb-2\">앞서 알고리즘은 입력에 따라 실행되는 단위연산의 수가 달라질 수 있다고 언급했다. n의 길이를 갖는 배열 A에서 원소 x의 위치를 찾는 문제를 예로 들자.</p><p></p><pre class=\"rounded-md [&amp;_code]:py-0 [&amp;_code]:px-0 line-numbers language-ts\"><code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2 language-ts\"><span class=\"code-line\"><span class=\"token comment\">// 설명을 위해 언어를 타입스크립트로 바꾸겠다.</span>\n</span><span class=\"code-line\"><span class=\"token keyword\">function</span> <span class=\"token function\">findIndex</span><span class=\"token punctuation\">(</span><span class=\"token constant\">A</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> x<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">  <span class=\"token keyword\">const</span> n <span class=\"token operator\">=</span> <span class=\"token constant\">A</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">A</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> x<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> i<span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">  <span class=\"token punctuation\">}</span>\n</span><span class=\"code-line\">  <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\"><span class=\"token punctuation\">}</span>\n</span></code></pre><p></p><p class=\"font-light leading-normal mt-4 mb-2\">만약 A의 0번 인덱스에서 x를 찾았다면 시간복잡도는 1이다. 그리고 이보다 낮은 시간복잡도가 나올 수 있는 경우는 없다.</p><p class=\"font-light leading-normal mt-4 mb-2\">만약 A 배열에서 x를 찾지 못했다면, 시간복잡도는 n이다. 그리고 이보다 높은 시간복잡도가 나올 수 있는 경우는 없다.</p><p class=\"font-light leading-normal mt-4 mb-2\">위의 케이스는 각각 최선의 시간복잡도, 최악의 시간복잡도이다.</p><blockquote class=\"my-4 border-l-4 border-primary p-6 bg-gray-100 text-gray-700 [&amp;_*:first-child]:mt-0 [&amp;_*:last-child]:mb-0\">\n<p class=\"font-light leading-normal mt-4 mb-2\">최선의 시간복잡도 = 1</p>\n<p class=\"font-light leading-normal mt-4 mb-2\">최악의 시간복잡도 = n</p>\n</blockquote><p></p><p class=\"font-light leading-normal mt-4 mb-2\">평균복잡도도 이야기해볼 수 있을 것이다. 이를 위해선 x가 A 배열 안의 특정 위치에 존재할 확률을 고려해야한다. 공평하게 1/n이라고 하자. 부가 조건으로 x는 A배열의 원소중 하나여야한다. (이 조건이 없으면 x를 못찾는 경우를 계산해야해서 복잡해진다)</p><p></p><blockquote class=\"my-4 border-l-4 border-primary p-6 bg-gray-100 text-gray-700 [&amp;_*:first-child]:mt-0 [&amp;_*:last-child]:mb-0\">\n<p class=\"font-light leading-normal mt-4 mb-2\">x를 1번만에 찾을 확률 = x를 2번만에 찾을 확률 = ... = x를 n번만에 찾을 확률 = 1/n</p>\n</blockquote><p class=\"font-light leading-normal mt-4 mb-2\">x가 k 인덱스에 위치할 때 단위 연산은 k+1번 일어난다.</p><p class=\"font-light leading-normal mt-4 mb-2\">이를 통해 단위연산의 평균은 다음과 같이 계산된다.</p><p></p><blockquote class=\"my-4 border-l-4 border-primary p-6 bg-gray-100 text-gray-700 [&amp;_*:first-child]:mt-0 [&amp;_*:last-child]:mb-0\">\n<p class=\"font-light leading-normal mt-4 mb-2\">(1+2+3+...+n)/n = n*(n+1)/(2*n) = (n+1)/2</p>\n</blockquote><p class=\"font-light leading-normal mt-4 mb-2\">평균 시간복잡도는 (n+1)/2로 n=10일 때 5.5번의 단위연산이 평균적으로 발생한다.</p><p class=\"font-light leading-normal mt-4 mb-2\">당연히 현실 세계에선 위와 같이 k가 위치할 확률이 공평하지 않을 가능성이 크기 때문에 평균 시간복잡도의 계산이 더 복잡해질 가능성이 크다.</p><p></p><section aria-labelledby=\"근데-이건-왜-언급하나요\"><h3 class=\"mt-7 mb-2 text-heading3 font-semibold leading-normal\" id=\"근데-이건-왜-언급하나요\"><a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#근데-이건-왜-언급하나요\"><span class=\"icon icon-link\"></span></a>근데 이건 왜 언급하나요?</h3><p class=\"font-light leading-normal mt-4 mb-2\">문제에 따라 다른 복잡도를 비교해야할 수 있다. 최악의 케이스는 대부분의 문제에서 고려해야하고 그래서 중요하다. 하지만 고객이 얼마나 최고의 시나리오에서 얼마나 빨리 배송을 받을 수 있는가? 배송은 평균적으로 얼마나 소요되나? 등을 계산해야하는 문제를 마주할 수도 있다. 그러니 내가 어떤 문제를 마주하고 있는가를 알고 그에 맞는 복잡도를 고려할 수 있기 위해 위의 개념을 언급한다. 그리고 이는 복잡도의 비교에서 이어진다.</p></section></section><section aria-labelledby=\"복잡도의-비교-big-o-표기법\"><h2 class=\"mt-8 mb-3 text-heading2 font-semibold leading-normal\" id=\"복잡도의-비교-big-o-표기법\"><a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#복잡도의-비교-big-o-표기법\"><span class=\"icon icon-link\"></span></a>복잡도의 비교, Big-O 표기법</h2><p class=\"font-light leading-normal mt-4 mb-2\">아쉽지만 <del>마크다운에서 LaTex를 표기하는 방법을 아직 잘 몰라서</del> 학문적인 깊이를 파기 위해 글을 작성중인 것은 아니기 때문에 수학적인 내용을 대거 패스할 예정이다. 그렇지만 Big-O가 어떤 개념인가는 살짝 짚고 가자.</p><img src=\"./images/n_compare_graph.png\" width=\"512\" alt=\"\"/><p class=\"font-light leading-normal mt-4 mb-2\">A알고리즘의 시간복잡도는 n^2, B알고리즘의 시간복잡도는 n+12이라고 하자. <code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\">n&lt;4</code>일때 까지는 B알고리즘보다 A알고리즘의 시간복잡도가 더 낮다는 것을 알 수 있다. 하지만 n이 4보다 커지는 순간 A 알고리즘의 시간복잡도는 B알고리즘보다 항상 더 높아진다.</p><p></p><p class=\"font-light leading-normal mt-4 mb-2\">마찬가지로 다른 낮은 차수의 항들이 어떻게 됐든 최고차항이 n^2인 알고리즘보다 최고차항이 n^3인 알고리즘이 나중엔 시간복잡도가 더 높게 된다.</p><p></p><p class=\"font-light leading-normal mt-4 mb-2\">이처럼 n이 충분히 클때 최고차항이 높은 복잡도를 가진 알고리즘이 최고차항이 낮은 복잡도를 가진 알고리즘보다 높은 복잡도를 가지게 된다.</p><p></p><p class=\"font-light leading-normal mt-4 mb-2\">복잡도를 나타내는 식에서 최고차항만 뽑아서 Big-O 표기법 <code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\">O()</code>으로 나타낼 수 있다. 예를 들어 <code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\">O(3*n^2+10n)</code>은 <code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\">O(n^2)</code>과 같다.</p><p class=\"font-light leading-normal mt-4 mb-2\">그럼 Big-O 표기는 왜 사용하는가? Big-O는 일종의 분류다. <code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\">O(n^2)</code>는 n^2정도의 최악시간복잡도를 가지는 알고리즘 집합을 가리킨다.</p><p class=\"font-light leading-normal mt-4 mb-2\">이 분류들은 비교가 가능하다. <code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\">O(2^n)</code>은 <code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\">O(n^2)</code>보다 크며 이 말은 n이 무한으로 커지면 <code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\">O(2^n)</code>집합에 속한 알고리즘들은 언젠가 <code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\">O(n^2)</code>집합에 속한 알고리즘보다 높은 시간복잡도를 가지게 된다는 뜻이다.</p><blockquote class=\"my-4 border-l-4 border-primary p-6 bg-gray-100 text-gray-700 [&amp;_*:first-child]:mt-0 [&amp;_*:last-child]:mb-0\">\n<p class=\"font-light leading-normal mt-4 mb-2\">O(n^2+10n) = O(100000<em class=\"[img+&amp;]:block [img+&amp;]:text-center [img+&amp;]:text-gray-400 [img+&amp;]:font-thin [img+&amp;]:not-italic [img+&amp;]:text-sm [img+&amp;]:-translate-y-10\">n^2) = O(0.00000001</em>n^2)<br/>\n즉, 이들끼리는 n이 무한히 커질 때 한쪽의 최악시간복잡도가 크거나 작다고 할 수 없다.<br/></p>\n<p class=\"font-light leading-normal mt-4 mb-2\">하지만 O(n^2) &lt; O(n^3)<br/>\n즉, 최고차항이 다르면 n이 무한히 커질 때 둘의 최악시간복잡도는 다르다. 그리고 높은 차수를 가진 쪽이 낮은 차수를 가진 쪽보다 더 큰 최악시간복잡도를 가지게 된다.</p>\n</blockquote><p></p><img src=\"./images/computational_complexity.png\" width=\"512\" alt=\"\"/><p></p><p class=\"font-light leading-normal mt-4 mb-2\">대체로 사용되는 분류는 n! 계열, 2^n 계열, n^2계열, nlogn계열, n계열, logn계열, 상수계열이 있다.</p><p class=\"font-light leading-normal mt-4 mb-2\">복잡도 비교는 <code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\">O(n!) &gt; O(2^n) &gt; O(n^2) &gt; O(nlogn) &gt; O(n) &gt; O(logn) &gt; O(상수)</code>이다.</p><p></p><p class=\"font-light leading-normal mt-4 mb-2\">이 이상의 수학적인 정의와 증명은 빅오표기법으로 구글링해서 알아보자.</p><p></p><section aria-labelledby=\"실용적인-관점의-big-o\"><h3 class=\"mt-7 mb-2 text-heading3 font-semibold leading-normal\" id=\"실용적인-관점의-big-o\"><a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#실용적인-관점의-big-o\"><span class=\"icon icon-link\"></span></a>실용적인 관점의 Big-O</h3><p class=\"font-light leading-normal mt-4 mb-2\">알고리즘 문제를 풀어본 사람은 알겠지만, 대부분의 알고리즘 문제에선 구현한 알고리즘의 Big-O만 봐도 조건을 통과할 수 있는지 파악이 가능하다.\n이는 알고리즘 문제가 <code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\">O(n^2)</code> 해법이 아닌 <code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\">O(nlogn)</code> 해법을 떠올릴 수 있는가?를 물어보는 식이라 그렇다. 고로 문제를 마주하면 Big-O부터 계산해보자.</p></section></section></section><button class=\"__trds __trds button trds-inline-flex trds-justify-center trds-place-items-center trds-whitespace-nowrap trds-rounded-lg trds-text-md trds-font-medium trds-gap-2 trds-transition-colors trds-cursor-pointer disabled:trds-cursor-not-allowed disabled:trds-opacity-50 trds-bg-neutral trds-text-fg-neutral disabled:trds-bg-neutral enabled:hover:trds-bg-neutral-hover enabled:active:trds-bg-neutral-pressed __trds trds-h-11 trds-w-11 trds-px-0 trds-py-0\" type=\"button\" aria-disabled=\"false\" aria-busy=\"false\" aria-label=\"Share this article\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-share\"><path d=\"M4 12v8a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-8\"></path><polyline points=\"16 6 12 2 8 6\"></polyline><line x1=\"12\" x2=\"12\" y1=\"2\" y2=\"15\"></line></svg></button><div data-scope=\"toast\" data-part=\"group\" dir=\"ltr\" tabindex=\"-1\" aria-label=\"bottom Notifications alt+T\" id=\"toast-group:bottom\" data-placement=\"bottom\" data-side=\"bottom\" data-align=\"center\" aria-live=\"polite\" role=\"region\" style=\"position:fixed;pointer-events:none;display:flex;flex-direction:column;--gap:16px;--first-height:0px;z-index:2147483647;align-items:center;bottom:max(env(safe-area-inset-bottom, 0px), 1rem);inset-inline-end:calc(env(safe-area-inset-right, 0px) + 1rem);inset-inline-start:calc(env(safe-area-inset-left, 0px) + 1rem)\"></div></div><section id=\"author\"><div class=\"flex flex-row gap-4 items-center\"><div class=\"__trds trds-animate-shimmer trds-bg-clip-padding-box trds-text-transparent trds-cursor-default trds-pointer-events-none trds-select-none before::trds-invisible after::trds-invisible [&amp;_*]:trds-invisible trds-rounded-lg rounded-full\"><div data-scope=\"avatar\" data-part=\"root\" dir=\"ltr\" id=\"avatar::Rn7obtsra:\" class=\"trds-rounded-full trds-overflow-hidden w-16 h-16\"><img data-scope=\"avatar\" data-part=\"image\" hidden=\"\" dir=\"ltr\" id=\"avatar::Rn7obtsra::image\" data-state=\"hidden\" class=\"trds-bg-muted\"/><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"64\" height=\"64\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-user trds-bg-muted trds-w-full trds-h-full\" data-scope=\"avatar\" data-part=\"fallback\" dir=\"ltr\" id=\"avatar::Rn7obtsra::fallback\" data-state=\"visible\"><path d=\"M19 21v-2a4 4 0 0 0-4-4H9a4 4 0 0 0-4 4v2\"></path><circle cx=\"12\" cy=\"7\" r=\"4\"></circle></svg></div></div><div class=\"text-pretty flex flex-col gap-2\"><div class=\"__trds trds-animate-shimmer trds-bg-clip-padding-box trds-text-transparent trds-cursor-default trds-pointer-events-none trds-select-none before::trds-invisible after::trds-invisible [&amp;_*]:trds-invisible trds-rounded-lg h-fit w-fit\"><strong class=\"inline-block h-6 min-w-36\"> </strong></div><div class=\"__trds trds-animate-shimmer trds-bg-clip-padding-box trds-text-transparent trds-cursor-default trds-pointer-events-none trds-select-none before::trds-invisible after::trds-invisible [&amp;_*]:trds-invisible trds-rounded-lg h-fit w-fit\"><p class=\"whitespace-pre-wrap h-6 min-w-64\"></p></div></div></div></section><section><div class=\"giscus w-full min-w-screen-md\"></div></section></article></main><footer class=\"self-center w-full max-w-screen-md px-4 h-96\"><p>© 2024-<!-- -->2024<!-- --> <!-- -->dev2820<!-- -->. All rights reserved.</p></footer><script src=\"/next-blog/_next/static/chunks/webpack-8f27d743501d147d.js\" async=\"\"></script><script>(self.__next_f=self.__next_f||[]).push([0]);self.__next_f.push([2,null])</script><script>self.__next_f.push([1,\"1:HL[\\\"/next-blog/_next/static/media/3e7b7e3fd4560936-s.p.woff2\\\",\\\"font\\\",{\\\"crossOrigin\\\":\\\"\\\",\\\"type\\\":\\\"font/woff2\\\"}]\\n2:HL[\\\"/next-blog/_next/static/media/ff840cfebfb63b0c-s.p.woff2\\\",\\\"font\\\",{\\\"crossOrigin\\\":\\\"\\\",\\\"type\\\":\\\"font/woff2\\\"}]\\n3:HL[\\\"/next-blog/_next/static/css/16077bc16defb9b9.css\\\",\\\"style\\\"]\\n4:HL[\\\"/next-blog/_next/static/css/203da25389b4eeab.css\\\",\\\"style\\\"]\\n\"])</script><script>self.__next_f.push([1,\"5:I[5726,[],\\\"\\\"]\\n8:I[1699,[],\\\"\\\"]\\na:I[2579,[],\\\"\\\"]\\nb:I[3805,[\\\"805\\\",\\\"static/chunks/805-a8af350d35fb9160.js\\\",\\\"418\\\",\\\"static/chunks/app/posts/%5Bslug%5D/layout-1cf1294e1a2539f4.js\\\"],\\\"\\\"]\\nc:I[9618,[\\\"618\\\",\\\"static/chunks/618-f2bb34773a0d24b2.js\\\",\\\"991\\\",\\\"static/chunks/app/posts/page-e8c6275c8ebfad50.js\\\"],\\\"\\\"]\\nd:I[6210,[\\\"618\\\",\\\"static/chunks/618-f2bb34773a0d24b2.js\\\",\\\"372\\\",\\\"static/chunks/372-b649e69f56e8eb19.js\\\",\\\"185\\\",\\\"static/chunks/app/layout-c7fa40d911107206.js\\\"],\\\"BrandLogo\\\"]\\ne:I[9205,[\\\"618\\\",\\\"static/chunks/618-f2bb34773a0d24b2.js\\\",\\\"372\\\",\\\"static/chunks/372-b649e69f56e8eb19.js\\\",\\\"185\\\",\\\"static/chunks/app/layout-c7fa40d911107206.js\\\"],\\\"GlobalNavigationBar\\\"]\\n10:I[3141,[],\\\"\\\"]\\n9:[\\\"slug\\\",\\\"algorithm-0-begin\\\",\\\"d\\\"]\\n11:[]\\n\"])</script><script>self.__next_f.push([1,\"0:[[[\\\"$\\\",\\\"link\\\",\\\"0\\\",{\\\"rel\\\":\\\"stylesheet\\\",\\\"href\\\":\\\"/next-blog/_next/static/css/16077bc16defb9b9.css\\\",\\\"precedence\\\":\\\"next\\\",\\\"crossOrigin\\\":\\\"$undefined\\\"}]],[\\\"$\\\",\\\"$L5\\\",null,{\\\"buildId\\\":\\\"FkDD4ed24GsUGsJlrpxW5\\\",\\\"assetPrefix\\\":\\\"/next-blog\\\",\\\"initialCanonicalUrl\\\":\\\"/posts/algorithm-0-begin\\\",\\\"initialTree\\\":[\\\"\\\",{\\\"children\\\":[\\\"posts\\\",{\\\"children\\\":[[\\\"slug\\\",\\\"algorithm-0-begin\\\",\\\"d\\\"],{\\\"children\\\":[\\\"__PAGE__?{\\\\\\\"slug\\\\\\\":\\\\\\\"algorithm-0-begin\\\\\\\"}\\\",{}]}]}]},\\\"$undefined\\\",\\\"$undefined\\\",true],\\\"initialSeedData\\\":[\\\"\\\",{\\\"children\\\":[\\\"posts\\\",{\\\"children\\\":[[\\\"slug\\\",\\\"algorithm-0-begin\\\",\\\"d\\\"],{\\\"children\\\":[\\\"__PAGE__\\\",{},[[\\\"$L6\\\",\\\"$L7\\\"],null],null]},[[[\\\"$\\\",\\\"$L8\\\",null,{\\\"parallelRouterKey\\\":\\\"children\\\",\\\"segmentPath\\\":[\\\"children\\\",\\\"posts\\\",\\\"children\\\",\\\"$9\\\",\\\"children\\\"],\\\"error\\\":\\\"$undefined\\\",\\\"errorStyles\\\":\\\"$undefined\\\",\\\"errorScripts\\\":\\\"$undefined\\\",\\\"template\\\":[\\\"$\\\",\\\"$La\\\",null,{}],\\\"templateStyles\\\":\\\"$undefined\\\",\\\"templateScripts\\\":\\\"$undefined\\\",\\\"notFound\\\":\\\"$undefined\\\",\\\"notFoundStyles\\\":\\\"$undefined\\\",\\\"styles\\\":null}],[\\\"$\\\",\\\"$Lb\\\",null,{\\\"src\\\":\\\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/prism.min.js\\\"}],[\\\"$\\\",\\\"$Lb\\\",null,{\\\"src\\\":\\\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-javascript.min.js\\\"}],[\\\"$\\\",\\\"$Lb\\\",null,{\\\"src\\\":\\\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-typescript.min.js\\\"}],[\\\"$\\\",\\\"$Lb\\\",null,{\\\"src\\\":\\\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-jsx.min.js\\\"}],[\\\"$\\\",\\\"$Lb\\\",null,{\\\"src\\\":\\\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-tsx.min.js\\\"}],[\\\"$\\\",\\\"$Lb\\\",null,{\\\"src\\\":\\\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-c.min.js\\\"}],[\\\"$\\\",\\\"$Lb\\\",null,{\\\"src\\\":\\\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/plugins/line-numbers/prism-line-numbers.min.js\\\"}]],null],null]},[\\\"$\\\",\\\"$L8\\\",null,{\\\"parallelRouterKey\\\":\\\"children\\\",\\\"segmentPath\\\":[\\\"children\\\",\\\"posts\\\",\\\"children\\\"],\\\"error\\\":\\\"$undefined\\\",\\\"errorStyles\\\":\\\"$undefined\\\",\\\"errorScripts\\\":\\\"$undefined\\\",\\\"template\\\":[\\\"$\\\",\\\"$La\\\",null,{}],\\\"templateStyles\\\":\\\"$undefined\\\",\\\"templateScripts\\\":\\\"$undefined\\\",\\\"notFound\\\":\\\"$undefined\\\",\\\"notFoundStyles\\\":\\\"$undefined\\\",\\\"styles\\\":[[\\\"$\\\",\\\"link\\\",\\\"0\\\",{\\\"rel\\\":\\\"stylesheet\\\",\\\"href\\\":\\\"/next-blog/_next/static/css/203da25389b4eeab.css\\\",\\\"precedence\\\":\\\"next\\\",\\\"crossOrigin\\\":\\\"$undefined\\\"}]]}],null]},[[\\\"$\\\",\\\"html\\\",null,{\\\"lang\\\":\\\"kr\\\",\\\"className\\\":\\\"__variable_fa65fd __variable_7691e4 scroll-smooth\\\",\\\"children\\\":[\\\"$\\\",\\\"body\\\",null,{\\\"className\\\":\\\"__className_fa65fd flex flex-col text-gray-800\\\",\\\"children\\\":[[\\\"$\\\",\\\"link\\\",null,{\\\"href\\\":\\\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/plugins/line-numbers/prism-line-numbers.min.css\\\",\\\"rel\\\":\\\"stylesheet\\\"}],[\\\"$\\\",\\\"header\\\",null,{\\\"className\\\":\\\"flex flex-row justify-center py-2 items-center self-center w-full max-w-screen-md px-4\\\",\\\"children\\\":[[\\\"$\\\",\\\"$Lc\\\",null,{\\\"href\\\":\\\"/\\\",\\\"children\\\":[\\\"$\\\",\\\"$Ld\\\",null,{\\\"height\\\":48}]}],[\\\"$\\\",\\\"div\\\",null,{\\\"className\\\":\\\"flex-1\\\"}],[\\\"$\\\",\\\"$Le\\\",null,{}]]}],[\\\"$\\\",\\\"main\\\",null,{\\\"className\\\":\\\"self-center w-full max-w-screen-md p-4 text-gray-800\\\",\\\"children\\\":[\\\"$\\\",\\\"$L8\\\",null,{\\\"parallelRouterKey\\\":\\\"children\\\",\\\"segmentPath\\\":[\\\"children\\\"],\\\"error\\\":\\\"$undefined\\\",\\\"errorStyles\\\":\\\"$undefined\\\",\\\"errorScripts\\\":\\\"$undefined\\\",\\\"template\\\":[\\\"$\\\",\\\"$La\\\",null,{}],\\\"templateStyles\\\":\\\"$undefined\\\",\\\"templateScripts\\\":\\\"$undefined\\\",\\\"notFound\\\":[\\\"$\\\",\\\"div\\\",null,{\\\"children\\\":[[\\\"$\\\",\\\"h2\\\",null,{\\\"children\\\":\\\"Not Found\\\"}],[\\\"$\\\",\\\"p\\\",null,{\\\"children\\\":\\\"Could not find requested resource\\\"}],[\\\"$\\\",\\\"$Lc\\\",null,{\\\"href\\\":\\\"/\\\",\\\"children\\\":\\\"Return Home\\\"}]]}],\\\"notFoundStyles\\\":[],\\\"styles\\\":null}]}],[\\\"$\\\",\\\"footer\\\",null,{\\\"className\\\":\\\"self-center w-full max-w-screen-md px-4 h-96\\\",\\\"children\\\":[\\\"$\\\",\\\"p\\\",null,{\\\"children\\\":[\\\"© 2024-\\\",2024,\\\" \\\",\\\"dev2820\\\",\\\". All rights reserved.\\\"]}]}]]}]}],null],null],\\\"couldBeIntercepted\\\":false,\\\"initialHead\\\":[null,\\\"$Lf\\\"],\\\"globalErrorComponent\\\":\\\"$10\\\",\\\"missingSlots\\\":\\\"$W11\\\"}]]\\n\"])</script><script>self.__next_f.push([1,\"12:I[2870,[\\\"587\\\",\\\"static/chunks/952ad60e-7cdac7b6bf36214c.js\\\",\\\"618\\\",\\\"static/chunks/618-f2bb34773a0d24b2.js\\\",\\\"372\\\",\\\"static/chunks/372-b649e69f56e8eb19.js\\\",\\\"805\\\",\\\"static/chunks/805-a8af350d35fb9160.js\\\",\\\"333\\\",\\\"static/chunks/app/posts/%5Bslug%5D/page-e951164d6ad6c144.js\\\"],\\\"TableOfContents\\\"]\\n13:I[6894,[\\\"587\\\",\\\"static/chunks/952ad60e-7cdac7b6bf36214c.js\\\",\\\"618\\\",\\\"static/chunks/618-f2bb34773a0d24b2.js\\\",\\\"372\\\",\\\"static/chunks/372-b649e69f56e8eb19.js\\\",\\\"805\\\",\\\"static/chunks/805-a8af350d35fb9160.js\\\",\\\"333\\\",\\\"static/chunks/app/posts/%5Bslug%5D/page-e951164d6ad6c144.js\\\"],\\\"Anchor\\\"]\\n14:I[4547,[\\\"587\\\",\\\"static/chunks/952ad60e-7cdac7b6bf36214c.js\\\",\\\"618\\\",\\\"static/chunks/618-f2bb34773a0d24b2.js\\\",\\\"372\\\",\\\"static/chunks/372-b649e69f56e8eb19.js\\\",\\\"805\\\",\\\"static/chunks/805-a8af350d35fb9160.js\\\",\\\"333\\\",\\\"static/chunks/app/posts/%5Bslug%5D/page-e951164d6ad6c144.js\\\"],\\\"ShareButton\\\"]\\n15:I[6398,[\\\"587\\\",\\\"static/chunks/952ad60e-7cdac7b6bf36214c.js\\\",\\\"618\\\",\\\"static/chunks/618-f2bb34773a0d24b2.js\\\",\\\"372\\\",\\\"static/chunks/372-b649e69f56e8eb19.js\\\",\\\"805\\\",\\\"static/chunks/805-a8af350d35fb9160.js\\\",\\\"333\\\",\\\"static/chunks/app/posts/%5Bslug%5D/page-e951164d6ad6c144.js\\\"],\\\"AuthorInfo\\\"]\\n\"])</script><script>self.__next_f.push([1,\"7:[\\\"$\\\",\\\"article\\\",null,{\\\"className\\\":\\\"relative\\\",\\\"children\\\":[[\\\"$\\\",\\\"header\\\",null,{\\\"id\\\":\\\"post-meta\\\",\\\"children\\\":[\\\"$undefined\\\",[\\\"$\\\",\\\"h1\\\",null,{\\\"className\\\":\\\"mt-10 mb-4 text-heading1 font-bold leading-normal\\\",\\\"id\\\":\\\"algorithm-0-begin\\\",\\\"children\\\":\\\"algorithm-0-begin\\\"}],[\\\"$\\\",\\\"time\\\",null,{\\\"dateTime\\\":\\\"2024-03-31\\\",\\\"aria-label\\\":\\\"Published on 2024-03-31\\\",\\\"children\\\":\\\"2024-03-31\\\"}],\\\" \\\",\\\"|\\\",\\\" \\\",[\\\"$\\\",\\\"time\\\",null,{\\\"dateTime\\\":\\\"PT2M\\\",\\\"aria-label\\\":\\\"Estimated reading time\\\",\\\"children\\\":[2,\\\" mins\\\"]}]]}],[\\\"$\\\",\\\"div\\\",null,{\\\"id\\\":\\\"content\\\",\\\"className\\\":\\\"relative\\\",\\\"children\\\":[[\\\"$\\\",\\\"div\\\",null,{\\\"id\\\":\\\"table-of-header\\\",\\\"className\\\":\\\"absolute -right-12 translate-x-full h-full w-52 desktop:block hidden\\\",\\\"children\\\":[\\\"$\\\",\\\"$L12\\\",null,{\\\"toc\\\":[{\\\"level\\\":2,\\\"content\\\":\\\"이 글을 작성하는 이유\\\",\\\"slug\\\":\\\"#이-글을-작성하는-이유\\\"},{\\\"level\\\":2,\\\"content\\\":\\\"왜 알고리즘을 공부해야할까?\\\",\\\"slug\\\":\\\"#왜-알고리즘을-공부해야할까\\\"},{\\\"level\\\":2,\\\"content\\\":\\\"알고리즘의 효율성 분석하기\\\",\\\"slug\\\":\\\"#알고리즘의-효율성-분석하기\\\"},{\\\"level\\\":3,\\\"content\\\":\\\"CPU를 효율적으로 사용했다는 것\\\",\\\"slug\\\":\\\"#cpu를-효율적으로-사용했다는-것\\\"},{\\\"level\\\":3,\\\"content\\\":\\\"메모리를 효율적으로 사용했다는 것\\\",\\\"slug\\\":\\\"#메모리를-효율적으로-사용했다는-것\\\"},{\\\"level\\\":3,\\\"content\\\":\\\"효율적인 알고리즘이란?\\\",\\\"slug\\\":\\\"#효율적인-알고리즘이란\\\"},{\\\"level\\\":2,\\\"content\\\":\\\"최선, 평균, 최악의 복잡도\\\",\\\"slug\\\":\\\"#최선-평균-최악의-복잡도\\\"},{\\\"level\\\":3,\\\"content\\\":\\\"근데 이건 왜 언급하나요?\\\",\\\"slug\\\":\\\"#근데-이건-왜-언급하나요\\\"},{\\\"level\\\":2,\\\"content\\\":\\\"복잡도의 비교, Big-O 표기법\\\",\\\"slug\\\":\\\"#복잡도의-비교-big-o-표기법\\\"},{\\\"level\\\":3,\\\"content\\\":\\\"실용적인 관점의 Big-O\\\",\\\"slug\\\":\\\"#실용적인-관점의-big-o\\\"}],\\\"className\\\":\\\"sticky top-24\\\"}]}],[\\\"$\\\",\\\"section\\\",null,{\\\"aria-labelledby\\\":\\\"0-시작하기\\\",\\\"children\\\":[[\\\"$\\\",\\\"h1\\\",null,{\\\"className\\\":\\\"mt-10 mb-4 text-heading1 font-bold leading-normal\\\",\\\"id\\\":\\\"0-시작하기\\\",\\\"children\\\":[[\\\"$\\\",\\\"$L13\\\",null,{\\\"aria-hidden\\\":\\\"true\\\",\\\"tabIndex\\\":\\\"-1\\\",\\\"href\\\":\\\"#0-시작하기\\\",\\\"children\\\":[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"icon icon-link\\\"}]}],\\\"0. 시작하기\\\"]}],[\\\"$\\\",\\\"section\\\",null,{\\\"aria-labelledby\\\":\\\"이-글을-작성하는-이유\\\",\\\"children\\\":[[\\\"$\\\",\\\"h2\\\",null,{\\\"className\\\":\\\"mt-8 mb-3 text-heading2 font-semibold leading-normal\\\",\\\"id\\\":\\\"이-글을-작성하는-이유\\\",\\\"children\\\":[[\\\"$\\\",\\\"$L13\\\",null,{\\\"aria-hidden\\\":\\\"true\\\",\\\"tabIndex\\\":\\\"-1\\\",\\\"href\\\":\\\"#이-글을-작성하는-이유\\\",\\\"children\\\":[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"icon icon-link\\\"}]}],\\\"이 글을 작성하는 이유\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"학부를 졸업하고 1년이 지난 시점에서 알게된 사실이 있다.\\\"}],[\\\"$\\\",\\\"ol\\\",null,{\\\"className\\\":\\\"list-decimal my-4\\\",\\\"children\\\":[\\\"\\\\n\\\",[\\\"$\\\",\\\"li\\\",null,{\\\"className\\\":\\\"text-paragraph font-light leading-normal py-1 ml-6\\\",\\\"children\\\":\\\"CS는 프론트,백,앱에 상관없이 활용할 수 있는 지식이다.\\\"}],\\\"\\\\n\\\",[\\\"$\\\",\\\"li\\\",null,{\\\"className\\\":\\\"text-paragraph font-light leading-normal py-1 ml-6\\\",\\\"children\\\":\\\"이미 공부한 내용도 시간이 지나 다시 공부하면 얻을 수 있는 인사이트가 달라진다.\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"1번은 요즘 들어 크게 다가오고 있는 사실이다. 앱개발도 해보고, 서버 개발도 해보며 느낀 점은, 어떤 것을 개발하든 그 안에서 결국 비슷한 고민을 하게 되며, 그 고민을 해결하기 위해선 CS지식이 활용된다는 사실이다.\\\"}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"2번은 자바스크립트 책을 1년뒤 다시 읽으며 그 전에 이해하지 못했던 개념과 인사이트를 얻는 경험을 하며 깨달게 되었다.\\\"}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"회사에서 기능 구현을 위해 고전하다 문뜩 학부생때 공부했던 내용도 지금 다시 공부하면 새로운 인사이트를 얻을 수 있지 않을까? 그리고 더 성장한 개발자가 될 수 있지 않을까?라는 생각을 하게 되었다.\\\"}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"그래서 무작정 학부생 때 사용한 알고리즘 교재를 펼처들고 읽기 시작했다. 하지만 1장을 다 읽은 시점에서 이 인사이트를 나 혼자만 알기보다 지금 정리해두면 미래의 나 또는 지나가다 발견한 누군가에게 도움일 될 것이라는 기대를 하게 됐다.\\\"}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"결론적으로 학부생때 읽었던 알고리즘 교재를 다시보며 얻는 인사이트를 블로그에 천천히 정리해보려고 한다.\\\"}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"앞으로 2가지에 집중해서 포스팅을 해보려한다.\\\"}],[\\\"$\\\",\\\"blockquote\\\",null,{\\\"className\\\":\\\"my-4 border-l-4 border-primary p-6 bg-gray-100 text-gray-700 [\\u0026_*:first-child]:mt-0 [\\u0026_*:last-child]:mb-0\\\",\\\"children\\\":[\\\"\\\\n\\\",[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"복잡한 수학적 증명이 아닌 그것이 주는 인사이트를 위주로 기술하고자 한다.\\\\n비전공자도 이해할 수 있도록 쉽게 작성하고자 한다.\\\"}],\\\"\\\\n\\\"]}]]}],[\\\"$\\\",\\\"section\\\",null,{\\\"aria-labelledby\\\":\\\"왜-알고리즘을-공부해야할까\\\",\\\"children\\\":[[\\\"$\\\",\\\"h2\\\",null,{\\\"className\\\":\\\"mt-8 mb-3 text-heading2 font-semibold leading-normal\\\",\\\"id\\\":\\\"왜-알고리즘을-공부해야할까\\\",\\\"children\\\":[[\\\"$\\\",\\\"$L13\\\",null,{\\\"aria-hidden\\\":\\\"true\\\",\\\"tabIndex\\\":\\\"-1\\\",\\\"href\\\":\\\"#왜-알고리즘을-공부해야할까\\\",\\\"children\\\":[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"icon icon-link\\\"}]}],\\\"왜 알고리즘을 공부해야할까?\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"살짝은 당연한 이야기지만, 그래도 이유를 분명히 하고 출발하자. 왜 우리는 알고리즘을 공부해야할까?\\\"}],[\\\"$\\\",\\\"p\\\",null,{}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":[\\\"우리가 알고리즘을 공부함으로써 무얼 얻게 될까? 다양한 알고리즘과 그 알고리즘의 장단점을 알게 된다.\\\",[\\\"$\\\",\\\"br\\\",null,{}],\\\"\\\\n다양한 알고리즘을 알면 무엇이 좋은가? 문제 해결에 있어 적절한 알고리즘을 선택할 수 있게 된다.\\\",[\\\"$\\\",\\\"br\\\",null,{}],\\\"\\\\n문제 해결에서 적절한 알고리즘의 선택은 왜 중요한가? 적절한 알고리즘은 문제를 더 효율적으로 풀 수 있게 만들기 때문이다.\\\"]}],[\\\"$\\\",\\\"p\\\",null,{}],[\\\"$\\\",\\\"blockquote\\\",null,{\\\"className\\\":\\\"my-4 border-l-4 border-primary p-6 bg-gray-100 text-gray-700 [\\u0026_*:first-child]:mt-0 [\\u0026_*:last-child]:mb-0\\\",\\\"children\\\":[\\\"\\\\n\\\",[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"알고리즘을 공부하면 문제를 더 효율적으로 풀 수 있게 된다.\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"p\\\",null,{}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"n개의 원소를 가지며 정렬된 배열에서 특정 원소 x를 찾는 간단한 문제를 이야기해보자.\\\"}],[\\\"$\\\",\\\"p\\\",null,{}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"순차 탐색(sequential search)을 하는 경우 x를 찾는데 최악의 경우 n번의 비교를 해야한다.\\\"}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"이분 탐색(binary search)을 하는 경우 x를 찾는데 최악의 경우 logN+1번의 비교를 해야한다.\\\"}],[\\\"$\\\",\\\"p\\\",null,{}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"지구의 모든 사람을 정렬한 상태에서 '나'를 찾는 문제라고 한다면 순차 탐색으로는 80억번(2024년 기준)의 연산이 필요하다. 반면 이분 탐색으로는 33번의 비교만 하면 된다는 것이다. 순차 탐색보다 효율적이다.\\\"}],[\\\"$\\\",\\\"p\\\",null,{}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"CPU의 성능은 계속 좋아지고 있지만 일반적으로 1초 안에 약 10억번의 계산을 할 수 있다고 본다.\\\"}],[\\\"$\\\",\\\"blockquote\\\",null,{\\\"className\\\":\\\"my-4 border-l-4 border-primary p-6 bg-gray-100 text-gray-700 [\\u0026_*:first-child]:mt-0 [\\u0026_*:last-child]:mb-0\\\",\\\"children\\\":[\\\"\\\\n\\\",[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"10억번 = 1초\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"따라서 순차 탐색으로는 8초, 이분 탐색으로는 0.000000033 초만 소요된다.\\\"}],[\\\"$\\\",\\\"p\\\",null,{}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"이렇게 설명하지 않아도 효율적인 계산의 중요성은 알 것이라 생각하니 여기까지만 하고 넘어가자.\\\"}]]}],[\\\"$\\\",\\\"section\\\",null,{\\\"aria-labelledby\\\":\\\"알고리즘의-효율성-분석하기\\\",\\\"children\\\":[[\\\"$\\\",\\\"h2\\\",null,{\\\"className\\\":\\\"mt-8 mb-3 text-heading2 font-semibold leading-normal\\\",\\\"id\\\":\\\"알고리즘의-효율성-분석하기\\\",\\\"children\\\":[[\\\"$\\\",\\\"$L13\\\",null,{\\\"aria-hidden\\\":\\\"true\\\",\\\"tabIndex\\\":\\\"-1\\\",\\\"href\\\":\\\"#알고리즘의-효율성-분석하기\\\",\\\"children\\\":[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"icon icon-link\\\"}]}],\\\"알고리즘의 효율성 분석하기\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":[\\\"A알고리즘이 B알고리즘보다 효율적인가?\\\",[\\\"$\\\",\\\"br\\\",null,{}],\\\"\\\\n이를 비교하기 위해서는 각 알고리즘의 효율성을 계산해야한다. 컴퓨터에서 문제를 푸는데에는 2가지의 자원이 사용된다. 바로 메모리와 CPU이다. 효율적으로 연산했다는 말은 메모리와 CPU를 효율적으로 사용했다고 볼 수 있다.\\\"]}],[\\\"$\\\",\\\"p\\\",null,{}],[\\\"$\\\",\\\"section\\\",null,{\\\"aria-labelledby\\\":\\\"cpu를-효율적으로-사용했다는-것\\\",\\\"children\\\":[[\\\"$\\\",\\\"h3\\\",null,{\\\"className\\\":\\\"mt-7 mb-2 text-heading3 font-semibold leading-normal\\\",\\\"id\\\":\\\"cpu를-효율적으로-사용했다는-것\\\",\\\"children\\\":[[\\\"$\\\",\\\"$L13\\\",null,{\\\"aria-hidden\\\":\\\"true\\\",\\\"tabIndex\\\":\\\"-1\\\",\\\"href\\\":\\\"#cpu를-효율적으로-사용했다는-것\\\",\\\"children\\\":[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"icon icon-link\\\"}]}],\\\"CPU를 효율적으로 사용했다는 것\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"CPU를 효율적으로 썼다는 것은 어떻게 알 수 있을까? CPU가 동작한 시간을 비교하는 것은 효율성을 계산할 수 없다. CPU마다 성능이 다르기 때문이다. CPU가 수행한 명령의 수도 정확한 비교는 아니다. 사용한 프로그래밍 언어에 따라 같은 알고리즘에서도 CPU가 사용한 명령의 수가 달라지기 때문이다.\\\"}],[\\\"$\\\",\\\"p\\\",null,{}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":[\\\"이처럼 물리적인 단위의 비교는 공정하지 않기 때문에 CPU의 효율성은 \\\",[\\\"$\\\",\\\"strong\\\",null,{\\\"className\\\":\\\"font-medium\\\",\\\"children\\\":\\\"논리적인 단위\\\"}],\\\"에서 비교한다. 이 논리적인 단위는 어떤 목적으로 알고리즘을 비교하는가에 따라 선택할 수 있다. 가장 범용적이고 일반적인 단위로는 비교문(exchange statement)이 있다. 할당문(assignment statement)을 얼만큼 사용했는지를 비교할수도 있다. 앞으로는 이러한 논리적인 단위를 \\\",[\\\"$\\\",\\\"strong\\\",null,{\\\"className\\\":\\\"font-medium\\\",\\\"children\\\":\\\"단위연산\\\"}],\\\"이라고 하겠다.\\\"]}],[\\\"$\\\",\\\"p\\\",null,{}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"단위연산의 실행횟수는 입력값에 의해 좌우된다.\\\"}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":[\\\"n개의 원소를 가진 배열에서 x를 찾는 문제를 보자.\\\",[\\\"$\\\",\\\"br\\\",null,{}],\\\"\\\\n비교문을 단위연산으로 할 때, 단위연산은 최소 1번, 최대 n번 일어난다.\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"n개의 원소를 모두 더하는 문제라면 단위연산은 고정적으로 n번 일어난다.\\\"}],[\\\"$\\\",\\\"p\\\",null,{}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":[\\\"이렇게 입력 n에 대해 알고리즘을 통해 일어나는 단위연산의 수를 \\\",[\\\"$\\\",\\\"strong\\\",null,{\\\"className\\\":\\\"font-medium\\\",\\\"children\\\":\\\"시간복잡도\\\"}],\\\"라고 한다.\\\"]}],[\\\"$\\\",\\\"p\\\",null,{}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"다음의 알고리즘을 예로 들자.\\\"}],[\\\"$\\\",\\\"pre\\\",null,{\\\"className\\\":\\\"rounded-md [\\u0026_code]:py-0 [\\u0026_code]:px-0 line-numbers language-js\\\",\\\"children\\\":[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2 language-js\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword\\\",\\\"children\\\":\\\"function\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token function\\\",\\\"children\\\":\\\"sum\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token parameter\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token spread operator\\\",\\\"children\\\":\\\"...\\\"}],\\\"args\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"{\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword\\\",\\\"children\\\":\\\"let\\\"}],\\\" total \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"0\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword control-flow\\\",\\\"children\\\":\\\"for\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword\\\",\\\"children\\\":\\\"let\\\"}],\\\" i \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"0\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\" i \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"\\u003c\\\"}],\\\" args\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\".\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token property-access\\\",\\\"children\\\":\\\"length\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\" i\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"++\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"{\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"    total \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"+=\\\"}],\\\" args\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"[\\\"}],\\\"i\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"]\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"}\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword control-flow\\\",\\\"children\\\":\\\"return\\\"}],\\\" total\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"}\\\"}],\\\"\\\\n\\\"]}]]}]}],[\\\"$\\\",\\\"p\\\",null,{}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":[\\\"모든 원소를 더하는 연산을 하는 위의 sum 알고리즘은 비교문을 단위연산으로 했을 때 \\\",[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\\\",\\\"children\\\":\\\"args.length\\\"}],\\\" 만큼의 시간복잡도를 가진다.\\\"]}],[\\\"$\\\",\\\"p\\\",null,{}]]}],[\\\"$\\\",\\\"section\\\",null,{\\\"aria-labelledby\\\":\\\"메모리를-효율적으로-사용했다는-것\\\",\\\"children\\\":[[\\\"$\\\",\\\"h3\\\",null,{\\\"className\\\":\\\"mt-7 mb-2 text-heading3 font-semibold leading-normal\\\",\\\"id\\\":\\\"메모리를-효율적으로-사용했다는-것\\\",\\\"children\\\":[[\\\"$\\\",\\\"$L13\\\",null,{\\\"aria-hidden\\\":\\\"true\\\",\\\"tabIndex\\\":\\\"-1\\\",\\\"href\\\":\\\"#메모리를-효율적으로-사용했다는-것\\\",\\\"children\\\":[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"icon icon-link\\\"}]}],\\\"메모리를 효율적으로 사용했다는 것\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":[\\\"메모리를 효율적으로 사용했다는 것도 마찬가지로 물리적인 계산이 아닌 논리적인 단위로 접근한다. 사용한 단위연산의 수를 \\\",[\\\"$\\\",\\\"strong\\\",null,{\\\"className\\\":\\\"font-medium\\\",\\\"children\\\":\\\"공간복잡도\\\"}],\\\"라고 부른다.\\\"]}],[\\\"$\\\",\\\"p\\\",null,{}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"같은 알고리즘에서 공간복잡도를 계산해보자\\\"}],[\\\"$\\\",\\\"pre\\\",null,{\\\"className\\\":\\\"rounded-md [\\u0026_code]:py-0 [\\u0026_code]:px-0 line-numbers language-js\\\",\\\"children\\\":[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2 language-js\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword\\\",\\\"children\\\":\\\"function\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token function\\\",\\\"children\\\":\\\"sum\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token parameter\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token spread operator\\\",\\\"children\\\":\\\"...\\\"}],\\\"args\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"{\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword\\\",\\\"children\\\":\\\"let\\\"}],\\\" total \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"0\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword control-flow\\\",\\\"children\\\":\\\"for\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword\\\",\\\"children\\\":\\\"let\\\"}],\\\" i \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"0\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\" i \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"\\u003c\\\"}],\\\" args\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\".\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token property-access\\\",\\\"children\\\":\\\"length\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\" i\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"++\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"{\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"    total \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"+=\\\"}],\\\" args\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"[\\\"}],\\\"i\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"]\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"}\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword control-flow\\\",\\\"children\\\":\\\"return\\\"}],\\\" total\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"}\\\"}],\\\"\\\\n\\\"]}]]}]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"자바스크립트는 변수가 고정적으로 double형이므로 8byte를 사용한다. sum 함수가 동작하는 동안 총 2개의 변수 total, i 가 사용되므로 공간복잡도는 16byte다.\\\"}],[\\\"$\\\",\\\"p\\\",null,{}]]}],[\\\"$\\\",\\\"section\\\",null,{\\\"aria-labelledby\\\":\\\"효율적인-알고리즘이란\\\",\\\"children\\\":[[\\\"$\\\",\\\"h3\\\",null,{\\\"className\\\":\\\"mt-7 mb-2 text-heading3 font-semibold leading-normal\\\",\\\"id\\\":\\\"효율적인-알고리즘이란\\\",\\\"children\\\":[[\\\"$\\\",\\\"$L13\\\",null,{\\\"aria-hidden\\\":\\\"true\\\",\\\"tabIndex\\\":\\\"-1\\\",\\\"href\\\":\\\"#효율적인-알고리즘이란\\\",\\\"children\\\":[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"icon icon-link\\\"}]}],\\\"효율적인 알고리즘이란?\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"지금까지의 정의를 바탕으로 효율적인 알고리즘의 정의를 내리자.\\\"}],[\\\"$\\\",\\\"blockquote\\\",null,{\\\"className\\\":\\\"my-4 border-l-4 border-primary p-6 bg-gray-100 text-gray-700 [\\u0026_*:first-child]:mt-0 [\\u0026_*:last-child]:mb-0\\\",\\\"children\\\":[\\\"\\\\n\\\",[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"알고리즘이 효율적이다 = 시간복잡도와 공간복잡도가 비교적 낮다\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"상황에 따라서 공간복잡도가 높아도 시간복잡도가 더 낮은 알고리즘이 있을 수 있고 그 반대도 있을 수 있다. 이런 경우 문제에 따라 적절한(더 효율적인)알고리즘이 달라진다. 극한으로 적은 메모리를 가진 상황이면 공간복잡도가 더 적은 알고리즘이 효율적인 알고리즘이 될 수도 있을 것이다.\\\"}]]}]]}],[\\\"$\\\",\\\"section\\\",null,{\\\"aria-labelledby\\\":\\\"최선-평균-최악의-복잡도\\\",\\\"children\\\":[[\\\"$\\\",\\\"h2\\\",null,{\\\"className\\\":\\\"mt-8 mb-3 text-heading2 font-semibold leading-normal\\\",\\\"id\\\":\\\"최선-평균-최악의-복잡도\\\",\\\"children\\\":[[\\\"$\\\",\\\"$L13\\\",null,{\\\"aria-hidden\\\":\\\"true\\\",\\\"tabIndex\\\":\\\"-1\\\",\\\"href\\\":\\\"#최선-평균-최악의-복잡도\\\",\\\"children\\\":[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"icon icon-link\\\"}]}],\\\"최선, 평균, 최악의 복잡도\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"앞서 알고리즘은 입력에 따라 실행되는 단위연산의 수가 달라질 수 있다고 언급했다. n의 길이를 갖는 배열 A에서 원소 x의 위치를 찾는 문제를 예로 들자.\\\"}],[\\\"$\\\",\\\"p\\\",null,{}],[\\\"$\\\",\\\"pre\\\",null,{\\\"className\\\":\\\"rounded-md [\\u0026_code]:py-0 [\\u0026_code]:px-0 line-numbers language-ts\\\",\\\"children\\\":[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2 language-ts\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token comment\\\",\\\"children\\\":\\\"// 설명을 위해 언어를 타입스크립트로 바꾸겠다.\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword\\\",\\\"children\\\":\\\"function\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token function\\\",\\\"children\\\":\\\"findIndex\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token constant\\\",\\\"children\\\":\\\"A\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\":\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token builtin\\\",\\\"children\\\":\\\"number\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"[\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"]\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],\\\" x\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\":\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token builtin\\\",\\\"children\\\":\\\"number\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"{\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword\\\",\\\"children\\\":\\\"const\\\"}],\\\" n \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token constant\\\",\\\"children\\\":\\\"A\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\".\\\"}],\\\"length\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword\\\",\\\"children\\\":\\\"for\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword\\\",\\\"children\\\":\\\"let\\\"}],\\\" i \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"0\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\" i \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"\\u003c\\\"}],\\\" n\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\" i\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"++\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"{\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"    \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword\\\",\\\"children\\\":\\\"if\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token constant\\\",\\\"children\\\":\\\"A\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"[\\\"}],\\\"i\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"]\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"===\\\"}],\\\" x\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword\\\",\\\"children\\\":\\\"return\\\"}],\\\" i\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"}\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword\\\",\\\"children\\\":\\\"return\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"-\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"1\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"}\\\"}],\\\"\\\\n\\\"]}]]}]}],[\\\"$\\\",\\\"p\\\",null,{}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"만약 A의 0번 인덱스에서 x를 찾았다면 시간복잡도는 1이다. 그리고 이보다 낮은 시간복잡도가 나올 수 있는 경우는 없다.\\\"}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"만약 A 배열에서 x를 찾지 못했다면, 시간복잡도는 n이다. 그리고 이보다 높은 시간복잡도가 나올 수 있는 경우는 없다.\\\"}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"위의 케이스는 각각 최선의 시간복잡도, 최악의 시간복잡도이다.\\\"}],[\\\"$\\\",\\\"blockquote\\\",null,{\\\"className\\\":\\\"my-4 border-l-4 border-primary p-6 bg-gray-100 text-gray-700 [\\u0026_*:first-child]:mt-0 [\\u0026_*:last-child]:mb-0\\\",\\\"children\\\":[\\\"\\\\n\\\",[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"최선의 시간복잡도 = 1\\\"}],\\\"\\\\n\\\",[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"최악의 시간복잡도 = n\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"p\\\",null,{}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"평균복잡도도 이야기해볼 수 있을 것이다. 이를 위해선 x가 A 배열 안의 특정 위치에 존재할 확률을 고려해야한다. 공평하게 1/n이라고 하자. 부가 조건으로 x는 A배열의 원소중 하나여야한다. (이 조건이 없으면 x를 못찾는 경우를 계산해야해서 복잡해진다)\\\"}],[\\\"$\\\",\\\"p\\\",null,{}],[\\\"$\\\",\\\"blockquote\\\",null,{\\\"className\\\":\\\"my-4 border-l-4 border-primary p-6 bg-gray-100 text-gray-700 [\\u0026_*:first-child]:mt-0 [\\u0026_*:last-child]:mb-0\\\",\\\"children\\\":[\\\"\\\\n\\\",[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"x를 1번만에 찾을 확률 = x를 2번만에 찾을 확률 = ... = x를 n번만에 찾을 확률 = 1/n\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"x가 k 인덱스에 위치할 때 단위 연산은 k+1번 일어난다.\\\"}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"이를 통해 단위연산의 평균은 다음과 같이 계산된다.\\\"}],[\\\"$\\\",\\\"p\\\",null,{}],[\\\"$\\\",\\\"blockquote\\\",null,{\\\"className\\\":\\\"my-4 border-l-4 border-primary p-6 bg-gray-100 text-gray-700 [\\u0026_*:first-child]:mt-0 [\\u0026_*:last-child]:mb-0\\\",\\\"children\\\":[\\\"\\\\n\\\",[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"(1+2+3+...+n)/n = n*(n+1)/(2*n) = (n+1)/2\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"평균 시간복잡도는 (n+1)/2로 n=10일 때 5.5번의 단위연산이 평균적으로 발생한다.\\\"}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"당연히 현실 세계에선 위와 같이 k가 위치할 확률이 공평하지 않을 가능성이 크기 때문에 평균 시간복잡도의 계산이 더 복잡해질 가능성이 크다.\\\"}],[\\\"$\\\",\\\"p\\\",null,{}],[\\\"$\\\",\\\"section\\\",null,{\\\"aria-labelledby\\\":\\\"근데-이건-왜-언급하나요\\\",\\\"children\\\":[[\\\"$\\\",\\\"h3\\\",null,{\\\"className\\\":\\\"mt-7 mb-2 text-heading3 font-semibold leading-normal\\\",\\\"id\\\":\\\"근데-이건-왜-언급하나요\\\",\\\"children\\\":[[\\\"$\\\",\\\"$L13\\\",null,{\\\"aria-hidden\\\":\\\"true\\\",\\\"tabIndex\\\":\\\"-1\\\",\\\"href\\\":\\\"#근데-이건-왜-언급하나요\\\",\\\"children\\\":[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"icon icon-link\\\"}]}],\\\"근데 이건 왜 언급하나요?\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"문제에 따라 다른 복잡도를 비교해야할 수 있다. 최악의 케이스는 대부분의 문제에서 고려해야하고 그래서 중요하다. 하지만 고객이 얼마나 최고의 시나리오에서 얼마나 빨리 배송을 받을 수 있는가? 배송은 평균적으로 얼마나 소요되나? 등을 계산해야하는 문제를 마주할 수도 있다. 그러니 내가 어떤 문제를 마주하고 있는가를 알고 그에 맞는 복잡도를 고려할 수 있기 위해 위의 개념을 언급한다. 그리고 이는 복잡도의 비교에서 이어진다.\\\"}]]}]]}],[\\\"$\\\",\\\"section\\\",null,{\\\"aria-labelledby\\\":\\\"복잡도의-비교-big-o-표기법\\\",\\\"children\\\":[[\\\"$\\\",\\\"h2\\\",null,{\\\"className\\\":\\\"mt-8 mb-3 text-heading2 font-semibold leading-normal\\\",\\\"id\\\":\\\"복잡도의-비교-big-o-표기법\\\",\\\"children\\\":[[\\\"$\\\",\\\"$L13\\\",null,{\\\"aria-hidden\\\":\\\"true\\\",\\\"tabIndex\\\":\\\"-1\\\",\\\"href\\\":\\\"#복잡도의-비교-big-o-표기법\\\",\\\"children\\\":[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"icon icon-link\\\"}]}],\\\"복잡도의 비교, Big-O 표기법\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":[\\\"아쉽지만 \\\",[\\\"$\\\",\\\"del\\\",null,{\\\"children\\\":\\\"마크다운에서 LaTex를 표기하는 방법을 아직 잘 몰라서\\\"}],\\\" 학문적인 깊이를 파기 위해 글을 작성중인 것은 아니기 때문에 수학적인 내용을 대거 패스할 예정이다. 그렇지만 Big-O가 어떤 개념인가는 살짝 짚고 가자.\\\"]}],[\\\"$\\\",\\\"img\\\",null,{\\\"src\\\":\\\"./images/n_compare_graph.png\\\",\\\"width\\\":\\\"512\\\",\\\"alt\\\":\\\"\\\"}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":[\\\"A알고리즘의 시간복잡도는 n^2, B알고리즘의 시간복잡도는 n+12이라고 하자. \\\",[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\\\",\\\"children\\\":\\\"n\\u003c4\\\"}],\\\"일때 까지는 B알고리즘보다 A알고리즘의 시간복잡도가 더 낮다는 것을 알 수 있다. 하지만 n이 4보다 커지는 순간 A 알고리즘의 시간복잡도는 B알고리즘보다 항상 더 높아진다.\\\"]}],[\\\"$\\\",\\\"p\\\",null,{}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"마찬가지로 다른 낮은 차수의 항들이 어떻게 됐든 최고차항이 n^2인 알고리즘보다 최고차항이 n^3인 알고리즘이 나중엔 시간복잡도가 더 높게 된다.\\\"}],[\\\"$\\\",\\\"p\\\",null,{}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"이처럼 n이 충분히 클때 최고차항이 높은 복잡도를 가진 알고리즘이 최고차항이 낮은 복잡도를 가진 알고리즘보다 높은 복잡도를 가지게 된다.\\\"}],[\\\"$\\\",\\\"p\\\",null,{}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":[\\\"복잡도를 나타내는 식에서 최고차항만 뽑아서 Big-O 표기법 \\\",[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\\\",\\\"children\\\":\\\"O()\\\"}],\\\"으로 나타낼 수 있다. 예를 들어 \\\",[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\\\",\\\"children\\\":\\\"O(3*n^2+10n)\\\"}],\\\"은 \\\",[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\\\",\\\"children\\\":\\\"O(n^2)\\\"}],\\\"과 같다.\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":[\\\"그럼 Big-O 표기는 왜 사용하는가? Big-O는 일종의 분류다. \\\",[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\\\",\\\"children\\\":\\\"O(n^2)\\\"}],\\\"는 n^2정도의 최악시간복잡도를 가지는 알고리즘 집합을 가리킨다.\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":[\\\"이 분류들은 비교가 가능하다. \\\",[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\\\",\\\"children\\\":\\\"O(2^n)\\\"}],\\\"은 \\\",[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\\\",\\\"children\\\":\\\"O(n^2)\\\"}],\\\"보다 크며 이 말은 n이 무한으로 커지면 \\\",[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\\\",\\\"children\\\":\\\"O(2^n)\\\"}],\\\"집합에 속한 알고리즘들은 언젠가 \\\",[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\\\",\\\"children\\\":\\\"O(n^2)\\\"}],\\\"집합에 속한 알고리즘보다 높은 시간복잡도를 가지게 된다는 뜻이다.\\\"]}],[\\\"$\\\",\\\"blockquote\\\",null,{\\\"className\\\":\\\"my-4 border-l-4 border-primary p-6 bg-gray-100 text-gray-700 [\\u0026_*:first-child]:mt-0 [\\u0026_*:last-child]:mb-0\\\",\\\"children\\\":[\\\"\\\\n\\\",[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":[\\\"O(n^2+10n) = O(100000\\\",[\\\"$\\\",\\\"em\\\",null,{\\\"className\\\":\\\"[img+\\u0026]:block [img+\\u0026]:text-center [img+\\u0026]:text-gray-400 [img+\\u0026]:font-thin [img+\\u0026]:not-italic [img+\\u0026]:text-sm [img+\\u0026]:-translate-y-10\\\",\\\"children\\\":\\\"n^2) = O(0.00000001\\\"}],\\\"n^2)\\\",[\\\"$\\\",\\\"br\\\",null,{}],\\\"\\\\n즉, 이들끼리는 n이 무한히 커질 때 한쪽의 최악시간복잡도가 크거나 작다고 할 수 없다.\\\",[\\\"$\\\",\\\"br\\\",null,{}]]}],\\\"\\\\n\\\",[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":[\\\"하지만 O(n^2) \\u003c O(n^3)\\\",[\\\"$\\\",\\\"br\\\",null,{}],\\\"\\\\n즉, 최고차항이 다르면 n이 무한히 커질 때 둘의 최악시간복잡도는 다르다. 그리고 높은 차수를 가진 쪽이 낮은 차수를 가진 쪽보다 더 큰 최악시간복잡도를 가지게 된다.\\\"]}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"p\\\",null,{}],[\\\"$\\\",\\\"img\\\",null,{\\\"src\\\":\\\"./images/computational_complexity.png\\\",\\\"width\\\":\\\"512\\\",\\\"alt\\\":\\\"\\\"}],[\\\"$\\\",\\\"p\\\",null,{}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"대체로 사용되는 분류는 n! 계열, 2^n 계열, n^2계열, nlogn계열, n계열, logn계열, 상수계열이 있다.\\\"}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":[\\\"복잡도 비교는 \\\",[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\\\",\\\"children\\\":\\\"O(n!) \\u003e O(2^n) \\u003e O(n^2) \\u003e O(nlogn) \\u003e O(n) \\u003e O(logn) \\u003e O(상수)\\\"}],\\\"이다.\\\"]}],[\\\"$\\\",\\\"p\\\",null,{}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"이 이상의 수학적인 정의와 증명은 빅오표기법으로 구글링해서 알아보자.\\\"}],[\\\"$\\\",\\\"p\\\",null,{}],[\\\"$\\\",\\\"section\\\",null,{\\\"aria-labelledby\\\":\\\"실용적인-관점의-big-o\\\",\\\"children\\\":[[\\\"$\\\",\\\"h3\\\",null,{\\\"className\\\":\\\"mt-7 mb-2 text-heading3 font-semibold leading-normal\\\",\\\"id\\\":\\\"실용적인-관점의-big-o\\\",\\\"children\\\":[[\\\"$\\\",\\\"$L13\\\",null,{\\\"aria-hidden\\\":\\\"true\\\",\\\"tabIndex\\\":\\\"-1\\\",\\\"href\\\":\\\"#실용적인-관점의-big-o\\\",\\\"children\\\":[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"icon icon-link\\\"}]}],\\\"실용적인 관점의 Big-O\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":[\\\"알고리즘 문제를 풀어본 사람은 알겠지만, 대부분의 알고리즘 문제에선 구현한 알고리즘의 Big-O만 봐도 조건을 통과할 수 있는지 파악이 가능하다.\\\\n이는 알고리즘 문제가 \\\",[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\\\",\\\"children\\\":\\\"O(n^2)\\\"}],\\\" 해법이 아닌 \\\",[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\\\",\\\"children\\\":\\\"O(nlogn)\\\"}],\\\" 해법을 떠올릴 수 있는가?를 물어보는 식이라 그렇다. 고로 문제를 마주하면 Big-O부터 계산해보자.\\\"]}]]}]]}]]}],[\\\"$\\\",\\\"$L14\\\",null,{\\\"size\\\":\\\"lg\\\",\\\"shareData\\\":{\\\"title\\\":\\\"Terra Dev Blog - algorithm-0-begin\\\",\\\"text\\\":\\\"$undefined\\\",\\\"url\\\":\\\"/next-blog/posts/algorithm-0-begin\\\"},\\\"aria-label\\\":\\\"Share this article\\\"}]]}],[\\\"$\\\",\\\"section\\\",null,{\\\"id\\\":\\\"author\\\",\\\"children\\\":[\\\"$\\\",\\\"$L15\\\",null,{}]}],[\\\"$\\\",\\\"section\\\",null,{\\\"children\\\":[[\\\"$\\\",\\\"$Lb\\\",null,{\\\"src\\\":\\\"https://giscus.app/client.js\\\",\\\"data-repo\\\":\\\"dev2820/blog-posts\\\",\\\"data-repo-id\\\":\\\"R_kgDOLQagPA\\\",\\\"data-category\\\":\\\"General\\\",\\\"data-category-id\\\":\\\"DIC_kwDOLQagPM4CjAtl\\\",\\\"data-mapping\\\":\\\"og:title\\\",\\\"data-strict\\\":\\\"0\\\",\\\"data-reactions-enabled\\\":\\\"1\\\",\\\"data-emit-metadata\\\":\\\"0\\\",\\\"data-input-position\\\":\\\"top\\\",\\\"data-theme\\\":\\\"light\\\",\\\"data-lang\\\":\\\"ko\\\",\\\"data-loading\\\":\\\"lazy\\\",\\\"cross-origin\\\":\\\"anonymous\\\",\\\"async\\\":true}],[\\\"$\\\",\\\"div\\\",null,{\\\"className\\\":\\\"giscus w-full min-w-screen-md\\\"}]]}]]}]\\n\"])</script><script>self.__next_f.push([1,\"f:[[\\\"$\\\",\\\"meta\\\",\\\"0\\\",{\\\"name\\\":\\\"viewport\\\",\\\"content\\\":\\\"width=device-width, initial-scale=1\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"1\\\",{\\\"charSet\\\":\\\"utf-8\\\"}],[\\\"$\\\",\\\"title\\\",\\\"2\\\",{\\\"children\\\":\\\"Terra Dev Blog - algorithm-0-begin\\\"}],[\\\"$\\\",\\\"link\\\",\\\"3\\\",{\\\"rel\\\":\\\"canonical\\\",\\\"href\\\":\\\"https://dev2820.github.io/next-blog/algorithm-0-begin\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"4\\\",{\\\"property\\\":\\\"og:title\\\",\\\"content\\\":\\\"algorithm-0-begin\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"5\\\",{\\\"property\\\":\\\"og:url\\\",\\\"content\\\":\\\"https://dev2820.github.io/next-blog/algorithm-0-begin\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"6\\\",{\\\"property\\\":\\\"og:locale\\\",\\\"content\\\":\\\"ko_KR\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"7\\\",{\\\"property\\\":\\\"og:image\\\",\\\"content\\\":\\\"https://dev2820.github.io/next-blog/next-blog/posts/algorithm-0-begin\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"8\\\",{\\\"property\\\":\\\"og:image:width\\\",\\\"content\\\":\\\"800\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"9\\\",{\\\"property\\\":\\\"og:image:height\\\",\\\"content\\\":\\\"600\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"10\\\",{\\\"property\\\":\\\"og:image:alt\\\",\\\"content\\\":\\\"algorithm-0-begin\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"11\\\",{\\\"property\\\":\\\"og:type\\\",\\\"content\\\":\\\"article\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"12\\\",{\\\"name\\\":\\\"twitter:card\\\",\\\"content\\\":\\\"summary_large_image\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"13\\\",{\\\"name\\\":\\\"twitter:title\\\",\\\"content\\\":\\\"algorithm-0-begin\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"14\\\",{\\\"name\\\":\\\"twitter:image\\\",\\\"content\\\":\\\"https://dev2820.github.io/next-blog/next-blog/posts/algorithm-0-begin\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"15\\\",{\\\"name\\\":\\\"twitter:image:width\\\",\\\"content\\\":\\\"800\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"16\\\",{\\\"name\\\":\\\"twitter:image:height\\\",\\\"content\\\":\\\"600\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"17\\\",{\\\"name\\\":\\\"twitter:image:alt\\\",\\\"content\\\":\\\"algorithm-0-begin\\\"}],[\\\"$\\\",\\\"link\\\",\\\"18\\\",{\\\"rel\\\":\\\"icon\\\",\\\"href\\\":\\\"/next-blog/favicon.ico\\\",\\\"type\\\":\\\"image/x-icon\\\",\\\"sizes\\\":\\\"16x16\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"19\\\",{\\\"name\\\":\\\"next-size-adjust\\\"}]]\\n6:null\\n\"])</script></body></html>",
            "url": "https://dev2820.github.io/next-blogalgorithm-0-begin",
            "title": "algorithm-0-begin",
            "date_modified": "2024-03-31T12:40:51.204Z",
            "author": {
                "name": "dev2820",
                "url": "https://dev2820.github.io/next-blog/about"
            }
        },
        {
            "id": "algorithm-1-0-divide-and-conquer",
            "content_html": "<!DOCTYPE html><html lang=\"kr\" class=\"__variable_fa65fd __variable_7691e4 scroll-smooth\"><head><meta charSet=\"utf-8\"/><meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"/><link rel=\"preload\" href=\"/next-blog/_next/static/media/3e7b7e3fd4560936-s.p.woff2\" as=\"font\" crossorigin=\"\" type=\"font/woff2\"/><link rel=\"preload\" href=\"/next-blog/_next/static/media/ff840cfebfb63b0c-s.p.woff2\" as=\"font\" crossorigin=\"\" type=\"font/woff2\"/><link rel=\"stylesheet\" href=\"/next-blog/_next/static/css/16077bc16defb9b9.css\" data-precedence=\"next\"/><link rel=\"stylesheet\" href=\"/next-blog/_next/static/css/203da25389b4eeab.css\" data-precedence=\"next\"/><link rel=\"preload\" as=\"script\" fetchPriority=\"low\" href=\"/next-blog/_next/static/chunks/webpack-8f27d743501d147d.js\"/><script src=\"/next-blog/_next/static/chunks/f14ca715-03ac7b40665f0731.js\" async=\"\"></script><script src=\"/next-blog/_next/static/chunks/465-9f8ee17d6a70e147.js\" async=\"\"></script><script src=\"/next-blog/_next/static/chunks/main-app-e31317f2a5bf611e.js\" async=\"\"></script><script src=\"/next-blog/_next/static/chunks/805-a8af350d35fb9160.js\" async=\"\"></script><script src=\"/next-blog/_next/static/chunks/app/posts/%5Bslug%5D/layout-1cf1294e1a2539f4.js\" async=\"\"></script><script src=\"/next-blog/_next/static/chunks/618-f2bb34773a0d24b2.js\" async=\"\"></script><script src=\"/next-blog/_next/static/chunks/app/posts/page-e8c6275c8ebfad50.js\" async=\"\"></script><script src=\"/next-blog/_next/static/chunks/372-b649e69f56e8eb19.js\" async=\"\"></script><script src=\"/next-blog/_next/static/chunks/app/layout-c7fa40d911107206.js\" async=\"\"></script><script src=\"/next-blog/_next/static/chunks/952ad60e-7cdac7b6bf36214c.js\" async=\"\"></script><script src=\"/next-blog/_next/static/chunks/app/posts/%5Bslug%5D/page-e951164d6ad6c144.js\" async=\"\"></script><link rel=\"preload\" href=\"https://giscus.app/client.js\" as=\"script\"/><link rel=\"preload\" href=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/prism.min.js\" as=\"script\"/><link rel=\"preload\" href=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-javascript.min.js\" as=\"script\"/><link rel=\"preload\" href=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-typescript.min.js\" as=\"script\"/><link rel=\"preload\" href=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-jsx.min.js\" as=\"script\"/><link rel=\"preload\" href=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-tsx.min.js\" as=\"script\"/><link rel=\"preload\" href=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-c.min.js\" as=\"script\"/><link rel=\"preload\" href=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/plugins/line-numbers/prism-line-numbers.min.js\" as=\"script\"/><title>Terra Dev Blog - algorithm-1-0-divide-and-conquer</title><link rel=\"canonical\" href=\"https://dev2820.github.io/next-blog/algorithm-1-0-divide-and-conquer\"/><meta property=\"og:title\" content=\"algorithm-1-0-divide-and-conquer\"/><meta property=\"og:url\" content=\"https://dev2820.github.io/next-blog/algorithm-1-0-divide-and-conquer\"/><meta property=\"og:locale\" content=\"ko_KR\"/><meta property=\"og:image\" content=\"https://dev2820.github.io/next-blog/next-blog/posts/algorithm-1-0-divide-and-conquer\"/><meta property=\"og:image:width\" content=\"800\"/><meta property=\"og:image:height\" content=\"600\"/><meta property=\"og:image:alt\" content=\"algorithm-1-0-divide-and-conquer\"/><meta property=\"og:type\" content=\"article\"/><meta name=\"twitter:card\" content=\"summary_large_image\"/><meta name=\"twitter:title\" content=\"algorithm-1-0-divide-and-conquer\"/><meta name=\"twitter:image\" content=\"https://dev2820.github.io/next-blog/next-blog/posts/algorithm-1-0-divide-and-conquer\"/><meta name=\"twitter:image:width\" content=\"800\"/><meta name=\"twitter:image:height\" content=\"600\"/><meta name=\"twitter:image:alt\" content=\"algorithm-1-0-divide-and-conquer\"/><link rel=\"icon\" href=\"/next-blog/favicon.ico\" type=\"image/x-icon\" sizes=\"16x16\"/><meta name=\"next-size-adjust\"/><script src=\"/next-blog/_next/static/chunks/polyfills-78c92fac7aa8fdd8.js\" noModule=\"\"></script></head><body class=\"__className_fa65fd flex flex-col text-gray-800\"><link href=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/plugins/line-numbers/prism-line-numbers.min.css\" rel=\"stylesheet\"/><header class=\"flex flex-row justify-center py-2 items-center self-center w-full max-w-screen-md px-4\"><a href=\"/next-blog\"><img alt=\"Terra&#x27;s Devlog logo\" loading=\"lazy\" width=\"258\" height=\"48\" decoding=\"async\" data-nimg=\"1\" style=\"color:transparent\" src=\"/next-blog/_next/static/media/logo-full.a2c57f51.svg\"/></a><div class=\"flex-1\"></div><nav class=\"\"><menu class=\"flex flex-row gap-8\"><li><a aria-disabled=\"false\" href=\"/next-blog/posts\"><div class=\"cursor-pointer duration-200 font-medium text-primary hover:text-primary\">Posts</div></a></li><li><a aria-disabled=\"true\" href=\"\"><div class=\"duration-200 font-medium cursor-not-allowed text-muted hover:text-muted\">About Me</div></a></li><li><a aria-disabled=\"true\" href=\"\"><div class=\"duration-200 font-medium cursor-not-allowed text-muted hover:text-muted\">Contact</div></a></li></menu></nav></header><main class=\"self-center w-full max-w-screen-md p-4 text-gray-800\"><article class=\"relative\"><header id=\"post-meta\"><h1 class=\"mt-10 mb-4 text-heading1 font-bold leading-normal\" id=\"algorithm-1-0-divide-and-conquer\">algorithm-1-0-divide-and-conquer</h1><time dateTime=\"2024-03-31\" aria-label=\"Published on 2024-03-31\">2024-03-31</time> <!-- -->|<!-- --> <time dateTime=\"PT1M\" aria-label=\"Estimated reading time\">1<!-- --> mins</time></header><div id=\"content\" class=\"relative\"><div id=\"table-of-header\" class=\"absolute -right-12 translate-x-full h-full w-52 desktop:block hidden\"><nav class=\"sticky top-24\"><ol><li><a href=\"#분할정복을-사용할-수-없는-경우\"><div class=\"text-sm font-light data-[active=&quot;true&quot;]:text-base data-[active=&quot;true&quot;]:font-semibold py-0.5 text-neutral-400 data-[active=&quot;true&quot;]:text-primary duration-200 hover:text-primary pl-4\" data-id=\"#분할정복을-사용할-수-없는-경우\">분할정복을 사용할 수 없는 경우</div></a></li><li><a href=\"#분할정복-설계-방법\"><div class=\"text-sm font-light data-[active=&quot;true&quot;]:text-base data-[active=&quot;true&quot;]:font-semibold py-0.5 text-neutral-400 data-[active=&quot;true&quot;]:text-primary duration-200 hover:text-primary pl-4\" data-id=\"#분할정복-설계-방법\">분할정복 설계 방법</div></a></li><li><a href=\"#분할정복을-이용하는-대표적인-알고리즘\"><div class=\"text-sm font-light data-[active=&quot;true&quot;]:text-base data-[active=&quot;true&quot;]:font-semibold py-0.5 text-neutral-400 data-[active=&quot;true&quot;]:text-primary duration-200 hover:text-primary pl-4\" data-id=\"#분할정복을-이용하는-대표적인-알고리즘\">분할정복을 이용하는 대표적인 알고리즘</div></a></li><li><a href=\"#짧은-예제\"><div class=\"text-sm font-light data-[active=&quot;true&quot;]:text-base data-[active=&quot;true&quot;]:font-semibold py-0.5 text-neutral-400 data-[active=&quot;true&quot;]:text-primary duration-200 hover:text-primary pl-4\" data-id=\"#짧은-예제\">짧은 예제</div></a></li><li><a href=\"#큰-정수-계산하기\"><div class=\"text-sm font-light data-[active=&quot;true&quot;]:text-base data-[active=&quot;true&quot;]:font-semibold py-0.5 text-neutral-400 data-[active=&quot;true&quot;]:text-primary duration-200 hover:text-primary pl-10\" data-id=\"#큰-정수-계산하기\">큰 정수 계산하기</div></a></li><li><a href=\"#하노이의-탑\"><div class=\"text-sm font-light data-[active=&quot;true&quot;]:text-base data-[active=&quot;true&quot;]:font-semibold py-0.5 text-neutral-400 data-[active=&quot;true&quot;]:text-primary duration-200 hover:text-primary pl-10\" data-id=\"#하노이의-탑\">하노이의 탑</div></a></li><li><a href=\"#분할정복의-최적화\"><div class=\"text-sm font-light data-[active=&quot;true&quot;]:text-base data-[active=&quot;true&quot;]:font-semibold py-0.5 text-neutral-400 data-[active=&quot;true&quot;]:text-primary duration-200 hover:text-primary pl-4\" data-id=\"#분할정복의-최적화\">분할정복의 최적화</div></a></li><li><a href=\"#피보나치-수\"><div class=\"text-sm font-light data-[active=&quot;true&quot;]:text-base data-[active=&quot;true&quot;]:font-semibold py-0.5 text-neutral-400 data-[active=&quot;true&quot;]:text-primary duration-200 hover:text-primary pl-10\" data-id=\"#피보나치-수\">피보나치 수</div></a></li></ol></nav></div><section aria-labelledby=\"1-분할정복\"><h1 class=\"mt-10 mb-4 text-heading1 font-bold leading-normal\" id=\"1-분할정복\"><a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#1-분할정복\"><span class=\"icon icon-link\"></span></a>1. 분할정복</h1><p class=\"font-light leading-normal mt-4 mb-2\">분할정복은 문제 풀이의 정석적인 방법중 하나다. 이름에서 알 수 있듯, 분할정복의 논지는 다음과 같다.</p><blockquote class=\"my-4 border-l-4 border-primary p-6 bg-gray-100 text-gray-700 [&amp;_*:first-child]:mt-0 [&amp;_*:last-child]:mb-0\">\n<p class=\"font-light leading-normal mt-4 mb-2\">큰 문제를 풀 수 있는 작은 문제 여럿으로 분리해 각개격파한다.</p>\n</blockquote><pre class=\"rounded-md [&amp;_code]:py-0 [&amp;_code]:px-0 line-numbers language-ts\"><code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2 language-ts\"><span class=\"code-line\"><span class=\"token keyword\">function</span> <span class=\"token function\">bigProblem</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">  <span class=\"token function\">smallProblem</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">  <span class=\"token function\">smallProblem</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">  <span class=\"token comment\">// ...</span>\n</span><span class=\"code-line\">  <span class=\"token keyword\">return</span> solution<span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\"><span class=\"token punctuation\">}</span>\n</span></code></pre><section aria-labelledby=\"분할정복을-사용할-수-없는-경우\"><h2 class=\"mt-8 mb-3 text-heading2 font-semibold leading-normal\" id=\"분할정복을-사용할-수-없는-경우\"><a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#분할정복을-사용할-수-없는-경우\"><span class=\"icon icon-link\"></span></a>분할정복을 사용할 수 없는 경우</h2><blockquote class=\"my-4 border-l-4 border-primary p-6 bg-gray-100 text-gray-700 [&amp;_*:first-child]:mt-0 [&amp;_*:last-child]:mb-0\">\n<p class=\"font-light leading-normal mt-4 mb-2\">부분의 합이 전체보다 큰 경우</p>\n</blockquote></section><section aria-labelledby=\"분할정복-설계-방법\"><h2 class=\"mt-8 mb-3 text-heading2 font-semibold leading-normal\" id=\"분할정복-설계-방법\"><a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#분할정복-설계-방법\"><span class=\"icon icon-link\"></span></a>분할정복 설계 방법</h2><p class=\"font-light leading-normal mt-4 mb-2\">문제를 분할정복으로 풀고자 한다면 다음과 같은 순서로 설계할 수 있다.</p><ol class=\"list-decimal my-4\">\n<li class=\"text-paragraph font-light leading-normal py-1 ml-6\">문제의 입력을 하나 이상의 작은 입력으로 분할한다.</li>\n<li class=\"text-paragraph font-light leading-normal py-1 ml-6\">작은 입력을 각각 푼다.</li>\n<li class=\"text-paragraph font-light leading-normal py-1 ml-6\">필요에 따라 분할하여 푼 내용을 합쳐 답을 만들어낸다.</li>\n</ol></section><section aria-labelledby=\"분할정복을-이용하는-대표적인-알고리즘\"><h2 class=\"mt-8 mb-3 text-heading2 font-semibold leading-normal\" id=\"분할정복을-이용하는-대표적인-알고리즘\"><a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#분할정복을-이용하는-대표적인-알고리즘\"><span class=\"icon icon-link\"></span></a>분할정복을 이용하는 대표적인 알고리즘</h2><ol class=\"list-decimal my-4\">\n<li class=\"text-paragraph font-light leading-normal py-1 ml-6\">이분 탐색(binary search)</li>\n<li class=\"text-paragraph font-light leading-normal py-1 ml-6\">병합정렬(merge sort)</li>\n<li class=\"text-paragraph font-light leading-normal py-1 ml-6\">퀵정렬(quick sort)</li>\n<li class=\"text-paragraph font-light leading-normal py-1 ml-6\">쉬트라쎈 행렬곱셈</li>\n</ol></section><section aria-labelledby=\"짧은-예제\"><h2 class=\"mt-8 mb-3 text-heading2 font-semibold leading-normal\" id=\"짧은-예제\"><a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#짧은-예제\"><span class=\"icon icon-link\"></span></a>짧은 예제</h2><section aria-labelledby=\"큰-정수-계산하기\"><h3 class=\"mt-7 mb-2 text-heading3 font-semibold leading-normal\" id=\"큰-정수-계산하기\"><a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#큰-정수-계산하기\"><span class=\"icon icon-link\"></span></a>큰 정수 계산하기</h3><p class=\"font-light leading-normal mt-4 mb-2\">초등학생 때 배웠던 인수분해를 통해 큰 수를 작은 수로 분할해 계산할 수 있다.</p><pre class=\"rounded-md [&amp;_code]:py-0 [&amp;_code]:px-0 line-numbers\"><code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\"><span class=\"code-line\">1234 * 5678\n</span><span class=\"code-line\">= (12 * 100 + 34) * (56 * 100 + 78)\n</span><span class=\"code-line\">= `12*56*10000 + (12*78 + 34*56)*100 + 34*78\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">// 문제가 작은 수 곱하기 3개와 숫자 더하기 문제로 쪼개졌다.\n</span></code></pre></section><section aria-labelledby=\"하노이의-탑\"><h3 class=\"mt-7 mb-2 text-heading3 font-semibold leading-normal\" id=\"하노이의-탑\"><a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#하노이의-탑\"><span class=\"icon icon-link\"></span></a>하노이의 탑</h3><p class=\"font-light leading-normal mt-4 mb-2\"><img alt=\"하노이의 탑\" loading=\"lazy\" width=\"704\" height=\"300\" decoding=\"async\" data-nimg=\"1\" class=\"object-cover rounded-md mx-auto my-12 w-full max-w-[704px]\" style=\"color:transparent\" src=\"/next-blog/posts/algorithm-1-0-divide-and-conquer/images/hanoi.png\"/>\n출처: <a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" href=\"https://ko.wikipedia.org/wiki/%ED%95%98%EB%85%B8%EC%9D%B4%EC%9D%98_%ED%83%91\">https://ko.wikipedia.org/wiki/%ED%95%98%EB%85%B8%EC%9D%B4%EC%9D%98_%ED%83%91</a></p><p class=\"font-light leading-normal mt-4 mb-2\">하노이의 탑을 완성하기 위해 원판을 옮기는 작업의 최소 수를 <code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\">T(n), n=원판의 수</code>라고 하자\n하노이의 탑은 다음과 같이 문제를 쪼갤 수 있다. T(6)을 풀어보자</p><ol class=\"list-decimal my-4\">\n<li class=\"text-paragraph font-light leading-normal py-1 ml-6\">가장 큰 원판 위에 올라간 원판을 모두 2번 기둥으로 옮긴다. -&gt; T(5)</li>\n<li class=\"text-paragraph font-light leading-normal py-1 ml-6\">가장 큰 원판을 3번 기둥으로 옮긴다. -&gt; 1</li>\n<li class=\"text-paragraph font-light leading-normal py-1 ml-6\">2번 기둥의 원판을 3번 기둥으로 옮긴다. -&gt; T(5)</li>\n</ol><p class=\"font-light leading-normal mt-4 mb-2\"><code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\">T(6) = 2*T(5)+1</code>이다.\n즉 원판을 옮겨야하는 수는 하나 적은 수의 원판을 옮기는 문제로 치환된다.</p></section></section><section aria-labelledby=\"분할정복의-최적화\"><h2 class=\"mt-8 mb-3 text-heading2 font-semibold leading-normal\" id=\"분할정복의-최적화\"><a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#분할정복의-최적화\"><span class=\"icon icon-link\"></span></a>분할정복의 최적화</h2><p class=\"font-light leading-normal mt-4 mb-2\">작은 문제로 쪼갰을 때, 이미 푼 작은 문제를 다시 마주했다면 그 작은 문제는 다시 풀 필요가 없다. 즉, 캐싱으로 최적화가 가능하다.</p><section aria-labelledby=\"피보나치-수\"><h3 class=\"mt-7 mb-2 text-heading3 font-semibold leading-normal\" id=\"피보나치-수\"><a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#피보나치-수\"><span class=\"icon icon-link\"></span></a>피보나치 수</h3><blockquote class=\"my-4 border-l-4 border-primary p-6 bg-gray-100 text-gray-700 [&amp;_*:first-child]:mt-0 [&amp;_*:last-child]:mb-0\">\n<p class=\"font-light leading-normal mt-4 mb-2\">1 1 2 3 5 8 13 21 34 ...</p>\n</blockquote><p class=\"font-light leading-normal mt-4 mb-2\">n번째 피보나치 수를 <code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\">T(n)</code>이라고 하자.</p><blockquote class=\"my-4 border-l-4 border-primary p-6 bg-gray-100 text-gray-700 [&amp;_*:first-child]:mt-0 [&amp;_*:last-child]:mb-0\">\n<p class=\"font-light leading-normal mt-4 mb-2\">T(n) = T(n-1) + T(n-2)</p>\n</blockquote><p class=\"font-light leading-normal mt-4 mb-2\">피보나치 수를 재귀식으로 풀어가다보면 T(1), T(2) 등 작은 문제를 여러번 계산한다는 것을 알 수 있다.</p><pre class=\"rounded-md [&amp;_code]:py-0 [&amp;_code]:px-0 line-numbers\"><code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\"><span class=\"code-line\">T(5) = T(4) + T(3)\n</span><span class=\"code-line\">T(4) = T(3) + T(2)\n</span><span class=\"code-line\">T(3) = T(2) + T(1)\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">T(5) = T(2) + T(1) + T(2) + T(2) + T(1)\n</span><span class=\"code-line\">= T(1)*2 + T(2)*3\n</span></code></pre></section></section></section><button class=\"__trds __trds button trds-inline-flex trds-justify-center trds-place-items-center trds-whitespace-nowrap trds-rounded-lg trds-text-md trds-font-medium trds-gap-2 trds-transition-colors trds-cursor-pointer disabled:trds-cursor-not-allowed disabled:trds-opacity-50 trds-bg-neutral trds-text-fg-neutral disabled:trds-bg-neutral enabled:hover:trds-bg-neutral-hover enabled:active:trds-bg-neutral-pressed __trds trds-h-11 trds-w-11 trds-px-0 trds-py-0\" type=\"button\" aria-disabled=\"false\" aria-busy=\"false\" aria-label=\"Share this article\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-share\"><path d=\"M4 12v8a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-8\"></path><polyline points=\"16 6 12 2 8 6\"></polyline><line x1=\"12\" x2=\"12\" y1=\"2\" y2=\"15\"></line></svg></button><div data-scope=\"toast\" data-part=\"group\" dir=\"ltr\" tabindex=\"-1\" aria-label=\"bottom Notifications alt+T\" id=\"toast-group:bottom\" data-placement=\"bottom\" data-side=\"bottom\" data-align=\"center\" aria-live=\"polite\" role=\"region\" style=\"position:fixed;pointer-events:none;display:flex;flex-direction:column;--gap:16px;--first-height:0px;z-index:2147483647;align-items:center;bottom:max(env(safe-area-inset-bottom, 0px), 1rem);inset-inline-end:calc(env(safe-area-inset-right, 0px) + 1rem);inset-inline-start:calc(env(safe-area-inset-left, 0px) + 1rem)\"></div></div><section id=\"author\"><div class=\"flex flex-row gap-4 items-center\"><div class=\"__trds trds-animate-shimmer trds-bg-clip-padding-box trds-text-transparent trds-cursor-default trds-pointer-events-none trds-select-none before::trds-invisible after::trds-invisible [&amp;_*]:trds-invisible trds-rounded-lg rounded-full\"><div data-scope=\"avatar\" data-part=\"root\" dir=\"ltr\" id=\"avatar::Rn7obtsra:\" class=\"trds-rounded-full trds-overflow-hidden w-16 h-16\"><img data-scope=\"avatar\" data-part=\"image\" hidden=\"\" dir=\"ltr\" id=\"avatar::Rn7obtsra::image\" data-state=\"hidden\" class=\"trds-bg-muted\"/><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"64\" height=\"64\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-user trds-bg-muted trds-w-full trds-h-full\" data-scope=\"avatar\" data-part=\"fallback\" dir=\"ltr\" id=\"avatar::Rn7obtsra::fallback\" data-state=\"visible\"><path d=\"M19 21v-2a4 4 0 0 0-4-4H9a4 4 0 0 0-4 4v2\"></path><circle cx=\"12\" cy=\"7\" r=\"4\"></circle></svg></div></div><div class=\"text-pretty flex flex-col gap-2\"><div class=\"__trds trds-animate-shimmer trds-bg-clip-padding-box trds-text-transparent trds-cursor-default trds-pointer-events-none trds-select-none before::trds-invisible after::trds-invisible [&amp;_*]:trds-invisible trds-rounded-lg h-fit w-fit\"><strong class=\"inline-block h-6 min-w-36\"> </strong></div><div class=\"__trds trds-animate-shimmer trds-bg-clip-padding-box trds-text-transparent trds-cursor-default trds-pointer-events-none trds-select-none before::trds-invisible after::trds-invisible [&amp;_*]:trds-invisible trds-rounded-lg h-fit w-fit\"><p class=\"whitespace-pre-wrap h-6 min-w-64\"></p></div></div></div></section><section><div class=\"giscus w-full min-w-screen-md\"></div></section></article></main><footer class=\"self-center w-full max-w-screen-md px-4 h-96\"><p>© 2024-<!-- -->2024<!-- --> <!-- -->dev2820<!-- -->. All rights reserved.</p></footer><script src=\"/next-blog/_next/static/chunks/webpack-8f27d743501d147d.js\" async=\"\"></script><script>(self.__next_f=self.__next_f||[]).push([0]);self.__next_f.push([2,null])</script><script>self.__next_f.push([1,\"1:HL[\\\"/next-blog/_next/static/media/3e7b7e3fd4560936-s.p.woff2\\\",\\\"font\\\",{\\\"crossOrigin\\\":\\\"\\\",\\\"type\\\":\\\"font/woff2\\\"}]\\n2:HL[\\\"/next-blog/_next/static/media/ff840cfebfb63b0c-s.p.woff2\\\",\\\"font\\\",{\\\"crossOrigin\\\":\\\"\\\",\\\"type\\\":\\\"font/woff2\\\"}]\\n3:HL[\\\"/next-blog/_next/static/css/16077bc16defb9b9.css\\\",\\\"style\\\"]\\n4:HL[\\\"/next-blog/_next/static/css/203da25389b4eeab.css\\\",\\\"style\\\"]\\n\"])</script><script>self.__next_f.push([1,\"5:I[5726,[],\\\"\\\"]\\n8:I[1699,[],\\\"\\\"]\\na:I[2579,[],\\\"\\\"]\\nb:I[3805,[\\\"805\\\",\\\"static/chunks/805-a8af350d35fb9160.js\\\",\\\"418\\\",\\\"static/chunks/app/posts/%5Bslug%5D/layout-1cf1294e1a2539f4.js\\\"],\\\"\\\"]\\nc:I[9618,[\\\"618\\\",\\\"static/chunks/618-f2bb34773a0d24b2.js\\\",\\\"991\\\",\\\"static/chunks/app/posts/page-e8c6275c8ebfad50.js\\\"],\\\"\\\"]\\nd:I[6210,[\\\"618\\\",\\\"static/chunks/618-f2bb34773a0d24b2.js\\\",\\\"372\\\",\\\"static/chunks/372-b649e69f56e8eb19.js\\\",\\\"185\\\",\\\"static/chunks/app/layout-c7fa40d911107206.js\\\"],\\\"BrandLogo\\\"]\\ne:I[9205,[\\\"618\\\",\\\"static/chunks/618-f2bb34773a0d24b2.js\\\",\\\"372\\\",\\\"static/chunks/372-b649e69f56e8eb19.js\\\",\\\"185\\\",\\\"static/chunks/app/layout-c7fa40d911107206.js\\\"],\\\"GlobalNavigationBar\\\"]\\n10:I[3141,[],\\\"\\\"]\\n9:[\\\"slug\\\",\\\"algorithm-1-0-divide-and-conquer\\\",\\\"d\\\"]\\n11:[]\\n\"])</script><script>self.__next_f.push([1,\"0:[[[\\\"$\\\",\\\"link\\\",\\\"0\\\",{\\\"rel\\\":\\\"stylesheet\\\",\\\"href\\\":\\\"/next-blog/_next/static/css/16077bc16defb9b9.css\\\",\\\"precedence\\\":\\\"next\\\",\\\"crossOrigin\\\":\\\"$undefined\\\"}]],[\\\"$\\\",\\\"$L5\\\",null,{\\\"buildId\\\":\\\"FkDD4ed24GsUGsJlrpxW5\\\",\\\"assetPrefix\\\":\\\"/next-blog\\\",\\\"initialCanonicalUrl\\\":\\\"/posts/algorithm-1-0-divide-and-conquer\\\",\\\"initialTree\\\":[\\\"\\\",{\\\"children\\\":[\\\"posts\\\",{\\\"children\\\":[[\\\"slug\\\",\\\"algorithm-1-0-divide-and-conquer\\\",\\\"d\\\"],{\\\"children\\\":[\\\"__PAGE__?{\\\\\\\"slug\\\\\\\":\\\\\\\"algorithm-1-0-divide-and-conquer\\\\\\\"}\\\",{}]}]}]},\\\"$undefined\\\",\\\"$undefined\\\",true],\\\"initialSeedData\\\":[\\\"\\\",{\\\"children\\\":[\\\"posts\\\",{\\\"children\\\":[[\\\"slug\\\",\\\"algorithm-1-0-divide-and-conquer\\\",\\\"d\\\"],{\\\"children\\\":[\\\"__PAGE__\\\",{},[[\\\"$L6\\\",\\\"$L7\\\"],null],null]},[[[\\\"$\\\",\\\"$L8\\\",null,{\\\"parallelRouterKey\\\":\\\"children\\\",\\\"segmentPath\\\":[\\\"children\\\",\\\"posts\\\",\\\"children\\\",\\\"$9\\\",\\\"children\\\"],\\\"error\\\":\\\"$undefined\\\",\\\"errorStyles\\\":\\\"$undefined\\\",\\\"errorScripts\\\":\\\"$undefined\\\",\\\"template\\\":[\\\"$\\\",\\\"$La\\\",null,{}],\\\"templateStyles\\\":\\\"$undefined\\\",\\\"templateScripts\\\":\\\"$undefined\\\",\\\"notFound\\\":\\\"$undefined\\\",\\\"notFoundStyles\\\":\\\"$undefined\\\",\\\"styles\\\":null}],[\\\"$\\\",\\\"$Lb\\\",null,{\\\"src\\\":\\\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/prism.min.js\\\"}],[\\\"$\\\",\\\"$Lb\\\",null,{\\\"src\\\":\\\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-javascript.min.js\\\"}],[\\\"$\\\",\\\"$Lb\\\",null,{\\\"src\\\":\\\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-typescript.min.js\\\"}],[\\\"$\\\",\\\"$Lb\\\",null,{\\\"src\\\":\\\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-jsx.min.js\\\"}],[\\\"$\\\",\\\"$Lb\\\",null,{\\\"src\\\":\\\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-tsx.min.js\\\"}],[\\\"$\\\",\\\"$Lb\\\",null,{\\\"src\\\":\\\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-c.min.js\\\"}],[\\\"$\\\",\\\"$Lb\\\",null,{\\\"src\\\":\\\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/plugins/line-numbers/prism-line-numbers.min.js\\\"}]],null],null]},[\\\"$\\\",\\\"$L8\\\",null,{\\\"parallelRouterKey\\\":\\\"children\\\",\\\"segmentPath\\\":[\\\"children\\\",\\\"posts\\\",\\\"children\\\"],\\\"error\\\":\\\"$undefined\\\",\\\"errorStyles\\\":\\\"$undefined\\\",\\\"errorScripts\\\":\\\"$undefined\\\",\\\"template\\\":[\\\"$\\\",\\\"$La\\\",null,{}],\\\"templateStyles\\\":\\\"$undefined\\\",\\\"templateScripts\\\":\\\"$undefined\\\",\\\"notFound\\\":\\\"$undefined\\\",\\\"notFoundStyles\\\":\\\"$undefined\\\",\\\"styles\\\":[[\\\"$\\\",\\\"link\\\",\\\"0\\\",{\\\"rel\\\":\\\"stylesheet\\\",\\\"href\\\":\\\"/next-blog/_next/static/css/203da25389b4eeab.css\\\",\\\"precedence\\\":\\\"next\\\",\\\"crossOrigin\\\":\\\"$undefined\\\"}]]}],null]},[[\\\"$\\\",\\\"html\\\",null,{\\\"lang\\\":\\\"kr\\\",\\\"className\\\":\\\"__variable_fa65fd __variable_7691e4 scroll-smooth\\\",\\\"children\\\":[\\\"$\\\",\\\"body\\\",null,{\\\"className\\\":\\\"__className_fa65fd flex flex-col text-gray-800\\\",\\\"children\\\":[[\\\"$\\\",\\\"link\\\",null,{\\\"href\\\":\\\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/plugins/line-numbers/prism-line-numbers.min.css\\\",\\\"rel\\\":\\\"stylesheet\\\"}],[\\\"$\\\",\\\"header\\\",null,{\\\"className\\\":\\\"flex flex-row justify-center py-2 items-center self-center w-full max-w-screen-md px-4\\\",\\\"children\\\":[[\\\"$\\\",\\\"$Lc\\\",null,{\\\"href\\\":\\\"/\\\",\\\"children\\\":[\\\"$\\\",\\\"$Ld\\\",null,{\\\"height\\\":48}]}],[\\\"$\\\",\\\"div\\\",null,{\\\"className\\\":\\\"flex-1\\\"}],[\\\"$\\\",\\\"$Le\\\",null,{}]]}],[\\\"$\\\",\\\"main\\\",null,{\\\"className\\\":\\\"self-center w-full max-w-screen-md p-4 text-gray-800\\\",\\\"children\\\":[\\\"$\\\",\\\"$L8\\\",null,{\\\"parallelRouterKey\\\":\\\"children\\\",\\\"segmentPath\\\":[\\\"children\\\"],\\\"error\\\":\\\"$undefined\\\",\\\"errorStyles\\\":\\\"$undefined\\\",\\\"errorScripts\\\":\\\"$undefined\\\",\\\"template\\\":[\\\"$\\\",\\\"$La\\\",null,{}],\\\"templateStyles\\\":\\\"$undefined\\\",\\\"templateScripts\\\":\\\"$undefined\\\",\\\"notFound\\\":[\\\"$\\\",\\\"div\\\",null,{\\\"children\\\":[[\\\"$\\\",\\\"h2\\\",null,{\\\"children\\\":\\\"Not Found\\\"}],[\\\"$\\\",\\\"p\\\",null,{\\\"children\\\":\\\"Could not find requested resource\\\"}],[\\\"$\\\",\\\"$Lc\\\",null,{\\\"href\\\":\\\"/\\\",\\\"children\\\":\\\"Return Home\\\"}]]}],\\\"notFoundStyles\\\":[],\\\"styles\\\":null}]}],[\\\"$\\\",\\\"footer\\\",null,{\\\"className\\\":\\\"self-center w-full max-w-screen-md px-4 h-96\\\",\\\"children\\\":[\\\"$\\\",\\\"p\\\",null,{\\\"children\\\":[\\\"© 2024-\\\",2024,\\\" \\\",\\\"dev2820\\\",\\\". All rights reserved.\\\"]}]}]]}]}],null],null],\\\"couldBeIntercepted\\\":false,\\\"initialHead\\\":[null,\\\"$Lf\\\"],\\\"globalErrorComponent\\\":\\\"$10\\\",\\\"missingSlots\\\":\\\"$W11\\\"}]]\\n\"])</script><script>self.__next_f.push([1,\"12:I[2870,[\\\"587\\\",\\\"static/chunks/952ad60e-7cdac7b6bf36214c.js\\\",\\\"618\\\",\\\"static/chunks/618-f2bb34773a0d24b2.js\\\",\\\"372\\\",\\\"static/chunks/372-b649e69f56e8eb19.js\\\",\\\"805\\\",\\\"static/chunks/805-a8af350d35fb9160.js\\\",\\\"333\\\",\\\"static/chunks/app/posts/%5Bslug%5D/page-e951164d6ad6c144.js\\\"],\\\"TableOfContents\\\"]\\n13:I[6894,[\\\"587\\\",\\\"static/chunks/952ad60e-7cdac7b6bf36214c.js\\\",\\\"618\\\",\\\"static/chunks/618-f2bb34773a0d24b2.js\\\",\\\"372\\\",\\\"static/chunks/372-b649e69f56e8eb19.js\\\",\\\"805\\\",\\\"static/chunks/805-a8af350d35fb9160.js\\\",\\\"333\\\",\\\"static/chunks/app/posts/%5Bslug%5D/page-e951164d6ad6c144.js\\\"],\\\"Anchor\\\"]\\n14:I[5969,[\\\"587\\\",\\\"static/chunks/952ad60e-7cdac7b6bf36214c.js\\\",\\\"618\\\",\\\"static/chunks/618-f2bb34773a0d24b2.js\\\",\\\"372\\\",\\\"static/chunks/372-b649e69f56e8eb19.js\\\",\\\"805\\\",\\\"static/chunks/805-a8af350d35fb9160.js\\\",\\\"333\\\",\\\"static/chunks/app/posts/%5Bslug%5D/page-e951164d6ad6c144.js\\\"],\\\"Image\\\"]\\n15:I[4547,[\\\"587\\\",\\\"static/chunks/952ad60e-7cdac7b6bf36214c.js\\\",\\\"618\\\",\\\"static/chunks/618-f2bb34773a0d24b2.js\\\",\\\"372\\\",\\\"static/chunks/372-b649e69f56e8eb19.js\\\",\\\"805\\\",\\\"static/chunks/805-a8af350d35fb9160.js\\\",\\\"333\\\",\\\"static/chunks/app/posts/%5Bslug%5D/page-e951164d6ad6c144.js\\\"],\\\"ShareButton\\\"]\\n16:I[6398,[\\\"587\\\",\\\"static/chunks/952ad60e-7cdac7b6bf36214c.js\\\",\\\"618\\\",\\\"static/chunks/618-f2bb34773a0d24b2.js\\\",\\\"372\\\",\\\"static/chunks/372-b649e69f56e8eb19.js\\\",\\\"805\\\",\\\"static/chunks/805-a8af350d35fb9160.js\\\",\\\"333\\\",\\\"static/chunks/app/posts/%5Bslug%5D/page-e951164d6ad6c144.js\\\"],\\\"AuthorInfo\\\"]\\n\"])</script><script>self.__next_f.push([1,\"7:[\\\"$\\\",\\\"article\\\",null,{\\\"className\\\":\\\"relative\\\",\\\"children\\\":[[\\\"$\\\",\\\"header\\\",null,{\\\"id\\\":\\\"post-meta\\\",\\\"children\\\":[\\\"$undefined\\\",[\\\"$\\\",\\\"h1\\\",null,{\\\"className\\\":\\\"mt-10 mb-4 text-heading1 font-bold leading-normal\\\",\\\"id\\\":\\\"algorithm-1-0-divide-and-conquer\\\",\\\"children\\\":\\\"algorithm-1-0-divide-and-conquer\\\"}],[\\\"$\\\",\\\"time\\\",null,{\\\"dateTime\\\":\\\"2024-03-31\\\",\\\"aria-label\\\":\\\"Published on 2024-03-31\\\",\\\"children\\\":\\\"2024-03-31\\\"}],\\\" \\\",\\\"|\\\",\\\" \\\",[\\\"$\\\",\\\"time\\\",null,{\\\"dateTime\\\":\\\"PT1M\\\",\\\"aria-label\\\":\\\"Estimated reading time\\\",\\\"children\\\":[1,\\\" mins\\\"]}]]}],[\\\"$\\\",\\\"div\\\",null,{\\\"id\\\":\\\"content\\\",\\\"className\\\":\\\"relative\\\",\\\"children\\\":[[\\\"$\\\",\\\"div\\\",null,{\\\"id\\\":\\\"table-of-header\\\",\\\"className\\\":\\\"absolute -right-12 translate-x-full h-full w-52 desktop:block hidden\\\",\\\"children\\\":[\\\"$\\\",\\\"$L12\\\",null,{\\\"toc\\\":[{\\\"level\\\":2,\\\"content\\\":\\\"분할정복을 사용할 수 없는 경우\\\",\\\"slug\\\":\\\"#분할정복을-사용할-수-없는-경우\\\"},{\\\"level\\\":2,\\\"content\\\":\\\"분할정복 설계 방법\\\",\\\"slug\\\":\\\"#분할정복-설계-방법\\\"},{\\\"level\\\":2,\\\"content\\\":\\\"분할정복을 이용하는 대표적인 알고리즘\\\",\\\"slug\\\":\\\"#분할정복을-이용하는-대표적인-알고리즘\\\"},{\\\"level\\\":2,\\\"content\\\":\\\"짧은 예제\\\",\\\"slug\\\":\\\"#짧은-예제\\\"},{\\\"level\\\":3,\\\"content\\\":\\\"큰 정수 계산하기\\\",\\\"slug\\\":\\\"#큰-정수-계산하기\\\"},{\\\"level\\\":3,\\\"content\\\":\\\"하노이의 탑\\\",\\\"slug\\\":\\\"#하노이의-탑\\\"},{\\\"level\\\":2,\\\"content\\\":\\\"분할정복의 최적화\\\",\\\"slug\\\":\\\"#분할정복의-최적화\\\"},{\\\"level\\\":3,\\\"content\\\":\\\"피보나치 수\\\",\\\"slug\\\":\\\"#피보나치-수\\\"}],\\\"className\\\":\\\"sticky top-24\\\"}]}],[\\\"$\\\",\\\"section\\\",null,{\\\"aria-labelledby\\\":\\\"1-분할정복\\\",\\\"children\\\":[[\\\"$\\\",\\\"h1\\\",null,{\\\"className\\\":\\\"mt-10 mb-4 text-heading1 font-bold leading-normal\\\",\\\"id\\\":\\\"1-분할정복\\\",\\\"children\\\":[[\\\"$\\\",\\\"$L13\\\",null,{\\\"aria-hidden\\\":\\\"true\\\",\\\"tabIndex\\\":\\\"-1\\\",\\\"href\\\":\\\"#1-분할정복\\\",\\\"children\\\":[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"icon icon-link\\\"}]}],\\\"1. 분할정복\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"분할정복은 문제 풀이의 정석적인 방법중 하나다. 이름에서 알 수 있듯, 분할정복의 논지는 다음과 같다.\\\"}],[\\\"$\\\",\\\"blockquote\\\",null,{\\\"className\\\":\\\"my-4 border-l-4 border-primary p-6 bg-gray-100 text-gray-700 [\\u0026_*:first-child]:mt-0 [\\u0026_*:last-child]:mb-0\\\",\\\"children\\\":[\\\"\\\\n\\\",[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"큰 문제를 풀 수 있는 작은 문제 여럿으로 분리해 각개격파한다.\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"pre\\\",null,{\\\"className\\\":\\\"rounded-md [\\u0026_code]:py-0 [\\u0026_code]:px-0 line-numbers language-ts\\\",\\\"children\\\":[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2 language-ts\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword\\\",\\\"children\\\":\\\"function\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token function\\\",\\\"children\\\":\\\"bigProblem\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"input\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"{\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token function\\\",\\\"children\\\":\\\"smallProblem\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token function\\\",\\\"children\\\":\\\"smallProblem\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token comment\\\",\\\"children\\\":\\\"// ...\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword\\\",\\\"children\\\":\\\"return\\\"}],\\\" solution\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"}\\\"}],\\\"\\\\n\\\"]}]]}]}],[\\\"$\\\",\\\"section\\\",null,{\\\"aria-labelledby\\\":\\\"분할정복을-사용할-수-없는-경우\\\",\\\"children\\\":[[\\\"$\\\",\\\"h2\\\",null,{\\\"className\\\":\\\"mt-8 mb-3 text-heading2 font-semibold leading-normal\\\",\\\"id\\\":\\\"분할정복을-사용할-수-없는-경우\\\",\\\"children\\\":[[\\\"$\\\",\\\"$L13\\\",null,{\\\"aria-hidden\\\":\\\"true\\\",\\\"tabIndex\\\":\\\"-1\\\",\\\"href\\\":\\\"#분할정복을-사용할-수-없는-경우\\\",\\\"children\\\":[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"icon icon-link\\\"}]}],\\\"분할정복을 사용할 수 없는 경우\\\"]}],[\\\"$\\\",\\\"blockquote\\\",null,{\\\"className\\\":\\\"my-4 border-l-4 border-primary p-6 bg-gray-100 text-gray-700 [\\u0026_*:first-child]:mt-0 [\\u0026_*:last-child]:mb-0\\\",\\\"children\\\":[\\\"\\\\n\\\",[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"부분의 합이 전체보다 큰 경우\\\"}],\\\"\\\\n\\\"]}]]}],[\\\"$\\\",\\\"section\\\",null,{\\\"aria-labelledby\\\":\\\"분할정복-설계-방법\\\",\\\"children\\\":[[\\\"$\\\",\\\"h2\\\",null,{\\\"className\\\":\\\"mt-8 mb-3 text-heading2 font-semibold leading-normal\\\",\\\"id\\\":\\\"분할정복-설계-방법\\\",\\\"children\\\":[[\\\"$\\\",\\\"$L13\\\",null,{\\\"aria-hidden\\\":\\\"true\\\",\\\"tabIndex\\\":\\\"-1\\\",\\\"href\\\":\\\"#분할정복-설계-방법\\\",\\\"children\\\":[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"icon icon-link\\\"}]}],\\\"분할정복 설계 방법\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"문제를 분할정복으로 풀고자 한다면 다음과 같은 순서로 설계할 수 있다.\\\"}],[\\\"$\\\",\\\"ol\\\",null,{\\\"className\\\":\\\"list-decimal my-4\\\",\\\"children\\\":[\\\"\\\\n\\\",[\\\"$\\\",\\\"li\\\",null,{\\\"className\\\":\\\"text-paragraph font-light leading-normal py-1 ml-6\\\",\\\"children\\\":\\\"문제의 입력을 하나 이상의 작은 입력으로 분할한다.\\\"}],\\\"\\\\n\\\",[\\\"$\\\",\\\"li\\\",null,{\\\"className\\\":\\\"text-paragraph font-light leading-normal py-1 ml-6\\\",\\\"children\\\":\\\"작은 입력을 각각 푼다.\\\"}],\\\"\\\\n\\\",[\\\"$\\\",\\\"li\\\",null,{\\\"className\\\":\\\"text-paragraph font-light leading-normal py-1 ml-6\\\",\\\"children\\\":\\\"필요에 따라 분할하여 푼 내용을 합쳐 답을 만들어낸다.\\\"}],\\\"\\\\n\\\"]}]]}],[\\\"$\\\",\\\"section\\\",null,{\\\"aria-labelledby\\\":\\\"분할정복을-이용하는-대표적인-알고리즘\\\",\\\"children\\\":[[\\\"$\\\",\\\"h2\\\",null,{\\\"className\\\":\\\"mt-8 mb-3 text-heading2 font-semibold leading-normal\\\",\\\"id\\\":\\\"분할정복을-이용하는-대표적인-알고리즘\\\",\\\"children\\\":[[\\\"$\\\",\\\"$L13\\\",null,{\\\"aria-hidden\\\":\\\"true\\\",\\\"tabIndex\\\":\\\"-1\\\",\\\"href\\\":\\\"#분할정복을-이용하는-대표적인-알고리즘\\\",\\\"children\\\":[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"icon icon-link\\\"}]}],\\\"분할정복을 이용하는 대표적인 알고리즘\\\"]}],[\\\"$\\\",\\\"ol\\\",null,{\\\"className\\\":\\\"list-decimal my-4\\\",\\\"children\\\":[\\\"\\\\n\\\",[\\\"$\\\",\\\"li\\\",null,{\\\"className\\\":\\\"text-paragraph font-light leading-normal py-1 ml-6\\\",\\\"children\\\":\\\"이분 탐색(binary search)\\\"}],\\\"\\\\n\\\",[\\\"$\\\",\\\"li\\\",null,{\\\"className\\\":\\\"text-paragraph font-light leading-normal py-1 ml-6\\\",\\\"children\\\":\\\"병합정렬(merge sort)\\\"}],\\\"\\\\n\\\",[\\\"$\\\",\\\"li\\\",null,{\\\"className\\\":\\\"text-paragraph font-light leading-normal py-1 ml-6\\\",\\\"children\\\":\\\"퀵정렬(quick sort)\\\"}],\\\"\\\\n\\\",[\\\"$\\\",\\\"li\\\",null,{\\\"className\\\":\\\"text-paragraph font-light leading-normal py-1 ml-6\\\",\\\"children\\\":\\\"쉬트라쎈 행렬곱셈\\\"}],\\\"\\\\n\\\"]}]]}],[\\\"$\\\",\\\"section\\\",null,{\\\"aria-labelledby\\\":\\\"짧은-예제\\\",\\\"children\\\":[[\\\"$\\\",\\\"h2\\\",null,{\\\"className\\\":\\\"mt-8 mb-3 text-heading2 font-semibold leading-normal\\\",\\\"id\\\":\\\"짧은-예제\\\",\\\"children\\\":[[\\\"$\\\",\\\"$L13\\\",null,{\\\"aria-hidden\\\":\\\"true\\\",\\\"tabIndex\\\":\\\"-1\\\",\\\"href\\\":\\\"#짧은-예제\\\",\\\"children\\\":[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"icon icon-link\\\"}]}],\\\"짧은 예제\\\"]}],[\\\"$\\\",\\\"section\\\",null,{\\\"aria-labelledby\\\":\\\"큰-정수-계산하기\\\",\\\"children\\\":[[\\\"$\\\",\\\"h3\\\",null,{\\\"className\\\":\\\"mt-7 mb-2 text-heading3 font-semibold leading-normal\\\",\\\"id\\\":\\\"큰-정수-계산하기\\\",\\\"children\\\":[[\\\"$\\\",\\\"$L13\\\",null,{\\\"aria-hidden\\\":\\\"true\\\",\\\"tabIndex\\\":\\\"-1\\\",\\\"href\\\":\\\"#큰-정수-계산하기\\\",\\\"children\\\":[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"icon icon-link\\\"}]}],\\\"큰 정수 계산하기\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"초등학생 때 배웠던 인수분해를 통해 큰 수를 작은 수로 분할해 계산할 수 있다.\\\"}],[\\\"$\\\",\\\"pre\\\",null,{\\\"className\\\":\\\"rounded-md [\\u0026_code]:py-0 [\\u0026_code]:px-0 line-numbers\\\",\\\"children\\\":[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"1234 * 5678\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"= (12 * 100 + 34) * (56 * 100 + 78)\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"= `12*56*10000 + (12*78 + 34*56)*100 + 34*78\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"// 문제가 작은 수 곱하기 3개와 숫자 더하기 문제로 쪼개졌다.\\\\n\\\"}]]}]}]]}],[\\\"$\\\",\\\"section\\\",null,{\\\"aria-labelledby\\\":\\\"하노이의-탑\\\",\\\"children\\\":[[\\\"$\\\",\\\"h3\\\",null,{\\\"className\\\":\\\"mt-7 mb-2 text-heading3 font-semibold leading-normal\\\",\\\"id\\\":\\\"하노이의-탑\\\",\\\"children\\\":[[\\\"$\\\",\\\"$L13\\\",null,{\\\"aria-hidden\\\":\\\"true\\\",\\\"tabIndex\\\":\\\"-1\\\",\\\"href\\\":\\\"#하노이의-탑\\\",\\\"children\\\":[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"icon icon-link\\\"}]}],\\\"하노이의 탑\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":[[\\\"$\\\",\\\"$L14\\\",null,{\\\"className\\\":\\\"object-cover rounded-md mx-auto my-12 w-full max-w-[704px]\\\",\\\"src\\\":\\\"/next-blog/posts/algorithm-1-0-divide-and-conquer/images/hanoi.png\\\",\\\"alt\\\":\\\"하노이의 탑\\\",\\\"width\\\":704,\\\"height\\\":300}],\\\"\\\\n출처: \\\",[\\\"$\\\",\\\"$L13\\\",null,{\\\"href\\\":\\\"https://ko.wikipedia.org/wiki/%ED%95%98%EB%85%B8%EC%9D%B4%EC%9D%98_%ED%83%91\\\",\\\"children\\\":\\\"https://ko.wikipedia.org/wiki/%ED%95%98%EB%85%B8%EC%9D%B4%EC%9D%98_%ED%83%91\\\"}]]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":[\\\"하노이의 탑을 완성하기 위해 원판을 옮기는 작업의 최소 수를 \\\",[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\\\",\\\"children\\\":\\\"T(n), n=원판의 수\\\"}],\\\"라고 하자\\\\n하노이의 탑은 다음과 같이 문제를 쪼갤 수 있다. T(6)을 풀어보자\\\"]}],[\\\"$\\\",\\\"ol\\\",null,{\\\"className\\\":\\\"list-decimal my-4\\\",\\\"children\\\":[\\\"\\\\n\\\",[\\\"$\\\",\\\"li\\\",null,{\\\"className\\\":\\\"text-paragraph font-light leading-normal py-1 ml-6\\\",\\\"children\\\":\\\"가장 큰 원판 위에 올라간 원판을 모두 2번 기둥으로 옮긴다. -\\u003e T(5)\\\"}],\\\"\\\\n\\\",[\\\"$\\\",\\\"li\\\",null,{\\\"className\\\":\\\"text-paragraph font-light leading-normal py-1 ml-6\\\",\\\"children\\\":\\\"가장 큰 원판을 3번 기둥으로 옮긴다. -\\u003e 1\\\"}],\\\"\\\\n\\\",[\\\"$\\\",\\\"li\\\",null,{\\\"className\\\":\\\"text-paragraph font-light leading-normal py-1 ml-6\\\",\\\"children\\\":\\\"2번 기둥의 원판을 3번 기둥으로 옮긴다. -\\u003e T(5)\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":[[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\\\",\\\"children\\\":\\\"T(6) = 2*T(5)+1\\\"}],\\\"이다.\\\\n즉 원판을 옮겨야하는 수는 하나 적은 수의 원판을 옮기는 문제로 치환된다.\\\"]}]]}]]}],[\\\"$\\\",\\\"section\\\",null,{\\\"aria-labelledby\\\":\\\"분할정복의-최적화\\\",\\\"children\\\":[[\\\"$\\\",\\\"h2\\\",null,{\\\"className\\\":\\\"mt-8 mb-3 text-heading2 font-semibold leading-normal\\\",\\\"id\\\":\\\"분할정복의-최적화\\\",\\\"children\\\":[[\\\"$\\\",\\\"$L13\\\",null,{\\\"aria-hidden\\\":\\\"true\\\",\\\"tabIndex\\\":\\\"-1\\\",\\\"href\\\":\\\"#분할정복의-최적화\\\",\\\"children\\\":[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"icon icon-link\\\"}]}],\\\"분할정복의 최적화\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"작은 문제로 쪼갰을 때, 이미 푼 작은 문제를 다시 마주했다면 그 작은 문제는 다시 풀 필요가 없다. 즉, 캐싱으로 최적화가 가능하다.\\\"}],[\\\"$\\\",\\\"section\\\",null,{\\\"aria-labelledby\\\":\\\"피보나치-수\\\",\\\"children\\\":[[\\\"$\\\",\\\"h3\\\",null,{\\\"className\\\":\\\"mt-7 mb-2 text-heading3 font-semibold leading-normal\\\",\\\"id\\\":\\\"피보나치-수\\\",\\\"children\\\":[[\\\"$\\\",\\\"$L13\\\",null,{\\\"aria-hidden\\\":\\\"true\\\",\\\"tabIndex\\\":\\\"-1\\\",\\\"href\\\":\\\"#피보나치-수\\\",\\\"children\\\":[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"icon icon-link\\\"}]}],\\\"피보나치 수\\\"]}],[\\\"$\\\",\\\"blockquote\\\",null,{\\\"className\\\":\\\"my-4 border-l-4 border-primary p-6 bg-gray-100 text-gray-700 [\\u0026_*:first-child]:mt-0 [\\u0026_*:last-child]:mb-0\\\",\\\"children\\\":[\\\"\\\\n\\\",[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"1 1 2 3 5 8 13 21 34 ...\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":[\\\"n번째 피보나치 수를 \\\",[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\\\",\\\"children\\\":\\\"T(n)\\\"}],\\\"이라고 하자.\\\"]}],[\\\"$\\\",\\\"blockquote\\\",null,{\\\"className\\\":\\\"my-4 border-l-4 border-primary p-6 bg-gray-100 text-gray-700 [\\u0026_*:first-child]:mt-0 [\\u0026_*:last-child]:mb-0\\\",\\\"children\\\":[\\\"\\\\n\\\",[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"T(n) = T(n-1) + T(n-2)\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"피보나치 수를 재귀식으로 풀어가다보면 T(1), T(2) 등 작은 문제를 여러번 계산한다는 것을 알 수 있다.\\\"}],[\\\"$\\\",\\\"pre\\\",null,{\\\"className\\\":\\\"rounded-md [\\u0026_code]:py-0 [\\u0026_code]:px-0 line-numbers\\\",\\\"children\\\":[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"T(5) = T(4) + T(3)\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"T(4) = T(3) + T(2)\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"T(3) = T(2) + T(1)\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"T(5) = T(2) + T(1) + T(2) + T(2) + T(1)\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"= T(1)*2 + T(2)*3\\\\n\\\"}]]}]}]]}]]}]]}],[\\\"$\\\",\\\"$L15\\\",null,{\\\"size\\\":\\\"lg\\\",\\\"shareData\\\":{\\\"title\\\":\\\"Terra Dev Blog - algorithm-1-0-divide-and-conquer\\\",\\\"text\\\":\\\"$undefined\\\",\\\"url\\\":\\\"/next-blog/posts/algorithm-1-0-divide-and-conquer\\\"},\\\"aria-label\\\":\\\"Share this article\\\"}]]}],[\\\"$\\\",\\\"section\\\",null,{\\\"id\\\":\\\"author\\\",\\\"children\\\":[\\\"$\\\",\\\"$L16\\\",null,{}]}],[\\\"$\\\",\\\"section\\\",null,{\\\"children\\\":[[\\\"$\\\",\\\"$Lb\\\",null,{\\\"src\\\":\\\"https://giscus.app/client.js\\\",\\\"data-repo\\\":\\\"dev2820/blog-posts\\\",\\\"data-repo-id\\\":\\\"R_kgDOLQagPA\\\",\\\"data-category\\\":\\\"General\\\",\\\"data-category-id\\\":\\\"DIC_kwDOLQagPM4CjAtl\\\",\\\"data-mapping\\\":\\\"og:title\\\",\\\"data-strict\\\":\\\"0\\\",\\\"data-reactions-enabled\\\":\\\"1\\\",\\\"data-emit-metadata\\\":\\\"0\\\",\\\"data-input-position\\\":\\\"top\\\",\\\"data-theme\\\":\\\"light\\\",\\\"data-lang\\\":\\\"ko\\\",\\\"data-loading\\\":\\\"lazy\\\",\\\"cross-origin\\\":\\\"anonymous\\\",\\\"async\\\":true}],[\\\"$\\\",\\\"div\\\",null,{\\\"className\\\":\\\"giscus w-full min-w-screen-md\\\"}]]}]]}]\\n\"])</script><script>self.__next_f.push([1,\"f:[[\\\"$\\\",\\\"meta\\\",\\\"0\\\",{\\\"name\\\":\\\"viewport\\\",\\\"content\\\":\\\"width=device-width, initial-scale=1\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"1\\\",{\\\"charSet\\\":\\\"utf-8\\\"}],[\\\"$\\\",\\\"title\\\",\\\"2\\\",{\\\"children\\\":\\\"Terra Dev Blog - algorithm-1-0-divide-and-conquer\\\"}],[\\\"$\\\",\\\"link\\\",\\\"3\\\",{\\\"rel\\\":\\\"canonical\\\",\\\"href\\\":\\\"https://dev2820.github.io/next-blog/algorithm-1-0-divide-and-conquer\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"4\\\",{\\\"property\\\":\\\"og:title\\\",\\\"content\\\":\\\"algorithm-1-0-divide-and-conquer\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"5\\\",{\\\"property\\\":\\\"og:url\\\",\\\"content\\\":\\\"https://dev2820.github.io/next-blog/algorithm-1-0-divide-and-conquer\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"6\\\",{\\\"property\\\":\\\"og:locale\\\",\\\"content\\\":\\\"ko_KR\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"7\\\",{\\\"property\\\":\\\"og:image\\\",\\\"content\\\":\\\"https://dev2820.github.io/next-blog/next-blog/posts/algorithm-1-0-divide-and-conquer\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"8\\\",{\\\"property\\\":\\\"og:image:width\\\",\\\"content\\\":\\\"800\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"9\\\",{\\\"property\\\":\\\"og:image:height\\\",\\\"content\\\":\\\"600\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"10\\\",{\\\"property\\\":\\\"og:image:alt\\\",\\\"content\\\":\\\"algorithm-1-0-divide-and-conquer\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"11\\\",{\\\"property\\\":\\\"og:type\\\",\\\"content\\\":\\\"article\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"12\\\",{\\\"name\\\":\\\"twitter:card\\\",\\\"content\\\":\\\"summary_large_image\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"13\\\",{\\\"name\\\":\\\"twitter:title\\\",\\\"content\\\":\\\"algorithm-1-0-divide-and-conquer\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"14\\\",{\\\"name\\\":\\\"twitter:image\\\",\\\"content\\\":\\\"https://dev2820.github.io/next-blog/next-blog/posts/algorithm-1-0-divide-and-conquer\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"15\\\",{\\\"name\\\":\\\"twitter:image:width\\\",\\\"content\\\":\\\"800\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"16\\\",{\\\"name\\\":\\\"twitter:image:height\\\",\\\"content\\\":\\\"600\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"17\\\",{\\\"name\\\":\\\"twitter:image:alt\\\",\\\"content\\\":\\\"algorithm-1-0-divide-and-conquer\\\"}],[\\\"$\\\",\\\"link\\\",\\\"18\\\",{\\\"rel\\\":\\\"icon\\\",\\\"href\\\":\\\"/next-blog/favicon.ico\\\",\\\"type\\\":\\\"image/x-icon\\\",\\\"sizes\\\":\\\"16x16\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"19\\\",{\\\"name\\\":\\\"next-size-adjust\\\"}]]\\n6:null\\n\"])</script></body></html>",
            "url": "https://dev2820.github.io/next-blogalgorithm-1-0-divide-and-conquer",
            "title": "algorithm-1-0-divide-and-conquer",
            "date_modified": "2024-03-31T12:40:51.204Z",
            "author": {
                "name": "dev2820",
                "url": "https://dev2820.github.io/next-blog/about"
            }
        },
        {
            "id": "algorithm-1-1-binary-search",
            "content_html": "<!DOCTYPE html><html lang=\"kr\" class=\"__variable_fa65fd __variable_7691e4 scroll-smooth\"><head><meta charSet=\"utf-8\"/><meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"/><link rel=\"preload\" href=\"/next-blog/_next/static/media/3e7b7e3fd4560936-s.p.woff2\" as=\"font\" crossorigin=\"\" type=\"font/woff2\"/><link rel=\"preload\" href=\"/next-blog/_next/static/media/ff840cfebfb63b0c-s.p.woff2\" as=\"font\" crossorigin=\"\" type=\"font/woff2\"/><link rel=\"stylesheet\" href=\"/next-blog/_next/static/css/16077bc16defb9b9.css\" data-precedence=\"next\"/><link rel=\"stylesheet\" href=\"/next-blog/_next/static/css/203da25389b4eeab.css\" data-precedence=\"next\"/><link rel=\"preload\" as=\"script\" fetchPriority=\"low\" href=\"/next-blog/_next/static/chunks/webpack-8f27d743501d147d.js\"/><script src=\"/next-blog/_next/static/chunks/f14ca715-03ac7b40665f0731.js\" async=\"\"></script><script src=\"/next-blog/_next/static/chunks/465-9f8ee17d6a70e147.js\" async=\"\"></script><script src=\"/next-blog/_next/static/chunks/main-app-e31317f2a5bf611e.js\" async=\"\"></script><script src=\"/next-blog/_next/static/chunks/805-a8af350d35fb9160.js\" async=\"\"></script><script src=\"/next-blog/_next/static/chunks/app/posts/%5Bslug%5D/layout-1cf1294e1a2539f4.js\" async=\"\"></script><script src=\"/next-blog/_next/static/chunks/618-f2bb34773a0d24b2.js\" async=\"\"></script><script src=\"/next-blog/_next/static/chunks/app/posts/page-e8c6275c8ebfad50.js\" async=\"\"></script><script src=\"/next-blog/_next/static/chunks/372-b649e69f56e8eb19.js\" async=\"\"></script><script src=\"/next-blog/_next/static/chunks/app/layout-c7fa40d911107206.js\" async=\"\"></script><script src=\"/next-blog/_next/static/chunks/952ad60e-7cdac7b6bf36214c.js\" async=\"\"></script><script src=\"/next-blog/_next/static/chunks/app/posts/%5Bslug%5D/page-e951164d6ad6c144.js\" async=\"\"></script><link rel=\"preload\" href=\"https://giscus.app/client.js\" as=\"script\"/><link rel=\"preload\" href=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/prism.min.js\" as=\"script\"/><link rel=\"preload\" href=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-javascript.min.js\" as=\"script\"/><link rel=\"preload\" href=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-typescript.min.js\" as=\"script\"/><link rel=\"preload\" href=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-jsx.min.js\" as=\"script\"/><link rel=\"preload\" href=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-tsx.min.js\" as=\"script\"/><link rel=\"preload\" href=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-c.min.js\" as=\"script\"/><link rel=\"preload\" href=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/plugins/line-numbers/prism-line-numbers.min.js\" as=\"script\"/><title>Terra Dev Blog - algorithm-1-1-binary-search</title><link rel=\"canonical\" href=\"https://dev2820.github.io/next-blog/algorithm-1-1-binary-search\"/><meta property=\"og:title\" content=\"algorithm-1-1-binary-search\"/><meta property=\"og:url\" content=\"https://dev2820.github.io/next-blog/algorithm-1-1-binary-search\"/><meta property=\"og:locale\" content=\"ko_KR\"/><meta property=\"og:image\" content=\"https://dev2820.github.io/next-blog/next-blog/posts/algorithm-1-1-binary-search\"/><meta property=\"og:image:width\" content=\"800\"/><meta property=\"og:image:height\" content=\"600\"/><meta property=\"og:image:alt\" content=\"algorithm-1-1-binary-search\"/><meta property=\"og:type\" content=\"article\"/><meta name=\"twitter:card\" content=\"summary_large_image\"/><meta name=\"twitter:title\" content=\"algorithm-1-1-binary-search\"/><meta name=\"twitter:image\" content=\"https://dev2820.github.io/next-blog/next-blog/posts/algorithm-1-1-binary-search\"/><meta name=\"twitter:image:width\" content=\"800\"/><meta name=\"twitter:image:height\" content=\"600\"/><meta name=\"twitter:image:alt\" content=\"algorithm-1-1-binary-search\"/><link rel=\"icon\" href=\"/next-blog/favicon.ico\" type=\"image/x-icon\" sizes=\"16x16\"/><meta name=\"next-size-adjust\"/><script src=\"/next-blog/_next/static/chunks/polyfills-78c92fac7aa8fdd8.js\" noModule=\"\"></script></head><body class=\"__className_fa65fd flex flex-col text-gray-800\"><link href=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/plugins/line-numbers/prism-line-numbers.min.css\" rel=\"stylesheet\"/><header class=\"flex flex-row justify-center py-2 items-center self-center w-full max-w-screen-md px-4\"><a href=\"/next-blog\"><img alt=\"Terra&#x27;s Devlog logo\" loading=\"lazy\" width=\"258\" height=\"48\" decoding=\"async\" data-nimg=\"1\" style=\"color:transparent\" src=\"/next-blog/_next/static/media/logo-full.a2c57f51.svg\"/></a><div class=\"flex-1\"></div><nav class=\"\"><menu class=\"flex flex-row gap-8\"><li><a aria-disabled=\"false\" href=\"/next-blog/posts\"><div class=\"cursor-pointer duration-200 font-medium text-primary hover:text-primary\">Posts</div></a></li><li><a aria-disabled=\"true\" href=\"\"><div class=\"duration-200 font-medium cursor-not-allowed text-muted hover:text-muted\">About Me</div></a></li><li><a aria-disabled=\"true\" href=\"\"><div class=\"duration-200 font-medium cursor-not-allowed text-muted hover:text-muted\">Contact</div></a></li></menu></nav></header><main class=\"self-center w-full max-w-screen-md p-4 text-gray-800\"><article class=\"relative\"><header id=\"post-meta\"><h1 class=\"mt-10 mb-4 text-heading1 font-bold leading-normal\" id=\"algorithm-1-1-binary-search\">algorithm-1-1-binary-search</h1><time dateTime=\"2024-03-31\" aria-label=\"Published on 2024-03-31\">2024-03-31</time> <!-- -->|<!-- --> <time dateTime=\"PT1M\" aria-label=\"Estimated reading time\">1<!-- --> mins</time></header><div id=\"content\" class=\"relative\"><div id=\"table-of-header\" class=\"absolute -right-12 translate-x-full h-full w-52 desktop:block hidden\"><nav class=\"sticky top-24\"><ol><li><a href=\"#재귀-이분-탐색의-복잡도\"><div class=\"text-sm font-light data-[active=&quot;true&quot;]:text-base data-[active=&quot;true&quot;]:font-semibold py-0.5 text-neutral-400 data-[active=&quot;true&quot;]:text-primary duration-200 hover:text-primary pl-10\" data-id=\"#재귀-이분-탐색의-복잡도\">재귀 이분 탐색의 복잡도</div></a></li><li><a href=\"#재귀-이분탐색-javascript-구현\"><div class=\"text-sm font-light data-[active=&quot;true&quot;]:text-base data-[active=&quot;true&quot;]:font-semibold py-0.5 text-neutral-400 data-[active=&quot;true&quot;]:text-primary duration-200 hover:text-primary pl-10\" data-id=\"#재귀-이분탐색-javascript-구현\">재귀 이분탐색 javascript 구현</div></a></li><li><a href=\"#반복-이분탐색\"><div class=\"text-sm font-light data-[active=&quot;true&quot;]:text-base data-[active=&quot;true&quot;]:font-semibold py-0.5 text-neutral-400 data-[active=&quot;true&quot;]:text-primary duration-200 hover:text-primary pl-10\" data-id=\"#반복-이분탐색\">반복 이분탐색</div></a></li><li><a href=\"#반복-이분탐색-javascript-구현\"><div class=\"text-sm font-light data-[active=&quot;true&quot;]:text-base data-[active=&quot;true&quot;]:font-semibold py-0.5 text-neutral-400 data-[active=&quot;true&quot;]:text-primary duration-200 hover:text-primary pl-10\" data-id=\"#반복-이분탐색-javascript-구현\">반복 이분탐색 javascript 구현</div></a></li><li><a href=\"#추가적인-생각거리\"><div class=\"text-sm font-light data-[active=&quot;true&quot;]:text-base data-[active=&quot;true&quot;]:font-semibold py-0.5 text-neutral-400 data-[active=&quot;true&quot;]:text-primary duration-200 hover:text-primary pl-4\" data-id=\"#추가적인-생각거리\">추가적인 생각거리</div></a></li></ol></nav></div><section aria-labelledby=\"11-이분-탐색-binary-search\"><h1 class=\"mt-10 mb-4 text-heading1 font-bold leading-normal\" id=\"11-이분-탐색-binary-search\"><a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#11-이분-탐색-binary-search\"><span class=\"icon icon-link\"></span></a>1.1 이분 탐색 (Binary Search)</h1><p class=\"font-light leading-normal mt-4 mb-2\">이분 탐색 알고리즘은 정렬된 배열 내에서 특정한 원소를 찾는데 특화된 알고리즘이다. 말 그대로 배열을 둘로 분할(divide)한뒤 탐색을 하는데, 이렇게 되면 탐색 영역이 절반씩 줄어든다.</p><p class=\"font-light leading-normal mt-4 mb-2\">이분 탐색 전략이 성립하려면 <strong class=\"font-medium\">정렬되어 있음</strong>이 전제되어야한다. 정렬되어있지 않다면 분할한 영역중 한 영역에 찾으려는 값이 없다는 것을 보장할 수 없기 때문이다.</p><p class=\"font-light leading-normal mt-4 mb-2\">먼저 재귀 방식으로 이분 탐색 알고리즘을 설계해보자.</p><pre class=\"rounded-md [&amp;_code]:py-0 [&amp;_code]:px-0 line-numbers language-js\"><code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2 language-js\"><span class=\"code-line\"><span class=\"token function\">binarySearch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">start<span class=\"token punctuation\">,</span>end</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">  mid <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>start <span class=\"token operator\">+</span> end<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">  <span class=\"token keyword control-flow\">if</span><span class=\"token punctuation\">(</span>start <span class=\"token operator\">&gt;</span> end<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">    <span class=\"token comment\">// 탐색 범위가 0보다 작기 때문에 target을 찾을 수 없다.</span>\n</span><span class=\"code-line\">    <span class=\"token keyword control-flow\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">  <span class=\"token punctuation\">}</span>\n</span><span class=\"code-line\">  <span class=\"token keyword control-flow\">if</span><span class=\"token punctuation\">(</span>inputs<span class=\"token punctuation\">[</span>end<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> target<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">    <span class=\"token comment\">// 찾고자 하는 값이 범위의 최대값보다 크다면 주어진 범위안에 target이 존재하지 않는다는 뜻이다.</span>\n</span><span class=\"code-line\">    <span class=\"token keyword control-flow\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">  <span class=\"token punctuation\">}</span>\n</span><span class=\"code-line\">  <span class=\"token keyword control-flow\">if</span><span class=\"token punctuation\">(</span>inputs<span class=\"token punctuation\">[</span>start<span class=\"token punctuation\">]</span> <span class=\"token operator\">&gt;</span> target<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">    <span class=\"token comment\">// 마찬가지로 범위의 최소값보다 target이 작다면 주어진 범위에 target은 존재하지 않는다.</span>\n</span><span class=\"code-line\">    <span class=\"token keyword control-flow\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">  <span class=\"token punctuation\">}</span>\n</span><span class=\"code-line\">  <span class=\"token keyword control-flow\">if</span><span class=\"token punctuation\">(</span>inputs<span class=\"token punctuation\">[</span>mid<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> target<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">    <span class=\"token comment\">// 배열 중앙의 원소값이 target과 일치하는지 확인한다.</span>\n</span><span class=\"code-line\">    <span class=\"token keyword control-flow\">return</span> mid<span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">  <span class=\"token punctuation\">}</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">  <span class=\"token comment\">// 중앙값의 왼쪽 배열과 오른쪽 배열 중에서 원소를 찾는 행위를 재귀적으로 반복한다.</span>\n</span><span class=\"code-line\">  <span class=\"token keyword control-flow\">return</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span>\n</span><span class=\"code-line\">    <span class=\"token function\">binarySearch</span><span class=\"token punctuation\">(</span>start<span class=\"token punctuation\">,</span> mid<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n</span><span class=\"code-line\">    <span class=\"token function\">binarySearch</span><span class=\"token punctuation\">(</span>mid<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>end<span class=\"token punctuation\">)</span>\n</span><span class=\"code-line\">  <span class=\"token punctuation\">)</span>\n</span><span class=\"code-line\"><span class=\"token punctuation\">}</span>\n</span></code></pre><p class=\"font-light leading-normal mt-4 mb-2\">우리가 문제를 어떻게 작게 쪼개었는지 살펴보자.</p><blockquote class=\"my-4 border-l-4 border-primary p-6 bg-gray-100 text-gray-700 [&amp;_*:first-child]:mt-0 [&amp;_*:last-child]:mb-0\">\n<p class=\"font-light leading-normal mt-4 mb-2\">문제: 길이 n인 정렬된 배열 A가 주어질 때 배열 안의 x의 위치를 구하라</p>\n<ol class=\"list-decimal my-4\">\n<li class=\"text-paragraph font-light leading-normal py-1 ml-6\">\n<p class=\"font-light leading-normal mt-4 mb-2\">종료조건을 정의한다.</p>\n</li>\n</ol>\n<ul class=\"list-disc my-4\">\n<li class=\"text-paragraph font-light leading-normal py-1 ml-6\">\n<p class=\"font-light leading-normal mt-4 mb-2\">배열에서 x를 찾을 수 없다면 -1을 반환한다.</p>\n</li>\n<li class=\"text-paragraph font-light leading-normal py-1 ml-6\">\n<p class=\"font-light leading-normal mt-4 mb-2\">배열의 중앙 값이 x라면 그 인덱스를 반환한다.</p>\n</li>\n</ul>\n<ol class=\"list-decimal my-4\" start=\"2\">\n<li class=\"text-paragraph font-light leading-normal py-1 ml-6\">\n<p class=\"font-light leading-normal mt-4 mb-2\">분할 방법을 선택한다.</p>\n</li>\n</ol>\n<ul class=\"list-disc my-4\">\n<li class=\"text-paragraph font-light leading-normal py-1 ml-6\">배열의 중앙을 기준으로 배열을 2개로 쪼갠다.</li>\n<li class=\"text-paragraph font-light leading-normal py-1 ml-6\">쪼갠 배열에 대해 종료조건을 대입, 이 과정을 반복한다.</li>\n</ul>\n</blockquote><p class=\"font-light leading-normal mt-4 mb-2\">앞에선 큰 문제를 작은 문제로 쪼개고 각개격파한다는 것을 강조하기 위해 구태여 쪼갠 두 범위를 다시 탐색했다. 정렬된 배열의 특성을 이용해 알고리즘을 좀 더 효율적으로 바꿀 수 있다.</p><pre class=\"rounded-md [&amp;_code]:py-0 [&amp;_code]:px-0 line-numbers language-js\"><code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2 language-js\"><span class=\"code-line\"><span class=\"token function\">binarySearch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">start<span class=\"token punctuation\">,</span>end</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">  mid <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>start <span class=\"token operator\">+</span> end<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">  <span class=\"token keyword control-flow\">if</span><span class=\"token punctuation\">(</span>start <span class=\"token operator\">&gt;</span> end<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">    <span class=\"token comment\">// 범위가 0이라면 원소를 찾을 수 없다.</span>\n</span><span class=\"code-line\">    <span class=\"token keyword control-flow\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">  <span class=\"token punctuation\">}</span>\n</span><span class=\"code-line\">  <span class=\"token keyword control-flow\">if</span><span class=\"token punctuation\">(</span>inputs<span class=\"token punctuation\">[</span>mid<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> target<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">    <span class=\"token comment\">// 배열 중앙의 원소값이 target과 일치하는지 확인한다.</span>\n</span><span class=\"code-line\">    <span class=\"token keyword control-flow\">return</span> mid<span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">  <span class=\"token punctuation\">}</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">  <span class=\"token keyword control-flow\">if</span><span class=\"token punctuation\">(</span>inputs<span class=\"token punctuation\">[</span>mid<span class=\"token punctuation\">]</span> <span class=\"token operator\">&gt;</span> target<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">    <span class=\"token comment\">// inputs[mid]가 target보다 크다면 inputs[mid+1...end]도 target보다 클 것이기에 확인하지 않아도 된다.</span>\n</span><span class=\"code-line\">    <span class=\"token keyword control-flow\">return</span> <span class=\"token function\">binarySearch</span><span class=\"token punctuation\">(</span>start<span class=\"token punctuation\">,</span>mid<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">  <span class=\"token punctuation\">}</span>\n</span><span class=\"code-line\">  <span class=\"token keyword control-flow\">else</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">    <span class=\"token comment\">// inputs[mid]가 target보다 작다면 inputs[start...mid-1]도 target보다 작을 것이기에 확인하지 않아도 된다.</span>\n</span><span class=\"code-line\">    <span class=\"token keyword control-flow\">return</span> <span class=\"token function\">binarySearch</span><span class=\"token punctuation\">(</span>mid<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>end<span class=\"token punctuation\">)</span>\n</span><span class=\"code-line\">  <span class=\"token punctuation\">}</span>\n</span><span class=\"code-line\"><span class=\"token punctuation\">}</span>\n</span></code></pre><section aria-labelledby=\"재귀-이분-탐색의-복잡도\"><h3 class=\"mt-7 mb-2 text-heading3 font-semibold leading-normal\" id=\"재귀-이분-탐색의-복잡도\"><a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#재귀-이분-탐색의-복잡도\"><span class=\"icon icon-link\"></span></a>재귀 이분 탐색의 복잡도</h3><p class=\"font-light leading-normal mt-4 mb-2\">이분 탐색을 통해선 탐색 범위가 절반씩 줄어든다.\n최선의 상황은 짚은 중앙 값이 바로 찾던 값인 경우이다. 1번의 비교가 필요하기 때문에 최선의 복잡도는 <code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\">1</code>이다.\n최악의 상황은 배열 안에서 타겟을 찾지 못하는 상황이다. 매번 값의 비교(같은지,큰지,작은지)와 절반 만큼의 재귀가 일어난다. 값의 크코작고같음 비교를 단위연산으로 보자. 다음의 점화식을 새울 수 있다.</p><blockquote class=\"my-4 border-l-4 border-primary p-6 bg-gray-100 text-gray-700 [&amp;_*:first-child]:mt-0 [&amp;_*:last-child]:mb-0\">\n<p class=\"font-light leading-normal mt-4 mb-2\">W(n) = W(n/2) + 1</p>\n<p class=\"font-light leading-normal mt-4 mb-2\">W(n) = n 길이 배열에 대한 이분연산에서 일어나는 단위연산의 수</p>\n</blockquote><p class=\"font-light leading-normal mt-4 mb-2\">이 경우 <code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\">logn + 1</code>의 연산이 필요하다.</p><p class=\"font-light leading-normal mt-4 mb-2\">즉, 복잡도는 <code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\">O(logn)</code>이 된다.</p></section><section aria-labelledby=\"재귀-이분탐색-javascript-구현\"><h3 class=\"mt-7 mb-2 text-heading3 font-semibold leading-normal\" id=\"재귀-이분탐색-javascript-구현\"><a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#재귀-이분탐색-javascript-구현\"><span class=\"icon icon-link\"></span></a>재귀 이분탐색 javascript 구현</h3><p class=\"font-light leading-normal mt-4 mb-2\">js로 구현하면 다음과 같다.</p><pre class=\"rounded-md [&amp;_code]:py-0 [&amp;_code]:px-0 line-numbers language-js\"><code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2 language-js\"><span class=\"code-line\"><span class=\"token keyword\">function</span> <span class=\"token function\">binarySearch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">start<span class=\"token punctuation\">,</span> end<span class=\"token punctuation\">,</span> inputs<span class=\"token punctuation\">,</span> target</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">  <span class=\"token keyword\">const</span> mid <span class=\"token operator\">=</span> <span class=\"token known-class-name class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">floor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>start <span class=\"token operator\">+</span> end<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">  <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span>start <span class=\"token operator\">&gt;</span> end<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">    <span class=\"token keyword control-flow\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">  <span class=\"token punctuation\">}</span>\n</span><span class=\"code-line\">  <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span>inputs<span class=\"token punctuation\">[</span>mid<span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> target<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">    <span class=\"token keyword control-flow\">return</span> mid<span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">  <span class=\"token punctuation\">}</span>\n</span><span class=\"code-line\">  <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span>inputs<span class=\"token punctuation\">[</span>mid<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> target<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">    <span class=\"token keyword control-flow\">return</span> <span class=\"token function\">binarySearch</span><span class=\"token punctuation\">(</span>mid <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> end<span class=\"token punctuation\">,</span> inputs<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">  <span class=\"token punctuation\">}</span>\n</span><span class=\"code-line\">  <span class=\"token keyword control-flow\">return</span> <span class=\"token function\">binarySearch</span><span class=\"token punctuation\">(</span>start<span class=\"token punctuation\">,</span> mid <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> inputs<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\"><span class=\"token punctuation\">}</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"token keyword\">const</span> inputs <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\"><span class=\"token keyword\">const</span> target <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\"><span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> <span class=\"token function\">binarySearch</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> inputs<span class=\"token punctuation\">.</span><span class=\"token property-access\">length</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> inputs<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\"><span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"token comment\">// example)</span>\n</span><span class=\"code-line\"><span class=\"token comment\">// inputs: [0, 0, 1, 2, 3, 3, 4, 5, 6, 6]</span>\n</span><span class=\"code-line\"><span class=\"token comment\">// target: 4</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"token comment\">// step1)</span>\n</span><span class=\"code-line\"><span class=\"token comment\">// inputs: [0, 0, 1, 2, 3, 3, 4, 5, 6, 6]</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"token comment\">// - mid: 5</span>\n</span><span class=\"code-line\"><span class=\"token comment\">// - inputs[5] = 3 -&gt; target보다 작다.</span>\n</span><span class=\"code-line\"><span class=\"token comment\">// - 탐색 범위를 [4, 5, 6, 6]으로 좁힌다.</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"token comment\">// step2)</span>\n</span><span class=\"code-line\"><span class=\"token comment\">// inputs:  [4, 5, 6, 6]</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"token comment\">// - mid: 1</span>\n</span><span class=\"code-line\"><span class=\"token comment\">// - inputs[1] = 5 -&gt; target보다 크다.</span>\n</span><span class=\"code-line\"><span class=\"token comment\">// - 탐색 범위를 [4]로 좁힌다.</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"token comment\">// step3)</span>\n</span><span class=\"code-line\"><span class=\"token comment\">// inputs: [4]</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"token comment\">// - mid: 0</span>\n</span><span class=\"code-line\"><span class=\"token comment\">// - inputs[0] = 4 -&gt; target과 일치한다.</span>\n</span><span class=\"code-line\"><span class=\"token comment\">// - 찾았다!</span>\n</span></code></pre></section><section aria-labelledby=\"반복-이분탐색\"><h3 class=\"mt-7 mb-2 text-heading3 font-semibold leading-normal\" id=\"반복-이분탐색\"><a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#반복-이분탐색\"><span class=\"icon icon-link\"></span></a>반복 이분탐색</h3><p class=\"font-light leading-normal mt-4 mb-2\">아직까진 <a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" href=\"https://en.wikipedia.org/wiki/Church%E2%80%93Turing_thesis\">Church-Turing thesis</a>에 따라 재귀는 반복문으로 치환이 가능하다고 알려져있다. (나중에 학습하게 된다면 관련한 내용도 적어보겠다.)</p><p class=\"font-light leading-normal mt-4 mb-2\">재귀가 아닌 반복문을 쓰면 다음의 이점이 있다.</p><ul class=\"list-disc my-4\">\n<li class=\"text-paragraph font-light leading-normal py-1 ml-6\">메모리를 더 적게 사용한다. (parameter에 해당하는 메모리를 사용하지 않는다.)</li>\n<li class=\"text-paragraph font-light leading-normal py-1 ml-6\">콜스택을 쌓지 않기 때문에 더 빠르다. (물론 big-o가 변할정도는 아니다.)</li>\n</ul><p class=\"font-light leading-normal mt-4 mb-2\">수도코드로 나타내보자.</p><pre class=\"rounded-md [&amp;_code]:py-0 [&amp;_code]:px-0 line-numbers language-js\"><code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2 language-js\"><span class=\"code-line\"><span class=\"token function\">binarySearch2</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">start<span class=\"token punctuation\">,</span>end</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">  <span class=\"token keyword control-flow\">while</span><span class=\"token punctuation\">(</span>start <span class=\"token operator\">&lt;=</span> end<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">    mid <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>start <span class=\"token operator\">+</span> end<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">    <span class=\"token keyword control-flow\">if</span><span class=\"token punctuation\">(</span>inputs<span class=\"token punctuation\">[</span>mid<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> target<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">      <span class=\"token keyword control-flow\">return</span> mid<span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">    <span class=\"token punctuation\">}</span>\n</span><span class=\"code-line\">    <span class=\"token keyword control-flow\">else</span> <span class=\"token keyword control-flow\">if</span><span class=\"token punctuation\">(</span>inputs<span class=\"token punctuation\">[</span>mid<span class=\"token punctuation\">]</span> <span class=\"token operator\">&gt;</span> target<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">      end <span class=\"token operator\">=</span> mid<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">    <span class=\"token punctuation\">}</span>\n</span><span class=\"code-line\">    <span class=\"token keyword control-flow\">else</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">      start <span class=\"token operator\">=</span> mid<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">    <span class=\"token punctuation\">}</span>\n</span><span class=\"code-line\">  <span class=\"token punctuation\">}</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">  <span class=\"token keyword control-flow\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\"><span class=\"token punctuation\">}</span>\n</span></code></pre></section><section aria-labelledby=\"반복-이분탐색-javascript-구현\"><h3 class=\"mt-7 mb-2 text-heading3 font-semibold leading-normal\" id=\"반복-이분탐색-javascript-구현\"><a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#반복-이분탐색-javascript-구현\"><span class=\"icon icon-link\"></span></a>반복 이분탐색 javascript 구현</h3><pre class=\"rounded-md [&amp;_code]:py-0 [&amp;_code]:px-0 line-numbers language-js\"><code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2 language-js\"><span class=\"code-line\"><span class=\"token keyword\">function</span> <span class=\"token function\">binarySearch2</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">inputs<span class=\"token punctuation\">,</span> start<span class=\"token punctuation\">,</span> end<span class=\"token punctuation\">,</span> target</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">  <span class=\"token keyword control-flow\">while</span> <span class=\"token punctuation\">(</span>start <span class=\"token operator\">&lt;=</span> end<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">    <span class=\"token keyword\">const</span> mid <span class=\"token operator\">=</span> <span class=\"token known-class-name class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">floor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>start <span class=\"token operator\">+</span> end<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">    <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span>inputs<span class=\"token punctuation\">[</span>mid<span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> target<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">      <span class=\"token keyword control-flow\">return</span> mid<span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">    <span class=\"token punctuation\">}</span> <span class=\"token keyword control-flow\">else</span> <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span>inputs<span class=\"token punctuation\">[</span>mid<span class=\"token punctuation\">]</span> <span class=\"token operator\">&gt;</span> target<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">      end <span class=\"token operator\">=</span> mid <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">    <span class=\"token punctuation\">}</span> <span class=\"token keyword control-flow\">else</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">      start <span class=\"token operator\">=</span> mid <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">    <span class=\"token punctuation\">}</span>\n</span><span class=\"code-line\">  <span class=\"token punctuation\">}</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">  <span class=\"token keyword control-flow\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\"><span class=\"token punctuation\">}</span>\n</span></code></pre></section><section aria-labelledby=\"추가적인-생각거리\"><h2 class=\"mt-8 mb-3 text-heading2 font-semibold leading-normal\" id=\"추가적인-생각거리\"><a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#추가적인-생각거리\"><span class=\"icon icon-link\"></span></a>추가적인 생각거리</h2><p class=\"font-light leading-normal mt-4 mb-2\">이분 탐색이 가능하다면 삼분,사분 탐색도 가능할까?</p><p class=\"font-light leading-normal mt-4 mb-2\">그렇다면 그렇게 했을 때 어떤 장점이 있을까?</p></section></section><button class=\"__trds __trds button trds-inline-flex trds-justify-center trds-place-items-center trds-whitespace-nowrap trds-rounded-lg trds-text-md trds-font-medium trds-gap-2 trds-transition-colors trds-cursor-pointer disabled:trds-cursor-not-allowed disabled:trds-opacity-50 trds-bg-neutral trds-text-fg-neutral disabled:trds-bg-neutral enabled:hover:trds-bg-neutral-hover enabled:active:trds-bg-neutral-pressed __trds trds-h-11 trds-w-11 trds-px-0 trds-py-0\" type=\"button\" aria-disabled=\"false\" aria-busy=\"false\" aria-label=\"Share this article\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-share\"><path d=\"M4 12v8a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-8\"></path><polyline points=\"16 6 12 2 8 6\"></polyline><line x1=\"12\" x2=\"12\" y1=\"2\" y2=\"15\"></line></svg></button><div data-scope=\"toast\" data-part=\"group\" dir=\"ltr\" tabindex=\"-1\" aria-label=\"bottom Notifications alt+T\" id=\"toast-group:bottom\" data-placement=\"bottom\" data-side=\"bottom\" data-align=\"center\" aria-live=\"polite\" role=\"region\" style=\"position:fixed;pointer-events:none;display:flex;flex-direction:column;--gap:16px;--first-height:0px;z-index:2147483647;align-items:center;bottom:max(env(safe-area-inset-bottom, 0px), 1rem);inset-inline-end:calc(env(safe-area-inset-right, 0px) + 1rem);inset-inline-start:calc(env(safe-area-inset-left, 0px) + 1rem)\"></div></div><section id=\"author\"><div class=\"flex flex-row gap-4 items-center\"><div class=\"__trds trds-animate-shimmer trds-bg-clip-padding-box trds-text-transparent trds-cursor-default trds-pointer-events-none trds-select-none before::trds-invisible after::trds-invisible [&amp;_*]:trds-invisible trds-rounded-lg rounded-full\"><div data-scope=\"avatar\" data-part=\"root\" dir=\"ltr\" id=\"avatar::Rn7obtsra:\" class=\"trds-rounded-full trds-overflow-hidden w-16 h-16\"><img data-scope=\"avatar\" data-part=\"image\" hidden=\"\" dir=\"ltr\" id=\"avatar::Rn7obtsra::image\" data-state=\"hidden\" class=\"trds-bg-muted\"/><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"64\" height=\"64\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-user trds-bg-muted trds-w-full trds-h-full\" data-scope=\"avatar\" data-part=\"fallback\" dir=\"ltr\" id=\"avatar::Rn7obtsra::fallback\" data-state=\"visible\"><path d=\"M19 21v-2a4 4 0 0 0-4-4H9a4 4 0 0 0-4 4v2\"></path><circle cx=\"12\" cy=\"7\" r=\"4\"></circle></svg></div></div><div class=\"text-pretty flex flex-col gap-2\"><div class=\"__trds trds-animate-shimmer trds-bg-clip-padding-box trds-text-transparent trds-cursor-default trds-pointer-events-none trds-select-none before::trds-invisible after::trds-invisible [&amp;_*]:trds-invisible trds-rounded-lg h-fit w-fit\"><strong class=\"inline-block h-6 min-w-36\"> </strong></div><div class=\"__trds trds-animate-shimmer trds-bg-clip-padding-box trds-text-transparent trds-cursor-default trds-pointer-events-none trds-select-none before::trds-invisible after::trds-invisible [&amp;_*]:trds-invisible trds-rounded-lg h-fit w-fit\"><p class=\"whitespace-pre-wrap h-6 min-w-64\"></p></div></div></div></section><section><div class=\"giscus w-full min-w-screen-md\"></div></section></article></main><footer class=\"self-center w-full max-w-screen-md px-4 h-96\"><p>© 2024-<!-- -->2024<!-- --> <!-- -->dev2820<!-- -->. All rights reserved.</p></footer><script src=\"/next-blog/_next/static/chunks/webpack-8f27d743501d147d.js\" async=\"\"></script><script>(self.__next_f=self.__next_f||[]).push([0]);self.__next_f.push([2,null])</script><script>self.__next_f.push([1,\"1:HL[\\\"/next-blog/_next/static/media/3e7b7e3fd4560936-s.p.woff2\\\",\\\"font\\\",{\\\"crossOrigin\\\":\\\"\\\",\\\"type\\\":\\\"font/woff2\\\"}]\\n2:HL[\\\"/next-blog/_next/static/media/ff840cfebfb63b0c-s.p.woff2\\\",\\\"font\\\",{\\\"crossOrigin\\\":\\\"\\\",\\\"type\\\":\\\"font/woff2\\\"}]\\n3:HL[\\\"/next-blog/_next/static/css/16077bc16defb9b9.css\\\",\\\"style\\\"]\\n4:HL[\\\"/next-blog/_next/static/css/203da25389b4eeab.css\\\",\\\"style\\\"]\\n\"])</script><script>self.__next_f.push([1,\"5:I[5726,[],\\\"\\\"]\\n8:I[1699,[],\\\"\\\"]\\na:I[2579,[],\\\"\\\"]\\nb:I[3805,[\\\"805\\\",\\\"static/chunks/805-a8af350d35fb9160.js\\\",\\\"418\\\",\\\"static/chunks/app/posts/%5Bslug%5D/layout-1cf1294e1a2539f4.js\\\"],\\\"\\\"]\\nc:I[9618,[\\\"618\\\",\\\"static/chunks/618-f2bb34773a0d24b2.js\\\",\\\"991\\\",\\\"static/chunks/app/posts/page-e8c6275c8ebfad50.js\\\"],\\\"\\\"]\\nd:I[6210,[\\\"618\\\",\\\"static/chunks/618-f2bb34773a0d24b2.js\\\",\\\"372\\\",\\\"static/chunks/372-b649e69f56e8eb19.js\\\",\\\"185\\\",\\\"static/chunks/app/layout-c7fa40d911107206.js\\\"],\\\"BrandLogo\\\"]\\ne:I[9205,[\\\"618\\\",\\\"static/chunks/618-f2bb34773a0d24b2.js\\\",\\\"372\\\",\\\"static/chunks/372-b649e69f56e8eb19.js\\\",\\\"185\\\",\\\"static/chunks/app/layout-c7fa40d911107206.js\\\"],\\\"GlobalNavigationBar\\\"]\\n10:I[3141,[],\\\"\\\"]\\n9:[\\\"slug\\\",\\\"algorithm-1-1-binary-search\\\",\\\"d\\\"]\\n11:[]\\n\"])</script><script>self.__next_f.push([1,\"0:[[[\\\"$\\\",\\\"link\\\",\\\"0\\\",{\\\"rel\\\":\\\"stylesheet\\\",\\\"href\\\":\\\"/next-blog/_next/static/css/16077bc16defb9b9.css\\\",\\\"precedence\\\":\\\"next\\\",\\\"crossOrigin\\\":\\\"$undefined\\\"}]],[\\\"$\\\",\\\"$L5\\\",null,{\\\"buildId\\\":\\\"FkDD4ed24GsUGsJlrpxW5\\\",\\\"assetPrefix\\\":\\\"/next-blog\\\",\\\"initialCanonicalUrl\\\":\\\"/posts/algorithm-1-1-binary-search\\\",\\\"initialTree\\\":[\\\"\\\",{\\\"children\\\":[\\\"posts\\\",{\\\"children\\\":[[\\\"slug\\\",\\\"algorithm-1-1-binary-search\\\",\\\"d\\\"],{\\\"children\\\":[\\\"__PAGE__?{\\\\\\\"slug\\\\\\\":\\\\\\\"algorithm-1-1-binary-search\\\\\\\"}\\\",{}]}]}]},\\\"$undefined\\\",\\\"$undefined\\\",true],\\\"initialSeedData\\\":[\\\"\\\",{\\\"children\\\":[\\\"posts\\\",{\\\"children\\\":[[\\\"slug\\\",\\\"algorithm-1-1-binary-search\\\",\\\"d\\\"],{\\\"children\\\":[\\\"__PAGE__\\\",{},[[\\\"$L6\\\",\\\"$L7\\\"],null],null]},[[[\\\"$\\\",\\\"$L8\\\",null,{\\\"parallelRouterKey\\\":\\\"children\\\",\\\"segmentPath\\\":[\\\"children\\\",\\\"posts\\\",\\\"children\\\",\\\"$9\\\",\\\"children\\\"],\\\"error\\\":\\\"$undefined\\\",\\\"errorStyles\\\":\\\"$undefined\\\",\\\"errorScripts\\\":\\\"$undefined\\\",\\\"template\\\":[\\\"$\\\",\\\"$La\\\",null,{}],\\\"templateStyles\\\":\\\"$undefined\\\",\\\"templateScripts\\\":\\\"$undefined\\\",\\\"notFound\\\":\\\"$undefined\\\",\\\"notFoundStyles\\\":\\\"$undefined\\\",\\\"styles\\\":null}],[\\\"$\\\",\\\"$Lb\\\",null,{\\\"src\\\":\\\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/prism.min.js\\\"}],[\\\"$\\\",\\\"$Lb\\\",null,{\\\"src\\\":\\\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-javascript.min.js\\\"}],[\\\"$\\\",\\\"$Lb\\\",null,{\\\"src\\\":\\\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-typescript.min.js\\\"}],[\\\"$\\\",\\\"$Lb\\\",null,{\\\"src\\\":\\\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-jsx.min.js\\\"}],[\\\"$\\\",\\\"$Lb\\\",null,{\\\"src\\\":\\\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-tsx.min.js\\\"}],[\\\"$\\\",\\\"$Lb\\\",null,{\\\"src\\\":\\\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-c.min.js\\\"}],[\\\"$\\\",\\\"$Lb\\\",null,{\\\"src\\\":\\\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/plugins/line-numbers/prism-line-numbers.min.js\\\"}]],null],null]},[\\\"$\\\",\\\"$L8\\\",null,{\\\"parallelRouterKey\\\":\\\"children\\\",\\\"segmentPath\\\":[\\\"children\\\",\\\"posts\\\",\\\"children\\\"],\\\"error\\\":\\\"$undefined\\\",\\\"errorStyles\\\":\\\"$undefined\\\",\\\"errorScripts\\\":\\\"$undefined\\\",\\\"template\\\":[\\\"$\\\",\\\"$La\\\",null,{}],\\\"templateStyles\\\":\\\"$undefined\\\",\\\"templateScripts\\\":\\\"$undefined\\\",\\\"notFound\\\":\\\"$undefined\\\",\\\"notFoundStyles\\\":\\\"$undefined\\\",\\\"styles\\\":[[\\\"$\\\",\\\"link\\\",\\\"0\\\",{\\\"rel\\\":\\\"stylesheet\\\",\\\"href\\\":\\\"/next-blog/_next/static/css/203da25389b4eeab.css\\\",\\\"precedence\\\":\\\"next\\\",\\\"crossOrigin\\\":\\\"$undefined\\\"}]]}],null]},[[\\\"$\\\",\\\"html\\\",null,{\\\"lang\\\":\\\"kr\\\",\\\"className\\\":\\\"__variable_fa65fd __variable_7691e4 scroll-smooth\\\",\\\"children\\\":[\\\"$\\\",\\\"body\\\",null,{\\\"className\\\":\\\"__className_fa65fd flex flex-col text-gray-800\\\",\\\"children\\\":[[\\\"$\\\",\\\"link\\\",null,{\\\"href\\\":\\\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/plugins/line-numbers/prism-line-numbers.min.css\\\",\\\"rel\\\":\\\"stylesheet\\\"}],[\\\"$\\\",\\\"header\\\",null,{\\\"className\\\":\\\"flex flex-row justify-center py-2 items-center self-center w-full max-w-screen-md px-4\\\",\\\"children\\\":[[\\\"$\\\",\\\"$Lc\\\",null,{\\\"href\\\":\\\"/\\\",\\\"children\\\":[\\\"$\\\",\\\"$Ld\\\",null,{\\\"height\\\":48}]}],[\\\"$\\\",\\\"div\\\",null,{\\\"className\\\":\\\"flex-1\\\"}],[\\\"$\\\",\\\"$Le\\\",null,{}]]}],[\\\"$\\\",\\\"main\\\",null,{\\\"className\\\":\\\"self-center w-full max-w-screen-md p-4 text-gray-800\\\",\\\"children\\\":[\\\"$\\\",\\\"$L8\\\",null,{\\\"parallelRouterKey\\\":\\\"children\\\",\\\"segmentPath\\\":[\\\"children\\\"],\\\"error\\\":\\\"$undefined\\\",\\\"errorStyles\\\":\\\"$undefined\\\",\\\"errorScripts\\\":\\\"$undefined\\\",\\\"template\\\":[\\\"$\\\",\\\"$La\\\",null,{}],\\\"templateStyles\\\":\\\"$undefined\\\",\\\"templateScripts\\\":\\\"$undefined\\\",\\\"notFound\\\":[\\\"$\\\",\\\"div\\\",null,{\\\"children\\\":[[\\\"$\\\",\\\"h2\\\",null,{\\\"children\\\":\\\"Not Found\\\"}],[\\\"$\\\",\\\"p\\\",null,{\\\"children\\\":\\\"Could not find requested resource\\\"}],[\\\"$\\\",\\\"$Lc\\\",null,{\\\"href\\\":\\\"/\\\",\\\"children\\\":\\\"Return Home\\\"}]]}],\\\"notFoundStyles\\\":[],\\\"styles\\\":null}]}],[\\\"$\\\",\\\"footer\\\",null,{\\\"className\\\":\\\"self-center w-full max-w-screen-md px-4 h-96\\\",\\\"children\\\":[\\\"$\\\",\\\"p\\\",null,{\\\"children\\\":[\\\"© 2024-\\\",2024,\\\" \\\",\\\"dev2820\\\",\\\". All rights reserved.\\\"]}]}]]}]}],null],null],\\\"couldBeIntercepted\\\":false,\\\"initialHead\\\":[null,\\\"$Lf\\\"],\\\"globalErrorComponent\\\":\\\"$10\\\",\\\"missingSlots\\\":\\\"$W11\\\"}]]\\n\"])</script><script>self.__next_f.push([1,\"12:I[2870,[\\\"587\\\",\\\"static/chunks/952ad60e-7cdac7b6bf36214c.js\\\",\\\"618\\\",\\\"static/chunks/618-f2bb34773a0d24b2.js\\\",\\\"372\\\",\\\"static/chunks/372-b649e69f56e8eb19.js\\\",\\\"805\\\",\\\"static/chunks/805-a8af350d35fb9160.js\\\",\\\"333\\\",\\\"static/chunks/app/posts/%5Bslug%5D/page-e951164d6ad6c144.js\\\"],\\\"TableOfContents\\\"]\\n13:I[6894,[\\\"587\\\",\\\"static/chunks/952ad60e-7cdac7b6bf36214c.js\\\",\\\"618\\\",\\\"static/chunks/618-f2bb34773a0d24b2.js\\\",\\\"372\\\",\\\"static/chunks/372-b649e69f56e8eb19.js\\\",\\\"805\\\",\\\"static/chunks/805-a8af350d35fb9160.js\\\",\\\"333\\\",\\\"static/chunks/app/posts/%5Bslug%5D/page-e951164d6ad6c144.js\\\"],\\\"Anchor\\\"]\\n14:I[4547,[\\\"587\\\",\\\"static/chunks/952ad60e-7cdac7b6bf36214c.js\\\",\\\"618\\\",\\\"static/chunks/618-f2bb34773a0d24b2.js\\\",\\\"372\\\",\\\"static/chunks/372-b649e69f56e8eb19.js\\\",\\\"805\\\",\\\"static/chunks/805-a8af350d35fb9160.js\\\",\\\"333\\\",\\\"static/chunks/app/posts/%5Bslug%5D/page-e951164d6ad6c144.js\\\"],\\\"ShareButton\\\"]\\n15:I[6398,[\\\"587\\\",\\\"static/chunks/952ad60e-7cdac7b6bf36214c.js\\\",\\\"618\\\",\\\"static/chunks/618-f2bb34773a0d24b2.js\\\",\\\"372\\\",\\\"static/chunks/372-b649e69f56e8eb19.js\\\",\\\"805\\\",\\\"static/chunks/805-a8af350d35fb9160.js\\\",\\\"333\\\",\\\"static/chunks/app/posts/%5Bslug%5D/page-e951164d6ad6c144.js\\\"],\\\"AuthorInfo\\\"]\\n\"])</script><script>self.__next_f.push([1,\"7:[\\\"$\\\",\\\"article\\\",null,{\\\"className\\\":\\\"relative\\\",\\\"children\\\":[[\\\"$\\\",\\\"header\\\",null,{\\\"id\\\":\\\"post-meta\\\",\\\"children\\\":[\\\"$undefined\\\",[\\\"$\\\",\\\"h1\\\",null,{\\\"className\\\":\\\"mt-10 mb-4 text-heading1 font-bold leading-normal\\\",\\\"id\\\":\\\"algorithm-1-1-binary-search\\\",\\\"children\\\":\\\"algorithm-1-1-binary-search\\\"}],[\\\"$\\\",\\\"time\\\",null,{\\\"dateTime\\\":\\\"2024-03-31\\\",\\\"aria-label\\\":\\\"Published on 2024-03-31\\\",\\\"children\\\":\\\"2024-03-31\\\"}],\\\" \\\",\\\"|\\\",\\\" \\\",[\\\"$\\\",\\\"time\\\",null,{\\\"dateTime\\\":\\\"PT1M\\\",\\\"aria-label\\\":\\\"Estimated reading time\\\",\\\"children\\\":[1,\\\" mins\\\"]}]]}],[\\\"$\\\",\\\"div\\\",null,{\\\"id\\\":\\\"content\\\",\\\"className\\\":\\\"relative\\\",\\\"children\\\":[[\\\"$\\\",\\\"div\\\",null,{\\\"id\\\":\\\"table-of-header\\\",\\\"className\\\":\\\"absolute -right-12 translate-x-full h-full w-52 desktop:block hidden\\\",\\\"children\\\":[\\\"$\\\",\\\"$L12\\\",null,{\\\"toc\\\":[{\\\"level\\\":3,\\\"content\\\":\\\"재귀 이분 탐색의 복잡도\\\",\\\"slug\\\":\\\"#재귀-이분-탐색의-복잡도\\\"},{\\\"level\\\":3,\\\"content\\\":\\\"재귀 이분탐색 javascript 구현\\\",\\\"slug\\\":\\\"#재귀-이분탐색-javascript-구현\\\"},{\\\"level\\\":3,\\\"content\\\":\\\"반복 이분탐색\\\",\\\"slug\\\":\\\"#반복-이분탐색\\\"},{\\\"level\\\":3,\\\"content\\\":\\\"반복 이분탐색 javascript 구현\\\",\\\"slug\\\":\\\"#반복-이분탐색-javascript-구현\\\"},{\\\"level\\\":2,\\\"content\\\":\\\"추가적인 생각거리\\\",\\\"slug\\\":\\\"#추가적인-생각거리\\\"}],\\\"className\\\":\\\"sticky top-24\\\"}]}],[\\\"$\\\",\\\"section\\\",null,{\\\"aria-labelledby\\\":\\\"11-이분-탐색-binary-search\\\",\\\"children\\\":[[\\\"$\\\",\\\"h1\\\",null,{\\\"className\\\":\\\"mt-10 mb-4 text-heading1 font-bold leading-normal\\\",\\\"id\\\":\\\"11-이분-탐색-binary-search\\\",\\\"children\\\":[[\\\"$\\\",\\\"$L13\\\",null,{\\\"aria-hidden\\\":\\\"true\\\",\\\"tabIndex\\\":\\\"-1\\\",\\\"href\\\":\\\"#11-이분-탐색-binary-search\\\",\\\"children\\\":[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"icon icon-link\\\"}]}],\\\"1.1 이분 탐색 (Binary Search)\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"이분 탐색 알고리즘은 정렬된 배열 내에서 특정한 원소를 찾는데 특화된 알고리즘이다. 말 그대로 배열을 둘로 분할(divide)한뒤 탐색을 하는데, 이렇게 되면 탐색 영역이 절반씩 줄어든다.\\\"}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":[\\\"이분 탐색 전략이 성립하려면 \\\",[\\\"$\\\",\\\"strong\\\",null,{\\\"className\\\":\\\"font-medium\\\",\\\"children\\\":\\\"정렬되어 있음\\\"}],\\\"이 전제되어야한다. 정렬되어있지 않다면 분할한 영역중 한 영역에 찾으려는 값이 없다는 것을 보장할 수 없기 때문이다.\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"먼저 재귀 방식으로 이분 탐색 알고리즘을 설계해보자.\\\"}],[\\\"$\\\",\\\"pre\\\",null,{\\\"className\\\":\\\"rounded-md [\\u0026_code]:py-0 [\\u0026_code]:px-0 line-numbers language-js\\\",\\\"children\\\":[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2 language-js\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token function\\\",\\\"children\\\":\\\"binarySearch\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token parameter\\\",\\\"children\\\":[\\\"start\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],\\\"end\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"{\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  mid \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"start \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"+\\\"}],\\\" end\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"/\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"2\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword control-flow\\\",\\\"children\\\":\\\"if\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"start \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"\\u003e\\\"}],\\\" end\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"{\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"    \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token comment\\\",\\\"children\\\":\\\"// 탐색 범위가 0보다 작기 때문에 target을 찾을 수 없다.\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"    \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword control-flow\\\",\\\"children\\\":\\\"return\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"-\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"1\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"}\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword control-flow\\\",\\\"children\\\":\\\"if\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"inputs\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"[\\\"}],\\\"end\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"]\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"\\u003c\\\"}],\\\" target\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"{\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"    \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token comment\\\",\\\"children\\\":\\\"// 찾고자 하는 값이 범위의 최대값보다 크다면 주어진 범위안에 target이 존재하지 않는다는 뜻이다.\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"    \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword control-flow\\\",\\\"children\\\":\\\"return\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"-\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"1\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"}\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword control-flow\\\",\\\"children\\\":\\\"if\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"inputs\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"[\\\"}],\\\"start\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"]\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"\\u003e\\\"}],\\\" target\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"{\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"    \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token comment\\\",\\\"children\\\":\\\"// 마찬가지로 범위의 최소값보다 target이 작다면 주어진 범위에 target은 존재하지 않는다.\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"    \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword control-flow\\\",\\\"children\\\":\\\"return\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"-\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"1\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"}\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword control-flow\\\",\\\"children\\\":\\\"if\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"inputs\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"[\\\"}],\\\"mid\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"]\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"==\\\"}],\\\" target\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"{\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"    \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token comment\\\",\\\"children\\\":\\\"// 배열 중앙의 원소값이 target과 일치하는지 확인한다.\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"    \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword control-flow\\\",\\\"children\\\":\\\"return\\\"}],\\\" mid\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"}\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token comment\\\",\\\"children\\\":\\\"// 중앙값의 왼쪽 배열과 오른쪽 배열 중에서 원소를 찾는 행위를 재귀적으로 반복한다.\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword control-flow\\\",\\\"children\\\":\\\"return\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token function\\\",\\\"children\\\":\\\"max\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"    \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token function\\\",\\\"children\\\":\\\"binarySearch\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"start\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],\\\" mid\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"-\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"1\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"    \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token function\\\",\\\"children\\\":\\\"binarySearch\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"mid\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"+\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"1\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],\\\"end\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"}\\\"}],\\\"\\\\n\\\"]}]]}]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"우리가 문제를 어떻게 작게 쪼개었는지 살펴보자.\\\"}],[\\\"$\\\",\\\"blockquote\\\",null,{\\\"className\\\":\\\"my-4 border-l-4 border-primary p-6 bg-gray-100 text-gray-700 [\\u0026_*:first-child]:mt-0 [\\u0026_*:last-child]:mb-0\\\",\\\"children\\\":[\\\"\\\\n\\\",[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"문제: 길이 n인 정렬된 배열 A가 주어질 때 배열 안의 x의 위치를 구하라\\\"}],\\\"\\\\n\\\",[\\\"$\\\",\\\"ol\\\",null,{\\\"className\\\":\\\"list-decimal my-4\\\",\\\"children\\\":[\\\"\\\\n\\\",[\\\"$\\\",\\\"li\\\",null,{\\\"className\\\":\\\"text-paragraph font-light leading-normal py-1 ml-6\\\",\\\"children\\\":[\\\"\\\\n\\\",[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"종료조건을 정의한다.\\\"}],\\\"\\\\n\\\"]}],\\\"\\\\n\\\"]}],\\\"\\\\n\\\",[\\\"$\\\",\\\"ul\\\",null,{\\\"className\\\":\\\"list-disc my-4\\\",\\\"children\\\":[\\\"\\\\n\\\",[\\\"$\\\",\\\"li\\\",null,{\\\"className\\\":\\\"text-paragraph font-light leading-normal py-1 ml-6\\\",\\\"children\\\":[\\\"\\\\n\\\",[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"배열에서 x를 찾을 수 없다면 -1을 반환한다.\\\"}],\\\"\\\\n\\\"]}],\\\"\\\\n\\\",[\\\"$\\\",\\\"li\\\",null,{\\\"className\\\":\\\"text-paragraph font-light leading-normal py-1 ml-6\\\",\\\"children\\\":[\\\"\\\\n\\\",[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"배열의 중앙 값이 x라면 그 인덱스를 반환한다.\\\"}],\\\"\\\\n\\\"]}],\\\"\\\\n\\\"]}],\\\"\\\\n\\\",[\\\"$\\\",\\\"ol\\\",null,{\\\"className\\\":\\\"list-decimal my-4\\\",\\\"start\\\":\\\"2\\\",\\\"children\\\":[\\\"\\\\n\\\",[\\\"$\\\",\\\"li\\\",null,{\\\"className\\\":\\\"text-paragraph font-light leading-normal py-1 ml-6\\\",\\\"children\\\":[\\\"\\\\n\\\",[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"분할 방법을 선택한다.\\\"}],\\\"\\\\n\\\"]}],\\\"\\\\n\\\"]}],\\\"\\\\n\\\",[\\\"$\\\",\\\"ul\\\",null,{\\\"className\\\":\\\"list-disc my-4\\\",\\\"children\\\":[\\\"\\\\n\\\",[\\\"$\\\",\\\"li\\\",null,{\\\"className\\\":\\\"text-paragraph font-light leading-normal py-1 ml-6\\\",\\\"children\\\":\\\"배열의 중앙을 기준으로 배열을 2개로 쪼갠다.\\\"}],\\\"\\\\n\\\",[\\\"$\\\",\\\"li\\\",null,{\\\"className\\\":\\\"text-paragraph font-light leading-normal py-1 ml-6\\\",\\\"children\\\":\\\"쪼갠 배열에 대해 종료조건을 대입, 이 과정을 반복한다.\\\"}],\\\"\\\\n\\\"]}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"앞에선 큰 문제를 작은 문제로 쪼개고 각개격파한다는 것을 강조하기 위해 구태여 쪼갠 두 범위를 다시 탐색했다. 정렬된 배열의 특성을 이용해 알고리즘을 좀 더 효율적으로 바꿀 수 있다.\\\"}],[\\\"$\\\",\\\"pre\\\",null,{\\\"className\\\":\\\"rounded-md [\\u0026_code]:py-0 [\\u0026_code]:px-0 line-numbers language-js\\\",\\\"children\\\":[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2 language-js\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token function\\\",\\\"children\\\":\\\"binarySearch\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token parameter\\\",\\\"children\\\":[\\\"start\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],\\\"end\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"{\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  mid \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"start \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"+\\\"}],\\\" end\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"/\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"2\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword control-flow\\\",\\\"children\\\":\\\"if\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"start \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"\\u003e\\\"}],\\\" end\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"{\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"    \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token comment\\\",\\\"children\\\":\\\"// 범위가 0이라면 원소를 찾을 수 없다.\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"    \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword control-flow\\\",\\\"children\\\":\\\"return\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"-\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"1\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"}\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword control-flow\\\",\\\"children\\\":\\\"if\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"inputs\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"[\\\"}],\\\"mid\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"]\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"==\\\"}],\\\" target\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"{\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"    \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token comment\\\",\\\"children\\\":\\\"// 배열 중앙의 원소값이 target과 일치하는지 확인한다.\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"    \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword control-flow\\\",\\\"children\\\":\\\"return\\\"}],\\\" mid\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"}\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword control-flow\\\",\\\"children\\\":\\\"if\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"inputs\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"[\\\"}],\\\"mid\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"]\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"\\u003e\\\"}],\\\" target\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"{\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"    \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token comment\\\",\\\"children\\\":\\\"// inputs[mid]가 target보다 크다면 inputs[mid+1...end]도 target보다 클 것이기에 확인하지 않아도 된다.\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"    \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword control-flow\\\",\\\"children\\\":\\\"return\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token function\\\",\\\"children\\\":\\\"binarySearch\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"start\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],\\\"mid\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"-\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"1\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"}\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword control-flow\\\",\\\"children\\\":\\\"else\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"{\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"    \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token comment\\\",\\\"children\\\":\\\"// inputs[mid]가 target보다 작다면 inputs[start...mid-1]도 target보다 작을 것이기에 확인하지 않아도 된다.\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"    \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword control-flow\\\",\\\"children\\\":\\\"return\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token function\\\",\\\"children\\\":\\\"binarySearch\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"mid\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"+\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"1\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],\\\"end\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"}\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"}\\\"}],\\\"\\\\n\\\"]}]]}]}],[\\\"$\\\",\\\"section\\\",null,{\\\"aria-labelledby\\\":\\\"재귀-이분-탐색의-복잡도\\\",\\\"children\\\":[[\\\"$\\\",\\\"h3\\\",null,{\\\"className\\\":\\\"mt-7 mb-2 text-heading3 font-semibold leading-normal\\\",\\\"id\\\":\\\"재귀-이분-탐색의-복잡도\\\",\\\"children\\\":[[\\\"$\\\",\\\"$L13\\\",null,{\\\"aria-hidden\\\":\\\"true\\\",\\\"tabIndex\\\":\\\"-1\\\",\\\"href\\\":\\\"#재귀-이분-탐색의-복잡도\\\",\\\"children\\\":[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"icon icon-link\\\"}]}],\\\"재귀 이분 탐색의 복잡도\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":[\\\"이분 탐색을 통해선 탐색 범위가 절반씩 줄어든다.\\\\n최선의 상황은 짚은 중앙 값이 바로 찾던 값인 경우이다. 1번의 비교가 필요하기 때문에 최선의 복잡도는 \\\",[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\\\",\\\"children\\\":\\\"1\\\"}],\\\"이다.\\\\n최악의 상황은 배열 안에서 타겟을 찾지 못하는 상황이다. 매번 값의 비교(같은지,큰지,작은지)와 절반 만큼의 재귀가 일어난다. 값의 크코작고같음 비교를 단위연산으로 보자. 다음의 점화식을 새울 수 있다.\\\"]}],[\\\"$\\\",\\\"blockquote\\\",null,{\\\"className\\\":\\\"my-4 border-l-4 border-primary p-6 bg-gray-100 text-gray-700 [\\u0026_*:first-child]:mt-0 [\\u0026_*:last-child]:mb-0\\\",\\\"children\\\":[\\\"\\\\n\\\",[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"W(n) = W(n/2) + 1\\\"}],\\\"\\\\n\\\",[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"W(n) = n 길이 배열에 대한 이분연산에서 일어나는 단위연산의 수\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":[\\\"이 경우 \\\",[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\\\",\\\"children\\\":\\\"logn + 1\\\"}],\\\"의 연산이 필요하다.\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":[\\\"즉, 복잡도는 \\\",[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\\\",\\\"children\\\":\\\"O(logn)\\\"}],\\\"이 된다.\\\"]}]]}],[\\\"$\\\",\\\"section\\\",null,{\\\"aria-labelledby\\\":\\\"재귀-이분탐색-javascript-구현\\\",\\\"children\\\":[[\\\"$\\\",\\\"h3\\\",null,{\\\"className\\\":\\\"mt-7 mb-2 text-heading3 font-semibold leading-normal\\\",\\\"id\\\":\\\"재귀-이분탐색-javascript-구현\\\",\\\"children\\\":[[\\\"$\\\",\\\"$L13\\\",null,{\\\"aria-hidden\\\":\\\"true\\\",\\\"tabIndex\\\":\\\"-1\\\",\\\"href\\\":\\\"#재귀-이분탐색-javascript-구현\\\",\\\"children\\\":[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"icon icon-link\\\"}]}],\\\"재귀 이분탐색 javascript 구현\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"js로 구현하면 다음과 같다.\\\"}],[\\\"$\\\",\\\"pre\\\",null,{\\\"className\\\":\\\"rounded-md [\\u0026_code]:py-0 [\\u0026_code]:px-0 line-numbers language-js\\\",\\\"children\\\":[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2 language-js\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword\\\",\\\"children\\\":\\\"function\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token function\\\",\\\"children\\\":\\\"binarySearch\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token parameter\\\",\\\"children\\\":[\\\"start\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],\\\" end\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],\\\" inputs\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],\\\" target\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"{\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword\\\",\\\"children\\\":\\\"const\\\"}],\\\" mid \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token known-class-name class-name\\\",\\\"children\\\":\\\"Math\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\".\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token method function property-access\\\",\\\"children\\\":\\\"floor\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"start \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"+\\\"}],\\\" end\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"/\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"2\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword control-flow\\\",\\\"children\\\":\\\"if\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"start \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"\\u003e\\\"}],\\\" end\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"{\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"    \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword control-flow\\\",\\\"children\\\":\\\"return\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"-\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"1\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"}\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword control-flow\\\",\\\"children\\\":\\\"if\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"inputs\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"[\\\"}],\\\"mid\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"]\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"===\\\"}],\\\" target\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"{\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"    \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword control-flow\\\",\\\"children\\\":\\\"return\\\"}],\\\" mid\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"}\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword control-flow\\\",\\\"children\\\":\\\"if\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"inputs\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"[\\\"}],\\\"mid\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"]\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"\\u003c\\\"}],\\\" target\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"{\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"    \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword control-flow\\\",\\\"children\\\":\\\"return\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token function\\\",\\\"children\\\":\\\"binarySearch\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"mid \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"+\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"1\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],\\\" end\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],\\\" inputs\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],\\\" target\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"}\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword control-flow\\\",\\\"children\\\":\\\"return\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token function\\\",\\\"children\\\":\\\"binarySearch\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"start\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],\\\" mid \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"-\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"1\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],\\\" inputs\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],\\\" target\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"}\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword\\\",\\\"children\\\":\\\"const\\\"}],\\\" inputs \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"[\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"0\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"0\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"1\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"2\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"3\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"3\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"4\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"5\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"6\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"6\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"]\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword\\\",\\\"children\\\":\\\"const\\\"}],\\\" target \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"4\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword\\\",\\\"children\\\":\\\"const\\\"}],\\\" result \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token function\\\",\\\"children\\\":\\\"binarySearch\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"0\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],\\\" inputs\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\".\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token property-access\\\",\\\"children\\\":\\\"length\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"-\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"1\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],\\\" inputs\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],\\\" target\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token console class-name\\\",\\\"children\\\":\\\"console\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\".\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token method function property-access\\\",\\\"children\\\":\\\"log\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"result\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token comment\\\",\\\"children\\\":\\\"// example)\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token comment\\\",\\\"children\\\":\\\"// inputs: [0, 0, 1, 2, 3, 3, 4, 5, 6, 6]\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token comment\\\",\\\"children\\\":\\\"// target: 4\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token comment\\\",\\\"children\\\":\\\"// step1)\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token comment\\\",\\\"children\\\":\\\"// inputs: [0, 0, 1, 2, 3, 3, 4, 5, 6, 6]\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token comment\\\",\\\"children\\\":\\\"// - mid: 5\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token comment\\\",\\\"children\\\":\\\"// - inputs[5] = 3 -\\u003e target보다 작다.\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token comment\\\",\\\"children\\\":\\\"// - 탐색 범위를 [4, 5, 6, 6]으로 좁힌다.\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token comment\\\",\\\"children\\\":\\\"// step2)\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token comment\\\",\\\"children\\\":\\\"// inputs:  [4, 5, 6, 6]\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token comment\\\",\\\"children\\\":\\\"// - mid: 1\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token comment\\\",\\\"children\\\":\\\"// - inputs[1] = 5 -\\u003e target보다 크다.\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token comment\\\",\\\"children\\\":\\\"// - 탐색 범위를 [4]로 좁힌다.\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token comment\\\",\\\"children\\\":\\\"// step3)\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token comment\\\",\\\"children\\\":\\\"// inputs: [4]\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token comment\\\",\\\"children\\\":\\\"// - mid: 0\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token comment\\\",\\\"children\\\":\\\"// - inputs[0] = 4 -\\u003e target과 일치한다.\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token comment\\\",\\\"children\\\":\\\"// - 찾았다!\\\"}],\\\"\\\\n\\\"]}]]}]}]]}],[\\\"$\\\",\\\"section\\\",null,{\\\"aria-labelledby\\\":\\\"반복-이분탐색\\\",\\\"children\\\":[[\\\"$\\\",\\\"h3\\\",null,{\\\"className\\\":\\\"mt-7 mb-2 text-heading3 font-semibold leading-normal\\\",\\\"id\\\":\\\"반복-이분탐색\\\",\\\"children\\\":[[\\\"$\\\",\\\"$L13\\\",null,{\\\"aria-hidden\\\":\\\"true\\\",\\\"tabIndex\\\":\\\"-1\\\",\\\"href\\\":\\\"#반복-이분탐색\\\",\\\"children\\\":[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"icon icon-link\\\"}]}],\\\"반복 이분탐색\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":[\\\"아직까진 \\\",[\\\"$\\\",\\\"$L13\\\",null,{\\\"href\\\":\\\"https://en.wikipedia.org/wiki/Church%E2%80%93Turing_thesis\\\",\\\"children\\\":\\\"Church-Turing thesis\\\"}],\\\"에 따라 재귀는 반복문으로 치환이 가능하다고 알려져있다. (나중에 학습하게 된다면 관련한 내용도 적어보겠다.)\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"재귀가 아닌 반복문을 쓰면 다음의 이점이 있다.\\\"}],[\\\"$\\\",\\\"ul\\\",null,{\\\"className\\\":\\\"list-disc my-4\\\",\\\"children\\\":[\\\"\\\\n\\\",[\\\"$\\\",\\\"li\\\",null,{\\\"className\\\":\\\"text-paragraph font-light leading-normal py-1 ml-6\\\",\\\"children\\\":\\\"메모리를 더 적게 사용한다. (parameter에 해당하는 메모리를 사용하지 않는다.)\\\"}],\\\"\\\\n\\\",[\\\"$\\\",\\\"li\\\",null,{\\\"className\\\":\\\"text-paragraph font-light leading-normal py-1 ml-6\\\",\\\"children\\\":\\\"콜스택을 쌓지 않기 때문에 더 빠르다. (물론 big-o가 변할정도는 아니다.)\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"수도코드로 나타내보자.\\\"}],[\\\"$\\\",\\\"pre\\\",null,{\\\"className\\\":\\\"rounded-md [\\u0026_code]:py-0 [\\u0026_code]:px-0 line-numbers language-js\\\",\\\"children\\\":[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2 language-js\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token function\\\",\\\"children\\\":\\\"binarySearch2\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token parameter\\\",\\\"children\\\":[\\\"start\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],\\\"end\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"{\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword control-flow\\\",\\\"children\\\":\\\"while\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"start \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"\\u003c=\\\"}],\\\" end\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"{\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"    mid \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"start \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"+\\\"}],\\\" end\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"/\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"2\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"    \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword control-flow\\\",\\\"children\\\":\\\"if\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"inputs\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"[\\\"}],\\\"mid\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"]\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"==\\\"}],\\\" target\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"{\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"      \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword control-flow\\\",\\\"children\\\":\\\"return\\\"}],\\\" mid\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"    \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"}\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"    \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword control-flow\\\",\\\"children\\\":\\\"else\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword control-flow\\\",\\\"children\\\":\\\"if\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"inputs\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"[\\\"}],\\\"mid\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"]\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"\\u003e\\\"}],\\\" target\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"{\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"      end \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" mid\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"-\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"1\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"    \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"}\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"    \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword control-flow\\\",\\\"children\\\":\\\"else\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"{\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"      start \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" mid\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"+\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"1\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"    \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"}\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"}\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword control-flow\\\",\\\"children\\\":\\\"return\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"-\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"1\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"}\\\"}],\\\"\\\\n\\\"]}]]}]}]]}],[\\\"$\\\",\\\"section\\\",null,{\\\"aria-labelledby\\\":\\\"반복-이분탐색-javascript-구현\\\",\\\"children\\\":[[\\\"$\\\",\\\"h3\\\",null,{\\\"className\\\":\\\"mt-7 mb-2 text-heading3 font-semibold leading-normal\\\",\\\"id\\\":\\\"반복-이분탐색-javascript-구현\\\",\\\"children\\\":[[\\\"$\\\",\\\"$L13\\\",null,{\\\"aria-hidden\\\":\\\"true\\\",\\\"tabIndex\\\":\\\"-1\\\",\\\"href\\\":\\\"#반복-이분탐색-javascript-구현\\\",\\\"children\\\":[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"icon icon-link\\\"}]}],\\\"반복 이분탐색 javascript 구현\\\"]}],[\\\"$\\\",\\\"pre\\\",null,{\\\"className\\\":\\\"rounded-md [\\u0026_code]:py-0 [\\u0026_code]:px-0 line-numbers language-js\\\",\\\"children\\\":[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2 language-js\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword\\\",\\\"children\\\":\\\"function\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token function\\\",\\\"children\\\":\\\"binarySearch2\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token parameter\\\",\\\"children\\\":[\\\"inputs\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],\\\" start\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],\\\" end\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],\\\" target\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"{\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword control-flow\\\",\\\"children\\\":\\\"while\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"start \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"\\u003c=\\\"}],\\\" end\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"{\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"    \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword\\\",\\\"children\\\":\\\"const\\\"}],\\\" mid \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token known-class-name class-name\\\",\\\"children\\\":\\\"Math\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\".\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token method function property-access\\\",\\\"children\\\":\\\"floor\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"start \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"+\\\"}],\\\" end\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"/\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"2\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"    \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword control-flow\\\",\\\"children\\\":\\\"if\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"inputs\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"[\\\"}],\\\"mid\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"]\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"===\\\"}],\\\" target\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"{\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"      \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword control-flow\\\",\\\"children\\\":\\\"return\\\"}],\\\" mid\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"    \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"}\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword control-flow\\\",\\\"children\\\":\\\"else\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword control-flow\\\",\\\"children\\\":\\\"if\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"inputs\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"[\\\"}],\\\"mid\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"]\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"\\u003e\\\"}],\\\" target\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"{\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"      end \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" mid \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"-\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"1\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"    \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"}\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword control-flow\\\",\\\"children\\\":\\\"else\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"{\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"      start \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" mid \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"+\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"1\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"    \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"}\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"}\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword control-flow\\\",\\\"children\\\":\\\"return\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"-\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"1\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"}\\\"}],\\\"\\\\n\\\"]}]]}]}]]}],[\\\"$\\\",\\\"section\\\",null,{\\\"aria-labelledby\\\":\\\"추가적인-생각거리\\\",\\\"children\\\":[[\\\"$\\\",\\\"h2\\\",null,{\\\"className\\\":\\\"mt-8 mb-3 text-heading2 font-semibold leading-normal\\\",\\\"id\\\":\\\"추가적인-생각거리\\\",\\\"children\\\":[[\\\"$\\\",\\\"$L13\\\",null,{\\\"aria-hidden\\\":\\\"true\\\",\\\"tabIndex\\\":\\\"-1\\\",\\\"href\\\":\\\"#추가적인-생각거리\\\",\\\"children\\\":[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"icon icon-link\\\"}]}],\\\"추가적인 생각거리\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"이분 탐색이 가능하다면 삼분,사분 탐색도 가능할까?\\\"}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"그렇다면 그렇게 했을 때 어떤 장점이 있을까?\\\"}]]}]]}],[\\\"$\\\",\\\"$L14\\\",null,{\\\"size\\\":\\\"lg\\\",\\\"shareData\\\":{\\\"title\\\":\\\"Terra Dev Blog - algorithm-1-1-binary-search\\\",\\\"text\\\":\\\"$undefined\\\",\\\"url\\\":\\\"/next-blog/posts/algorithm-1-1-binary-search\\\"},\\\"aria-label\\\":\\\"Share this article\\\"}]]}],[\\\"$\\\",\\\"section\\\",null,{\\\"id\\\":\\\"author\\\",\\\"children\\\":[\\\"$\\\",\\\"$L15\\\",null,{}]}],[\\\"$\\\",\\\"section\\\",null,{\\\"children\\\":[[\\\"$\\\",\\\"$Lb\\\",null,{\\\"src\\\":\\\"https://giscus.app/client.js\\\",\\\"data-repo\\\":\\\"dev2820/blog-posts\\\",\\\"data-repo-id\\\":\\\"R_kgDOLQagPA\\\",\\\"data-category\\\":\\\"General\\\",\\\"data-category-id\\\":\\\"DIC_kwDOLQagPM4CjAtl\\\",\\\"data-mapping\\\":\\\"og:title\\\",\\\"data-strict\\\":\\\"0\\\",\\\"data-reactions-enabled\\\":\\\"1\\\",\\\"data-emit-metadata\\\":\\\"0\\\",\\\"data-input-position\\\":\\\"top\\\",\\\"data-theme\\\":\\\"light\\\",\\\"data-lang\\\":\\\"ko\\\",\\\"data-loading\\\":\\\"lazy\\\",\\\"cross-origin\\\":\\\"anonymous\\\",\\\"async\\\":true}],[\\\"$\\\",\\\"div\\\",null,{\\\"className\\\":\\\"giscus w-full min-w-screen-md\\\"}]]}]]}]\\n\"])</script><script>self.__next_f.push([1,\"f:[[\\\"$\\\",\\\"meta\\\",\\\"0\\\",{\\\"name\\\":\\\"viewport\\\",\\\"content\\\":\\\"width=device-width, initial-scale=1\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"1\\\",{\\\"charSet\\\":\\\"utf-8\\\"}],[\\\"$\\\",\\\"title\\\",\\\"2\\\",{\\\"children\\\":\\\"Terra Dev Blog - algorithm-1-1-binary-search\\\"}],[\\\"$\\\",\\\"link\\\",\\\"3\\\",{\\\"rel\\\":\\\"canonical\\\",\\\"href\\\":\\\"https://dev2820.github.io/next-blog/algorithm-1-1-binary-search\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"4\\\",{\\\"property\\\":\\\"og:title\\\",\\\"content\\\":\\\"algorithm-1-1-binary-search\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"5\\\",{\\\"property\\\":\\\"og:url\\\",\\\"content\\\":\\\"https://dev2820.github.io/next-blog/algorithm-1-1-binary-search\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"6\\\",{\\\"property\\\":\\\"og:locale\\\",\\\"content\\\":\\\"ko_KR\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"7\\\",{\\\"property\\\":\\\"og:image\\\",\\\"content\\\":\\\"https://dev2820.github.io/next-blog/next-blog/posts/algorithm-1-1-binary-search\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"8\\\",{\\\"property\\\":\\\"og:image:width\\\",\\\"content\\\":\\\"800\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"9\\\",{\\\"property\\\":\\\"og:image:height\\\",\\\"content\\\":\\\"600\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"10\\\",{\\\"property\\\":\\\"og:image:alt\\\",\\\"content\\\":\\\"algorithm-1-1-binary-search\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"11\\\",{\\\"property\\\":\\\"og:type\\\",\\\"content\\\":\\\"article\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"12\\\",{\\\"name\\\":\\\"twitter:card\\\",\\\"content\\\":\\\"summary_large_image\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"13\\\",{\\\"name\\\":\\\"twitter:title\\\",\\\"content\\\":\\\"algorithm-1-1-binary-search\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"14\\\",{\\\"name\\\":\\\"twitter:image\\\",\\\"content\\\":\\\"https://dev2820.github.io/next-blog/next-blog/posts/algorithm-1-1-binary-search\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"15\\\",{\\\"name\\\":\\\"twitter:image:width\\\",\\\"content\\\":\\\"800\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"16\\\",{\\\"name\\\":\\\"twitter:image:height\\\",\\\"content\\\":\\\"600\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"17\\\",{\\\"name\\\":\\\"twitter:image:alt\\\",\\\"content\\\":\\\"algorithm-1-1-binary-search\\\"}],[\\\"$\\\",\\\"link\\\",\\\"18\\\",{\\\"rel\\\":\\\"icon\\\",\\\"href\\\":\\\"/next-blog/favicon.ico\\\",\\\"type\\\":\\\"image/x-icon\\\",\\\"sizes\\\":\\\"16x16\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"19\\\",{\\\"name\\\":\\\"next-size-adjust\\\"}]]\\n6:null\\n\"])</script></body></html>",
            "url": "https://dev2820.github.io/next-blogalgorithm-1-1-binary-search",
            "title": "algorithm-1-1-binary-search",
            "date_modified": "2024-03-31T12:40:51.204Z",
            "author": {
                "name": "dev2820",
                "url": "https://dev2820.github.io/next-blog/about"
            }
        },
        {
            "id": "algorithm-1-2-merge-sort",
            "content_html": "<!DOCTYPE html><html lang=\"kr\" class=\"__variable_fa65fd __variable_7691e4 scroll-smooth\"><head><meta charSet=\"utf-8\"/><meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"/><link rel=\"preload\" href=\"/next-blog/_next/static/media/3e7b7e3fd4560936-s.p.woff2\" as=\"font\" crossorigin=\"\" type=\"font/woff2\"/><link rel=\"preload\" href=\"/next-blog/_next/static/media/ff840cfebfb63b0c-s.p.woff2\" as=\"font\" crossorigin=\"\" type=\"font/woff2\"/><link rel=\"stylesheet\" href=\"/next-blog/_next/static/css/16077bc16defb9b9.css\" data-precedence=\"next\"/><link rel=\"stylesheet\" href=\"/next-blog/_next/static/css/203da25389b4eeab.css\" data-precedence=\"next\"/><link rel=\"preload\" as=\"script\" fetchPriority=\"low\" href=\"/next-blog/_next/static/chunks/webpack-8f27d743501d147d.js\"/><script src=\"/next-blog/_next/static/chunks/f14ca715-03ac7b40665f0731.js\" async=\"\"></script><script src=\"/next-blog/_next/static/chunks/465-9f8ee17d6a70e147.js\" async=\"\"></script><script src=\"/next-blog/_next/static/chunks/main-app-e31317f2a5bf611e.js\" async=\"\"></script><script src=\"/next-blog/_next/static/chunks/805-a8af350d35fb9160.js\" async=\"\"></script><script src=\"/next-blog/_next/static/chunks/app/posts/%5Bslug%5D/layout-1cf1294e1a2539f4.js\" async=\"\"></script><script src=\"/next-blog/_next/static/chunks/618-f2bb34773a0d24b2.js\" async=\"\"></script><script src=\"/next-blog/_next/static/chunks/app/posts/page-e8c6275c8ebfad50.js\" async=\"\"></script><script src=\"/next-blog/_next/static/chunks/372-b649e69f56e8eb19.js\" async=\"\"></script><script src=\"/next-blog/_next/static/chunks/app/layout-c7fa40d911107206.js\" async=\"\"></script><script src=\"/next-blog/_next/static/chunks/952ad60e-7cdac7b6bf36214c.js\" async=\"\"></script><script src=\"/next-blog/_next/static/chunks/app/posts/%5Bslug%5D/page-e951164d6ad6c144.js\" async=\"\"></script><link rel=\"preload\" href=\"https://giscus.app/client.js\" as=\"script\"/><link rel=\"preload\" href=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/prism.min.js\" as=\"script\"/><link rel=\"preload\" href=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-javascript.min.js\" as=\"script\"/><link rel=\"preload\" href=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-typescript.min.js\" as=\"script\"/><link rel=\"preload\" href=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-jsx.min.js\" as=\"script\"/><link rel=\"preload\" href=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-tsx.min.js\" as=\"script\"/><link rel=\"preload\" href=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-c.min.js\" as=\"script\"/><link rel=\"preload\" href=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/plugins/line-numbers/prism-line-numbers.min.js\" as=\"script\"/><title>Terra Dev Blog - algorithm-1-2-merge-sort</title><link rel=\"canonical\" href=\"https://dev2820.github.io/next-blog/algorithm-1-2-merge-sort\"/><meta property=\"og:title\" content=\"algorithm-1-2-merge-sort\"/><meta property=\"og:url\" content=\"https://dev2820.github.io/next-blog/algorithm-1-2-merge-sort\"/><meta property=\"og:locale\" content=\"ko_KR\"/><meta property=\"og:image\" content=\"https://dev2820.github.io/next-blog/next-blog/posts/algorithm-1-2-merge-sort\"/><meta property=\"og:image:width\" content=\"800\"/><meta property=\"og:image:height\" content=\"600\"/><meta property=\"og:image:alt\" content=\"algorithm-1-2-merge-sort\"/><meta property=\"og:type\" content=\"article\"/><meta name=\"twitter:card\" content=\"summary_large_image\"/><meta name=\"twitter:title\" content=\"algorithm-1-2-merge-sort\"/><meta name=\"twitter:image\" content=\"https://dev2820.github.io/next-blog/next-blog/posts/algorithm-1-2-merge-sort\"/><meta name=\"twitter:image:width\" content=\"800\"/><meta name=\"twitter:image:height\" content=\"600\"/><meta name=\"twitter:image:alt\" content=\"algorithm-1-2-merge-sort\"/><link rel=\"icon\" href=\"/next-blog/favicon.ico\" type=\"image/x-icon\" sizes=\"16x16\"/><meta name=\"next-size-adjust\"/><script src=\"/next-blog/_next/static/chunks/polyfills-78c92fac7aa8fdd8.js\" noModule=\"\"></script></head><body class=\"__className_fa65fd flex flex-col text-gray-800\"><link href=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/plugins/line-numbers/prism-line-numbers.min.css\" rel=\"stylesheet\"/><header class=\"flex flex-row justify-center py-2 items-center self-center w-full max-w-screen-md px-4\"><a href=\"/next-blog\"><img alt=\"Terra&#x27;s Devlog logo\" loading=\"lazy\" width=\"258\" height=\"48\" decoding=\"async\" data-nimg=\"1\" style=\"color:transparent\" src=\"/next-blog/_next/static/media/logo-full.a2c57f51.svg\"/></a><div class=\"flex-1\"></div><nav class=\"\"><menu class=\"flex flex-row gap-8\"><li><a aria-disabled=\"false\" href=\"/next-blog/posts\"><div class=\"cursor-pointer duration-200 font-medium text-primary hover:text-primary\">Posts</div></a></li><li><a aria-disabled=\"true\" href=\"\"><div class=\"duration-200 font-medium cursor-not-allowed text-muted hover:text-muted\">About Me</div></a></li><li><a aria-disabled=\"true\" href=\"\"><div class=\"duration-200 font-medium cursor-not-allowed text-muted hover:text-muted\">Contact</div></a></li></menu></nav></header><main class=\"self-center w-full max-w-screen-md p-4 text-gray-800\"><article class=\"relative\"><header id=\"post-meta\"><h1 class=\"mt-10 mb-4 text-heading1 font-bold leading-normal\" id=\"algorithm-1-2-merge-sort\">algorithm-1-2-merge-sort</h1><time dateTime=\"2024-03-31\" aria-label=\"Published on 2024-03-31\">2024-03-31</time> <!-- -->|<!-- --> <time dateTime=\"PT2M\" aria-label=\"Estimated reading time\">2<!-- --> mins</time></header><div id=\"content\" class=\"relative\"><div id=\"table-of-header\" class=\"absolute -right-12 translate-x-full h-full w-52 desktop:block hidden\"><nav class=\"sticky top-24\"><ol><li><a href=\"#합병-정렬의-절차\"><div class=\"text-sm font-light data-[active=&quot;true&quot;]:text-base data-[active=&quot;true&quot;]:font-semibold py-0.5 text-neutral-400 data-[active=&quot;true&quot;]:text-primary duration-200 hover:text-primary pl-4\" data-id=\"#합병-정렬의-절차\">합병 정렬의 절차</div></a></li><li><a href=\"#합병-정렬의-복잡도\"><div class=\"text-sm font-light data-[active=&quot;true&quot;]:text-base data-[active=&quot;true&quot;]:font-semibold py-0.5 text-neutral-400 data-[active=&quot;true&quot;]:text-primary duration-200 hover:text-primary pl-4\" data-id=\"#합병-정렬의-복잡도\">합병 정렬의 복잡도</div></a></li><li><a href=\"#시간복잡도\"><div class=\"text-sm font-light data-[active=&quot;true&quot;]:text-base data-[active=&quot;true&quot;]:font-semibold py-0.5 text-neutral-400 data-[active=&quot;true&quot;]:text-primary duration-200 hover:text-primary pl-10\" data-id=\"#시간복잡도\">시간복잡도</div></a></li><li><a href=\"#공간복잡도\"><div class=\"text-sm font-light data-[active=&quot;true&quot;]:text-base data-[active=&quot;true&quot;]:font-semibold py-0.5 text-neutral-400 data-[active=&quot;true&quot;]:text-primary duration-200 hover:text-primary pl-10\" data-id=\"#공간복잡도\">공간복잡도</div></a></li><li><a href=\"#javascript-구현\"><div class=\"text-sm font-light data-[active=&quot;true&quot;]:text-base data-[active=&quot;true&quot;]:font-semibold py-0.5 text-neutral-400 data-[active=&quot;true&quot;]:text-primary duration-200 hover:text-primary pl-4\" data-id=\"#javascript-구현\">javascript 구현</div></a></li><li><a href=\"#3분할-4분할도-가능할까-k-way-merge-sort\"><div class=\"text-sm font-light data-[active=&quot;true&quot;]:text-base data-[active=&quot;true&quot;]:font-semibold py-0.5 text-neutral-400 data-[active=&quot;true&quot;]:text-primary duration-200 hover:text-primary pl-4\" data-id=\"#3분할-4분할도-가능할까-k-way-merge-sort\">3분할, 4분할도 가능할까? k-way merge sort</div></a></li><li><a href=\"#k-way-merge-sort의-시간복잡도\"><div class=\"text-sm font-light data-[active=&quot;true&quot;]:text-base data-[active=&quot;true&quot;]:font-semibold py-0.5 text-neutral-400 data-[active=&quot;true&quot;]:text-primary duration-200 hover:text-primary pl-10\" data-id=\"#k-way-merge-sort의-시간복잡도\">k-way merge sort의 시간복잡도</div></a></li><li><a href=\"#k-way-merge-sort의-사용\"><div class=\"text-sm font-light data-[active=&quot;true&quot;]:text-base data-[active=&quot;true&quot;]:font-semibold py-0.5 text-neutral-400 data-[active=&quot;true&quot;]:text-primary duration-200 hover:text-primary pl-10\" data-id=\"#k-way-merge-sort의-사용\">k-way merge sort의 사용</div></a></li><li><a href=\"#추가적인-생각거리\"><div class=\"text-sm font-light data-[active=&quot;true&quot;]:text-base data-[active=&quot;true&quot;]:font-semibold py-0.5 text-neutral-400 data-[active=&quot;true&quot;]:text-primary duration-200 hover:text-primary pl-4\" data-id=\"#추가적인-생각거리\">추가적인 생각거리</div></a></li></ol></nav></div><section aria-labelledby=\"12-합병-정렬-merge-sort\"><h1 class=\"mt-10 mb-4 text-heading1 font-bold leading-normal\" id=\"12-합병-정렬-merge-sort\"><a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#12-합병-정렬-merge-sort\"><span class=\"icon icon-link\"></span></a>1.2 합병 정렬 (Merge Sort)</h1><p class=\"font-light leading-normal mt-4 mb-2\"><img alt=\"합병 정렬\" loading=\"lazy\" width=\"704\" height=\"300\" decoding=\"async\" data-nimg=\"1\" class=\"object-cover rounded-md mx-auto my-12 w-full max-w-[704px]\" style=\"color:transparent\" src=\"/next-blog/posts/algorithm-1-2-merge-sort/https:/upload.wikimedia.org/wikipedia/commons/c/cc/Merge-sort-example-300px.gif\"/><br/>\n<!-- -->출처: <a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" href=\"https://ko.wikipedia.org/wiki/%ED%95%A9%EB%B3%91_%EC%A0%95%EB%A0%AC\">https://ko.wikipedia.org/wiki/%ED%95%A9%EB%B3%91_%EC%A0%95%EB%A0%AC</a></p><p class=\"font-light leading-normal mt-4 mb-2\">우리가 흔히 알고있는 합병 정렬은 쌍방 합병(two-way merging)을 이용한다. 쌍방 합병은 정렬된 두 개의 배열을 정렬상태를 유지하며 하나로 합치는 것을 의미한다.</p><p class=\"font-light leading-normal mt-4 mb-2\">합병 정렬의 키 포인트는 배열을 절반씩 정렬하고 합치면 전체를 정렬할 수 있다는 것, 즉 정렬 문제가 작은 정렬 문제로 분할된다는 것이다.</p><section aria-labelledby=\"합병-정렬의-절차\"><h2 class=\"mt-8 mb-3 text-heading2 font-semibold leading-normal\" id=\"합병-정렬의-절차\"><a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#합병-정렬의-절차\"><span class=\"icon icon-link\"></span></a>합병 정렬의 절차</h2><ol class=\"list-decimal my-4\">\n<li class=\"text-paragraph font-light leading-normal py-1 ml-6\">분할: 배열을 반으로 분할한다.</li>\n<li class=\"text-paragraph font-light leading-normal py-1 ml-6\">정복: 각 배열을 정렬한다.</li>\n<li class=\"text-paragraph font-light leading-normal py-1 ml-6\">취합: 정렬된 두 배열을 합병한다.</li>\n</ol><pre class=\"rounded-md [&amp;_code]:py-0 [&amp;_code]:px-0 line-numbers language-js\"><code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2 language-js\"><span class=\"code-line\"><span class=\"token comment\">// 수도코드</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"token function\">mergeSort</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">arr</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">  arr1 <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> arr<span class=\"token punctuation\">.</span><span class=\"token property-access\">length</span><span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n</span><span class=\"code-line\">  arr2 <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">slice</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">.</span><span class=\"token property-access\">length</span><span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">  sortedArr1 <span class=\"token operator\">=</span> <span class=\"token function\">mergeSort</span><span class=\"token punctuation\">(</span>arr1<span class=\"token punctuation\">)</span>\n</span><span class=\"code-line\">  sortedArr2 <span class=\"token operator\">=</span> <span class=\"token function\">mergeSort</span><span class=\"token punctuation\">(</span>arr2<span class=\"token punctuation\">)</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">  <span class=\"token function\">merge</span><span class=\"token punctuation\">(</span>sortedArr1<span class=\"token punctuation\">,</span> sortedArr2<span class=\"token punctuation\">)</span>\n</span><span class=\"code-line\"><span class=\"token punctuation\">}</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"token function\">merge</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">arr1<span class=\"token punctuation\">,</span>arr2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">  result <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">  i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// i와 j는 각각 arr1,arr2를 순회할 때 사용할 인덱스</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">  <span class=\"token comment\">// 한쪽 배열을 모두 순회할 때까지 result에 작은 수를 찾아 넣는다.</span>\n</span><span class=\"code-line\">  <span class=\"token keyword control-flow\">while</span><span class=\"token punctuation\">(</span><span class=\"token function\">isNotEmpty</span><span class=\"token punctuation\">(</span>arr1<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">isNotEmpty</span><span class=\"token punctuation\">(</span>arr2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">    <span class=\"token keyword control-flow\">if</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">&gt;</span> arr1<span class=\"token punctuation\">.</span><span class=\"token property-access\">length</span> <span class=\"token operator\">||</span> j <span class=\"token operator\">&gt;</span> arr2<span class=\"token punctuation\">.</span><span class=\"token property-access\">length</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">      <span class=\"token keyword control-flow\">break</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">    <span class=\"token punctuation\">}</span>\n</span><span class=\"code-line\">    <span class=\"token keyword control-flow\">if</span><span class=\"token punctuation\">(</span>arr1<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> arr2<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">      result<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">push</span><span class=\"token punctuation\">(</span>arr1<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">      i<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">    <span class=\"token punctuation\">}</span>\n</span><span class=\"code-line\">    <span class=\"token keyword control-flow\">else</span> <span class=\"token keyword control-flow\">if</span><span class=\"token punctuation\">(</span>arr1<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">&gt;=</span> arr2<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">      result<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">push</span><span class=\"token punctuation\">(</span>arr2<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">      j<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">    <span class=\"token punctuation\">}</span>\n</span><span class=\"code-line\">  <span class=\"token punctuation\">}</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">  <span class=\"token comment\">// 배열의 남은 원소를 이어 붙인다.</span>\n</span><span class=\"code-line\">  result<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">push</span><span class=\"token punctuation\">(</span>arr1<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">slice</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span>arr1<span class=\"token punctuation\">.</span><span class=\"token property-access\">length</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</span><span class=\"code-line\">  result<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">push</span><span class=\"token punctuation\">(</span>arr2<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">slice</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">,</span>arr2<span class=\"token punctuation\">.</span><span class=\"token property-access\">length</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">  <span class=\"token keyword control-flow\">return</span> result<span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\"><span class=\"token punctuation\">}</span>\n</span></code></pre><p class=\"font-light leading-normal mt-4 mb-2\">8개의 임의의 원소를 정렬하는 경우를 살펴보자.</p><blockquote class=\"my-4 border-l-4 border-primary p-6 bg-gray-100 text-gray-700 [&amp;_*:first-child]:mt-0 [&amp;_*:last-child]:mb-0\">\n<p class=\"font-light leading-normal mt-4 mb-2\">6 5 3 1 8 7 2 4</p>\n<p class=\"font-light leading-normal mt-4 mb-2\">배열을 둘로 쪼갠다.<br/>\n<!-- -->[6 5 3 1]<br/>\n<!-- -->[8 7 2 4]</p>\n<p class=\"font-light leading-normal mt-4 mb-2\">분할한 각 배열을 정렬한다.<br/>\n<!-- -->[1 3 5 6]<br/>\n<!-- -->[2 4 7 8]</p>\n<p class=\"font-light leading-normal mt-4 mb-2\">두 배열을 앞에서부터 순회하며 작은 값을 배열에 합친다.</p>\n<ol class=\"list-decimal my-4\">\n<li class=\"text-paragraph font-light leading-normal py-1 ml-6\">1이 2보다 작기 때문에 1을 넣는다. ([_ 3 5 6] [2 4 7 8])</li>\n<li class=\"text-paragraph font-light leading-normal py-1 ml-6\">2가 3보다 작기 때문에 2를 넣는다. ([_ 3 5 6] [_ 4 7 8])</li>\n<li class=\"text-paragraph font-light leading-normal py-1 ml-6\">3이 4보다 작기 때문에 3을 넣는다. ([_ _ 5 6] [_ 4 7 8])</li>\n<li class=\"text-paragraph font-light leading-normal py-1 ml-6\">4가 5보다 작기 때문에 4를 넣는다. ([_ _ 5 6] [_ _ 7 8])</li>\n<li class=\"text-paragraph font-light leading-normal py-1 ml-6\">5가 7보다 작기 때문에 5를 넣는다. ([_ _ _ 6] [_ _ 7 8])</li>\n<li class=\"text-paragraph font-light leading-normal py-1 ml-6\">6이 7보다 작기 때문에 6을 넣는다. ([_ _ _ <em class=\"[img+&amp;]:block [img+&amp;]:text-center [img+&amp;]:text-gray-400 [img+&amp;]:font-thin [img+&amp;]:not-italic [img+&amp;]:text-sm [img+&amp;]:-translate-y-10\">] [</em> _ 7 8])</li>\n<li class=\"text-paragraph font-light leading-normal py-1 ml-6\">한쪽 배열이 비었기 때문에 다른 한 쪽을 뒤에 붙인다.<br/>\n<!-- -->...</li>\n</ol>\n<p class=\"font-light leading-normal mt-4 mb-2\">이렇게 하면 정렬된 배열을 얻을 수 있다.</p>\n</blockquote><p class=\"font-light leading-normal mt-4 mb-2\">쪼갠 두 배열의 길이가 같아야할 필요는 없다. 즉, 홀수여도 병합할 수 있다.</p></section><section aria-labelledby=\"합병-정렬의-복잡도\"><h2 class=\"mt-8 mb-3 text-heading2 font-semibold leading-normal\" id=\"합병-정렬의-복잡도\"><a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#합병-정렬의-복잡도\"><span class=\"icon icon-link\"></span></a>합병 정렬의 복잡도</h2><section aria-labelledby=\"시간복잡도\"><h3 class=\"mt-7 mb-2 text-heading3 font-semibold leading-normal\" id=\"시간복잡도\"><a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#시간복잡도\"><span class=\"icon icon-link\"></span></a>시간복잡도</h3><p class=\"font-light leading-normal mt-4 mb-2\">정렬에서 시간복잡도를 구할 때 보통 단위 연산을 비교 횟수로 잡는다.</p><p class=\"font-light leading-normal mt-4 mb-2\">먼저 합병을 할 때의 시간복잡도를 계산해보자.</p><pre class=\"rounded-md [&amp;_code]:py-0 [&amp;_code]:px-0 line-numbers language-js\"><code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2 language-js\"><span class=\"code-line\">두 배열의 길이가 각각 h<span class=\"token punctuation\">,</span>m일 때\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">비교 연산은 최악의 경우 <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">W(h,m) = h + m - 1</span><span class=\"token template-punctuation string\">`</span></span>이다<span class=\"token punctuation\">.</span> <span class=\"token property-access\">h</span><span class=\"token operator\">=</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> m<span class=\"token operator\">=</span><span class=\"token number\">4</span><span class=\"token punctuation\">(</span>m<span class=\"token operator\">=</span><span class=\"token number\">5</span>일때도 동일하다<span class=\"token punctuation\">)</span> 일 때 총 <span class=\"token number\">8</span>번의 비교가 일어난다<span class=\"token punctuation\">.</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"token property-access\">병합</span> 정렬을 하게 되면 최악의 경우는 다음과 같다<span class=\"token punctuation\">.</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"token constant\">W</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token constant\">W</span><span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token constant\">W</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> h <span class=\"token operator\">+</span> m <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">n이 거듭제곱인 경우 h <span class=\"token operator\">=</span> m <span class=\"token operator\">=</span> n<span class=\"token operator\">/</span><span class=\"token number\">2</span>가 된다<span class=\"token punctuation\">.</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"token property-access\">따라서</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"token constant\">W</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token constant\">W</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token constant\">W</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"token constant\">W</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token operator\">*</span><span class=\"token constant\">W</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">배열의 길이가 <span class=\"token number\">1</span>인 경우 비교는 없기 때문에 <span class=\"token constant\">W</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span> 이다<span class=\"token punctuation\">.</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"token property-access\">귀납법으로</span> 증명해보자<span class=\"token punctuation\">.</span>\n</span><span class=\"code-line\"><span class=\"token property-access\">반복</span> 대치를 해보면\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"token constant\">W</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> <span class=\"token constant\">W</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">/</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> n<span class=\"token operator\">/</span><span class=\"token number\">2</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\"><span class=\"token constant\">W</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">/</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> <span class=\"token constant\">W</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">/</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> n<span class=\"token operator\">/</span><span class=\"token number\">4</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\"><span class=\"token constant\">W</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span>\n</span><span class=\"code-line\"><span class=\"token operator\">=</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> <span class=\"token constant\">W</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\"><span class=\"token operator\">=</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token operator\">*</span> <span class=\"token constant\">W</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">/</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> n<span class=\"token operator\">/</span><span class=\"token number\">2</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> n <span class=\"token operator\">-</span> <span class=\"token number\">1</span> <span class=\"token operator\">=</span> <span class=\"token number\">4</span> <span class=\"token operator\">*</span> <span class=\"token constant\">W</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">/</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">2n</span> <span class=\"token operator\">-</span> <span class=\"token number\">3</span>\n</span><span class=\"code-line\"><span class=\"token operator\">=</span> <span class=\"token number\">4</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token operator\">*</span> <span class=\"token constant\">W</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">/</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> n<span class=\"token operator\">/</span><span class=\"token number\">4</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">2n</span> <span class=\"token operator\">-</span> <span class=\"token number\">3</span> <span class=\"token operator\">=</span> <span class=\"token number\">8</span> <span class=\"token operator\">*</span> <span class=\"token constant\">W</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">/</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">3n</span> <span class=\"token operator\">-</span> <span class=\"token number\">7</span>\n</span><span class=\"code-line\"><span class=\"token spread operator\">...</span>\n</span><span class=\"code-line\"><span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token operator\">^</span>k <span class=\"token operator\">*</span> <span class=\"token constant\">W</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token operator\">^</span>k<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> kn <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token operator\">^</span>k <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n</span><span class=\"code-line\">k가 logn 일때\n</span><span class=\"code-line\"><span class=\"token constant\">W</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> n <span class=\"token operator\">*</span> <span class=\"token constant\">W</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> n<span class=\"token operator\">*</span>logn <span class=\"token operator\">-</span> n <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\n</span><span class=\"code-line\"><span class=\"token operator\">=</span> n<span class=\"token operator\">*</span>logn <span class=\"token operator\">-</span> n <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\n</span><span class=\"code-line\"><span class=\"token operator\">=</span> <span class=\"token constant\">O</span><span class=\"token punctuation\">(</span>nlogn<span class=\"token punctuation\">)</span>\n</span></code></pre><p class=\"font-light leading-normal mt-4 mb-2\">병합 정렬은 항상 배열을 반으로 나누어 재귀적으로 비교하기 때문에 최선의 시간복잡도와 평균 시간복잡도도 <code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\">nlog(n)</code>으로 같다.</p></section><section aria-labelledby=\"공간복잡도\"><h3 class=\"mt-7 mb-2 text-heading3 font-semibold leading-normal\" id=\"공간복잡도\"><a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#공간복잡도\"><span class=\"icon icon-link\"></span></a>공간복잡도</h3><p class=\"font-light leading-normal mt-4 mb-2\">병합 정렬은 제자리정렬(in-place sort)가 아니다. 그 말인 즉슨, n개의 배열이 주어지면 2n의 공간이 필요하다는 뜻이다.\n쉽게 생각해보면 n개의 배열을 정렬하기 위해선 n/2 배열 2개를 정렬하고 병합하는 과정에서 n만큼의 공간을 더 사용한다.</p><p class=\"font-light leading-normal mt-4 mb-2\">따라서 공간복잡도는 <code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\">2n</code>이다.</p></section></section><section aria-labelledby=\"javascript-구현\"><h2 class=\"mt-8 mb-3 text-heading2 font-semibold leading-normal\" id=\"javascript-구현\"><a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#javascript-구현\"><span class=\"icon icon-link\"></span></a>javascript 구현</h2><pre class=\"rounded-md [&amp;_code]:py-0 [&amp;_code]:px-0 line-numbers language-js\"><code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2 language-js\"><span class=\"code-line\"><span class=\"token keyword\">function</span> <span class=\"token function\">mergeSort</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">arr</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">  <span class=\"token comment\">// 배열의 길이가 1 이하인 경우 정렬이 불필요하므로 그대로 반환</span>\n</span><span class=\"code-line\">  <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">.</span><span class=\"token property-access\">length</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">    <span class=\"token keyword control-flow\">return</span> arr<span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">  <span class=\"token punctuation\">}</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">  <span class=\"token comment\">// 배열을 반으로 나누기</span>\n</span><span class=\"code-line\">  <span class=\"token keyword\">const</span> mid <span class=\"token operator\">=</span> <span class=\"token known-class-name class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">floor</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">.</span><span class=\"token property-access\">length</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">  <span class=\"token keyword\">const</span> left <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> mid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">  <span class=\"token keyword\">const</span> right <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">slice</span><span class=\"token punctuation\">(</span>mid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">  <span class=\"token comment\">// 재귀적으로 반으로 나눈 부분 배열을 정렬</span>\n</span><span class=\"code-line\">  <span class=\"token keyword\">const</span> sortedLeft <span class=\"token operator\">=</span> <span class=\"token function\">mergeSort</span><span class=\"token punctuation\">(</span>left<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">  <span class=\"token keyword\">const</span> sortedRight <span class=\"token operator\">=</span> <span class=\"token function\">mergeSort</span><span class=\"token punctuation\">(</span>right<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">  <span class=\"token comment\">// 두 부분 배열을 병합하여 정렬된 배열 반환</span>\n</span><span class=\"code-line\">  <span class=\"token keyword control-flow\">return</span> <span class=\"token function\">merge</span><span class=\"token punctuation\">(</span>sortedLeft<span class=\"token punctuation\">,</span> sortedRight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\"><span class=\"token punctuation\">}</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"token keyword\">function</span> <span class=\"token function\">merge</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">left<span class=\"token punctuation\">,</span> right</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">  <span class=\"token keyword\">let</span> result <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">  <span class=\"token keyword\">let</span> leftIndex <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">  <span class=\"token keyword\">let</span> rightIndex <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">  <span class=\"token comment\">// 두 부분 배열을 비교하여 작은 값을 결과 배열에 삽입</span>\n</span><span class=\"code-line\">  <span class=\"token keyword control-flow\">while</span> <span class=\"token punctuation\">(</span>leftIndex <span class=\"token operator\">&lt;</span> left<span class=\"token punctuation\">.</span><span class=\"token property-access\">length</span> <span class=\"token operator\">&amp;&amp;</span> rightIndex <span class=\"token operator\">&lt;</span> right<span class=\"token punctuation\">.</span><span class=\"token property-access\">length</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">    <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span>left<span class=\"token punctuation\">[</span>leftIndex<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> right<span class=\"token punctuation\">[</span>rightIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">      result<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">push</span><span class=\"token punctuation\">(</span>left<span class=\"token punctuation\">[</span>leftIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">      leftIndex<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">    <span class=\"token punctuation\">}</span> <span class=\"token keyword control-flow\">else</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">      result<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">push</span><span class=\"token punctuation\">(</span>right<span class=\"token punctuation\">[</span>rightIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">      rightIndex<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">    <span class=\"token punctuation\">}</span>\n</span><span class=\"code-line\">  <span class=\"token punctuation\">}</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">  <span class=\"token comment\">// 남은 요소들을 결과 배열에 추가</span>\n</span><span class=\"code-line\">  <span class=\"token keyword control-flow\">while</span> <span class=\"token punctuation\">(</span>leftIndex <span class=\"token operator\">&lt;</span> left<span class=\"token punctuation\">.</span><span class=\"token property-access\">length</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">    result<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">push</span><span class=\"token punctuation\">(</span>left<span class=\"token punctuation\">[</span>leftIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">    leftIndex<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">  <span class=\"token punctuation\">}</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">  <span class=\"token keyword control-flow\">while</span> <span class=\"token punctuation\">(</span>rightIndex <span class=\"token operator\">&lt;</span> right<span class=\"token punctuation\">.</span><span class=\"token property-access\">length</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">    result<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">push</span><span class=\"token punctuation\">(</span>right<span class=\"token punctuation\">[</span>rightIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">    rightIndex<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">  <span class=\"token punctuation\">}</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">  <span class=\"token keyword control-flow\">return</span> result<span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\"><span class=\"token punctuation\">}</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"token comment\">// 테스트를 위한 예시 배열</span>\n</span><span class=\"code-line\"><span class=\"token keyword\">const</span> array <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"token comment\">// 머지 소트를 이용해 배열 정렬</span>\n</span><span class=\"code-line\"><span class=\"token keyword\">const</span> sortedArray <span class=\"token operator\">=</span> <span class=\"token function\">mergeSort</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\"><span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">&quot;Sorted array:&quot;</span><span class=\"token punctuation\">,</span> sortedArray<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span></code></pre></section><section aria-labelledby=\"3분할-4분할도-가능할까-k-way-merge-sort\"><h2 class=\"mt-8 mb-3 text-heading2 font-semibold leading-normal\" id=\"3분할-4분할도-가능할까-k-way-merge-sort\"><a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#3분할-4분할도-가능할까-k-way-merge-sort\"><span class=\"icon icon-link\"></span></a>3분할, 4분할도 가능할까? k-way merge sort</h2><p class=\"font-light leading-normal mt-4 mb-2\">앞서 설명한 모든 내용은 two-way merge를 기반으로 했다. 그렇다면 three-way, four-way도 가능할까?</p><p class=\"font-light leading-normal mt-4 mb-2\">물론 가능하다. 이들을 k-way merge라고 한다.</p><p class=\"font-light leading-normal mt-4 mb-2\"><img alt=\"k-way merge sort\" loading=\"lazy\" width=\"704\" height=\"300\" decoding=\"async\" data-nimg=\"1\" class=\"object-cover rounded-md mx-auto my-12 w-full max-w-[704px]\" style=\"color:transparent\" src=\"/next-blog/posts/algorithm-1-2-merge-sort/https:/image3.slideserve.com/5605436/of-comparisons-k-way-merge-l.jpg\"/></p><p class=\"font-light leading-normal mt-4 mb-2\">출처: <a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" href=\"https://www.slideserve.com/lamond/8-external-sorting\">https://www.slideserve.com/lamond/8-external-sorting</a>\n수도코드는 다음과 같다.</p><pre class=\"rounded-md [&amp;_code]:py-0 [&amp;_code]:px-0 line-numbers language-js\"><code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2 language-js\"><span class=\"code-line\"><span class=\"token comment\">// k-way merge</span>\n</span><span class=\"code-line\"><span class=\"token function\">mergeSort</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">arr</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">  subArrays <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">  subArrayLen <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">.</span><span class=\"token property-access\">length</span> <span class=\"token operator\">/</span> k<span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">  <span class=\"token keyword control-flow\">for</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>k<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">    subArray <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">slice</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">*</span>subArrayLen<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>subArrayLen<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">    <span class=\"token function\">mergeSort</span><span class=\"token punctuation\">(</span>subArray<span class=\"token punctuation\">)</span>\n</span><span class=\"code-line\">    subArrays<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">push</span><span class=\"token punctuation\">(</span>subArray<span class=\"token punctuation\">)</span>\n</span><span class=\"code-line\">  <span class=\"token punctuation\">}</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">  result <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">  indexes <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token number\">.0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// k 길이만큼 인덱스 배열</span>\n</span><span class=\"code-line\">  <span class=\"token keyword control-flow\">while</span><span class=\"token punctuation\">(</span>subArray<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">length</span> <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> subArray<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">length</span> <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token spread operator\">...</span> subArray<span class=\"token punctuation\">[</span>k<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">length</span> <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">    <span class=\"token comment\">// subArray의 첫번째 원소중 가장 작은 원소를</span>\n</span><span class=\"code-line\">    smallest <span class=\"token operator\">=</span> <span class=\"token number\">Infinity</span>\n</span><span class=\"code-line\">    smallestIndex <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">    <span class=\"token keyword control-flow\">for</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>k<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">      smallest <span class=\"token operator\">=</span> <span class=\"token known-class-name class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">min</span><span class=\"token punctuation\">(</span>smallest<span class=\"token punctuation\">,</span> subArray<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">      <span class=\"token keyword control-flow\">if</span><span class=\"token punctuation\">(</span>smallest <span class=\"token operator\">===</span> subArray<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">        smallestIndex <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">      <span class=\"token punctuation\">}</span>\n</span><span class=\"code-line\">    <span class=\"token punctuation\">}</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">    indexes<span class=\"token punctuation\">[</span>smallestIndex<span class=\"token punctuation\">]</span><span class=\"token operator\">++</span>\n</span><span class=\"code-line\">    result<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">push</span><span class=\"token punctuation\">(</span>smallest<span class=\"token punctuation\">)</span>\n</span><span class=\"code-line\">  <span class=\"token punctuation\">}</span>\n</span><span class=\"code-line\"><span class=\"token punctuation\">}</span>\n</span><span class=\"code-line\">\n</span></code></pre><p class=\"font-light leading-normal mt-4 mb-2\">눈치챘겠지만, 그림에선 트리가 나오는데, 수도코드에는 트리 구조가 없어 잘못 설명된 수도코드임을 알 수 있다. 수도 코드에선 k 개의 배열 중 가장 작은 값을 찾고 있고, 이에 k^2를 사용하고 있다. 이 과정은 우선순위 큐, 즉 힙을 통해 최적화될 수 있다.</p><p class=\"font-light leading-normal mt-4 mb-2\">힙을 사용하면 가장 작은 원소가 top에 오도록 logk만에 정렬되기 때문에 klogk만에 병합을 완료할 수 있다.</p><section aria-labelledby=\"k-way-merge-sort의-시간복잡도\"><h3 class=\"mt-7 mb-2 text-heading3 font-semibold leading-normal\" id=\"k-way-merge-sort의-시간복잡도\"><a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#k-way-merge-sort의-시간복잡도\"><span class=\"icon icon-link\"></span></a>k-way merge sort의 시간복잡도</h3><p class=\"font-light leading-normal mt-4 mb-2\">n * log<sub>k</sub>n</p><p class=\"font-light leading-normal mt-4 mb-2\">증명 참고: <a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" href=\"https://pro-programmer.tistory.com/entry/kway-Merge-Sort%ED%95%A9%EB%B3%91-%EC%A0%95%EB%A0%AC%EC%9D%98-%EC%8B%9C%EA%B0%84%EB%B3%B5%EC%9E%A1%EB%8F%84-%EA%B3%84%EC%82%B0%ED%95%98%EA%B8%B0\">https://pro-programmer.tistory.com/entry/kway-Merge-Sort%ED%95%A9%EB%B3%91-%EC%A0%95%EB%A0%AC%EC%9D%98-%EC%8B%9C%EA%B0%84%EB%B3%B5%EC%9E%A1%EB%8F%84-%EA%B3%84%EC%82%B0%ED%95%98%EA%B8%B0</a></p></section><section aria-labelledby=\"k-way-merge-sort의-사용\"><h3 class=\"mt-7 mb-2 text-heading3 font-semibold leading-normal\" id=\"k-way-merge-sort의-사용\"><a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#k-way-merge-sort의-사용\"><span class=\"icon icon-link\"></span></a>k-way merge sort의 사용</h3><p class=\"font-light leading-normal mt-4 mb-2\">k-way merge sort는 언제 사용할 수 있을까? 주로 데이터베이스의 정렬에 사용된다.</p><blockquote class=\"my-4 border-l-4 border-primary p-6 bg-gray-100 text-gray-700 [&amp;_*:first-child]:mt-0 [&amp;_*:last-child]:mb-0\">\n<p class=\"font-light leading-normal mt-4 mb-2\">외부 병합 정렬(external merge sort)은 대상 데이터가 테이프나 디스크에 저장되어있고 데이터가 너무 커서 메모리에 담을 수 없는 경우에 실용적인 방법이다. 예를 들어, 900MB의 데이터를 100MB의 RAM을 사용하여 정렬을 해야 한다고 해보자.</p>\n<p class=\"font-light leading-normal mt-4 mb-2\">100MB 데이터를 주메모리에 읽어들이고, quicksort와 같이 일반적인 알고리즘을 사용하여 정렬한다.\n정렬된 데이터를 디스크에 쓴다.\n1,2 번 과정을 9번 반복한다. 그러면 100MB짜리 파일이 9개 생긴다.\n9개의 파일에서 각각 처음부터 10MB 씩을 메모리(입력버퍼)에 로딩한다. 10MB의 출력을 위한 버퍼도 만들어둔다.\n9way merge를 수행하고 결과를 출력버퍼에 쓴다. 출력버퍼가 차면 파일에 쓰고, 출력 버퍼를 비운다. 9개의 입력 버퍼가 비워지면, 다음 10MB를 읽는다.</p>\n<p class=\"font-light leading-normal mt-4 mb-2\">출처: <a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" href=\"https://ko.wikipedia.org/wiki/%ED%95%A9%EB%B3%91_%EC%A0%95%EB%A0%AC\">https://ko.wikipedia.org/wiki/%ED%95%A9%EB%B3%91_%EC%A0%95%EB%A0%AC</a></p>\n</blockquote><p class=\"font-light leading-normal mt-4 mb-2\">이러한 합병 정렬을 외부 합병 정렬이라고 한다. 위의 방법을 사용하면 900MB를 정렬하는데 100MB의 메모리만 사용해도 된다.\n실제 데이터베이스가 사용되는 환경에서도 메모리의 크기에 한계가 있기 때문에 이러한 방법이 사용된다.</p></section></section><section aria-labelledby=\"추가적인-생각거리\"><h2 class=\"mt-8 mb-3 text-heading2 font-semibold leading-normal\" id=\"추가적인-생각거리\"><a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#추가적인-생각거리\"><span class=\"icon icon-link\"></span></a>추가적인 생각거리</h2><p class=\"font-light leading-normal mt-4 mb-2\">두 배열을 균등하지 않게 분할해도 머지소트가 동작할까?</p></section></section><button class=\"__trds __trds button trds-inline-flex trds-justify-center trds-place-items-center trds-whitespace-nowrap trds-rounded-lg trds-text-md trds-font-medium trds-gap-2 trds-transition-colors trds-cursor-pointer disabled:trds-cursor-not-allowed disabled:trds-opacity-50 trds-bg-neutral trds-text-fg-neutral disabled:trds-bg-neutral enabled:hover:trds-bg-neutral-hover enabled:active:trds-bg-neutral-pressed __trds trds-h-11 trds-w-11 trds-px-0 trds-py-0\" type=\"button\" aria-disabled=\"false\" aria-busy=\"false\" aria-label=\"Share this article\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-share\"><path d=\"M4 12v8a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-8\"></path><polyline points=\"16 6 12 2 8 6\"></polyline><line x1=\"12\" x2=\"12\" y1=\"2\" y2=\"15\"></line></svg></button><div data-scope=\"toast\" data-part=\"group\" dir=\"ltr\" tabindex=\"-1\" aria-label=\"bottom Notifications alt+T\" id=\"toast-group:bottom\" data-placement=\"bottom\" data-side=\"bottom\" data-align=\"center\" aria-live=\"polite\" role=\"region\" style=\"position:fixed;pointer-events:none;display:flex;flex-direction:column;--gap:16px;--first-height:0px;z-index:2147483647;align-items:center;bottom:max(env(safe-area-inset-bottom, 0px), 1rem);inset-inline-end:calc(env(safe-area-inset-right, 0px) + 1rem);inset-inline-start:calc(env(safe-area-inset-left, 0px) + 1rem)\"></div></div><section id=\"author\"><div class=\"flex flex-row gap-4 items-center\"><div class=\"__trds trds-animate-shimmer trds-bg-clip-padding-box trds-text-transparent trds-cursor-default trds-pointer-events-none trds-select-none before::trds-invisible after::trds-invisible [&amp;_*]:trds-invisible trds-rounded-lg rounded-full\"><div data-scope=\"avatar\" data-part=\"root\" dir=\"ltr\" id=\"avatar::Rn7obtsra:\" class=\"trds-rounded-full trds-overflow-hidden w-16 h-16\"><img data-scope=\"avatar\" data-part=\"image\" hidden=\"\" dir=\"ltr\" id=\"avatar::Rn7obtsra::image\" data-state=\"hidden\" class=\"trds-bg-muted\"/><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"64\" height=\"64\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-user trds-bg-muted trds-w-full trds-h-full\" data-scope=\"avatar\" data-part=\"fallback\" dir=\"ltr\" id=\"avatar::Rn7obtsra::fallback\" data-state=\"visible\"><path d=\"M19 21v-2a4 4 0 0 0-4-4H9a4 4 0 0 0-4 4v2\"></path><circle cx=\"12\" cy=\"7\" r=\"4\"></circle></svg></div></div><div class=\"text-pretty flex flex-col gap-2\"><div class=\"__trds trds-animate-shimmer trds-bg-clip-padding-box trds-text-transparent trds-cursor-default trds-pointer-events-none trds-select-none before::trds-invisible after::trds-invisible [&amp;_*]:trds-invisible trds-rounded-lg h-fit w-fit\"><strong class=\"inline-block h-6 min-w-36\"> </strong></div><div class=\"__trds trds-animate-shimmer trds-bg-clip-padding-box trds-text-transparent trds-cursor-default trds-pointer-events-none trds-select-none before::trds-invisible after::trds-invisible [&amp;_*]:trds-invisible trds-rounded-lg h-fit w-fit\"><p class=\"whitespace-pre-wrap h-6 min-w-64\"></p></div></div></div></section><section><div class=\"giscus w-full min-w-screen-md\"></div></section></article></main><footer class=\"self-center w-full max-w-screen-md px-4 h-96\"><p>© 2024-<!-- -->2024<!-- --> <!-- -->dev2820<!-- -->. All rights reserved.</p></footer><script src=\"/next-blog/_next/static/chunks/webpack-8f27d743501d147d.js\" async=\"\"></script><script>(self.__next_f=self.__next_f||[]).push([0]);self.__next_f.push([2,null])</script><script>self.__next_f.push([1,\"1:HL[\\\"/next-blog/_next/static/media/3e7b7e3fd4560936-s.p.woff2\\\",\\\"font\\\",{\\\"crossOrigin\\\":\\\"\\\",\\\"type\\\":\\\"font/woff2\\\"}]\\n2:HL[\\\"/next-blog/_next/static/media/ff840cfebfb63b0c-s.p.woff2\\\",\\\"font\\\",{\\\"crossOrigin\\\":\\\"\\\",\\\"type\\\":\\\"font/woff2\\\"}]\\n3:HL[\\\"/next-blog/_next/static/css/16077bc16defb9b9.css\\\",\\\"style\\\"]\\n4:HL[\\\"/next-blog/_next/static/css/203da25389b4eeab.css\\\",\\\"style\\\"]\\n\"])</script><script>self.__next_f.push([1,\"5:I[5726,[],\\\"\\\"]\\n8:I[1699,[],\\\"\\\"]\\na:I[2579,[],\\\"\\\"]\\nb:I[3805,[\\\"805\\\",\\\"static/chunks/805-a8af350d35fb9160.js\\\",\\\"418\\\",\\\"static/chunks/app/posts/%5Bslug%5D/layout-1cf1294e1a2539f4.js\\\"],\\\"\\\"]\\nc:I[9618,[\\\"618\\\",\\\"static/chunks/618-f2bb34773a0d24b2.js\\\",\\\"991\\\",\\\"static/chunks/app/posts/page-e8c6275c8ebfad50.js\\\"],\\\"\\\"]\\nd:I[6210,[\\\"618\\\",\\\"static/chunks/618-f2bb34773a0d24b2.js\\\",\\\"372\\\",\\\"static/chunks/372-b649e69f56e8eb19.js\\\",\\\"185\\\",\\\"static/chunks/app/layout-c7fa40d911107206.js\\\"],\\\"BrandLogo\\\"]\\ne:I[9205,[\\\"618\\\",\\\"static/chunks/618-f2bb34773a0d24b2.js\\\",\\\"372\\\",\\\"static/chunks/372-b649e69f56e8eb19.js\\\",\\\"185\\\",\\\"static/chunks/app/layout-c7fa40d911107206.js\\\"],\\\"GlobalNavigationBar\\\"]\\n10:I[3141,[],\\\"\\\"]\\n9:[\\\"slug\\\",\\\"algorithm-1-2-merge-sort\\\",\\\"d\\\"]\\n11:[]\\n\"])</script><script>self.__next_f.push([1,\"0:[[[\\\"$\\\",\\\"link\\\",\\\"0\\\",{\\\"rel\\\":\\\"stylesheet\\\",\\\"href\\\":\\\"/next-blog/_next/static/css/16077bc16defb9b9.css\\\",\\\"precedence\\\":\\\"next\\\",\\\"crossOrigin\\\":\\\"$undefined\\\"}]],[\\\"$\\\",\\\"$L5\\\",null,{\\\"buildId\\\":\\\"FkDD4ed24GsUGsJlrpxW5\\\",\\\"assetPrefix\\\":\\\"/next-blog\\\",\\\"initialCanonicalUrl\\\":\\\"/posts/algorithm-1-2-merge-sort\\\",\\\"initialTree\\\":[\\\"\\\",{\\\"children\\\":[\\\"posts\\\",{\\\"children\\\":[[\\\"slug\\\",\\\"algorithm-1-2-merge-sort\\\",\\\"d\\\"],{\\\"children\\\":[\\\"__PAGE__?{\\\\\\\"slug\\\\\\\":\\\\\\\"algorithm-1-2-merge-sort\\\\\\\"}\\\",{}]}]}]},\\\"$undefined\\\",\\\"$undefined\\\",true],\\\"initialSeedData\\\":[\\\"\\\",{\\\"children\\\":[\\\"posts\\\",{\\\"children\\\":[[\\\"slug\\\",\\\"algorithm-1-2-merge-sort\\\",\\\"d\\\"],{\\\"children\\\":[\\\"__PAGE__\\\",{},[[\\\"$L6\\\",\\\"$L7\\\"],null],null]},[[[\\\"$\\\",\\\"$L8\\\",null,{\\\"parallelRouterKey\\\":\\\"children\\\",\\\"segmentPath\\\":[\\\"children\\\",\\\"posts\\\",\\\"children\\\",\\\"$9\\\",\\\"children\\\"],\\\"error\\\":\\\"$undefined\\\",\\\"errorStyles\\\":\\\"$undefined\\\",\\\"errorScripts\\\":\\\"$undefined\\\",\\\"template\\\":[\\\"$\\\",\\\"$La\\\",null,{}],\\\"templateStyles\\\":\\\"$undefined\\\",\\\"templateScripts\\\":\\\"$undefined\\\",\\\"notFound\\\":\\\"$undefined\\\",\\\"notFoundStyles\\\":\\\"$undefined\\\",\\\"styles\\\":null}],[\\\"$\\\",\\\"$Lb\\\",null,{\\\"src\\\":\\\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/prism.min.js\\\"}],[\\\"$\\\",\\\"$Lb\\\",null,{\\\"src\\\":\\\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-javascript.min.js\\\"}],[\\\"$\\\",\\\"$Lb\\\",null,{\\\"src\\\":\\\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-typescript.min.js\\\"}],[\\\"$\\\",\\\"$Lb\\\",null,{\\\"src\\\":\\\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-jsx.min.js\\\"}],[\\\"$\\\",\\\"$Lb\\\",null,{\\\"src\\\":\\\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-tsx.min.js\\\"}],[\\\"$\\\",\\\"$Lb\\\",null,{\\\"src\\\":\\\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-c.min.js\\\"}],[\\\"$\\\",\\\"$Lb\\\",null,{\\\"src\\\":\\\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/plugins/line-numbers/prism-line-numbers.min.js\\\"}]],null],null]},[\\\"$\\\",\\\"$L8\\\",null,{\\\"parallelRouterKey\\\":\\\"children\\\",\\\"segmentPath\\\":[\\\"children\\\",\\\"posts\\\",\\\"children\\\"],\\\"error\\\":\\\"$undefined\\\",\\\"errorStyles\\\":\\\"$undefined\\\",\\\"errorScripts\\\":\\\"$undefined\\\",\\\"template\\\":[\\\"$\\\",\\\"$La\\\",null,{}],\\\"templateStyles\\\":\\\"$undefined\\\",\\\"templateScripts\\\":\\\"$undefined\\\",\\\"notFound\\\":\\\"$undefined\\\",\\\"notFoundStyles\\\":\\\"$undefined\\\",\\\"styles\\\":[[\\\"$\\\",\\\"link\\\",\\\"0\\\",{\\\"rel\\\":\\\"stylesheet\\\",\\\"href\\\":\\\"/next-blog/_next/static/css/203da25389b4eeab.css\\\",\\\"precedence\\\":\\\"next\\\",\\\"crossOrigin\\\":\\\"$undefined\\\"}]]}],null]},[[\\\"$\\\",\\\"html\\\",null,{\\\"lang\\\":\\\"kr\\\",\\\"className\\\":\\\"__variable_fa65fd __variable_7691e4 scroll-smooth\\\",\\\"children\\\":[\\\"$\\\",\\\"body\\\",null,{\\\"className\\\":\\\"__className_fa65fd flex flex-col text-gray-800\\\",\\\"children\\\":[[\\\"$\\\",\\\"link\\\",null,{\\\"href\\\":\\\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/plugins/line-numbers/prism-line-numbers.min.css\\\",\\\"rel\\\":\\\"stylesheet\\\"}],[\\\"$\\\",\\\"header\\\",null,{\\\"className\\\":\\\"flex flex-row justify-center py-2 items-center self-center w-full max-w-screen-md px-4\\\",\\\"children\\\":[[\\\"$\\\",\\\"$Lc\\\",null,{\\\"href\\\":\\\"/\\\",\\\"children\\\":[\\\"$\\\",\\\"$Ld\\\",null,{\\\"height\\\":48}]}],[\\\"$\\\",\\\"div\\\",null,{\\\"className\\\":\\\"flex-1\\\"}],[\\\"$\\\",\\\"$Le\\\",null,{}]]}],[\\\"$\\\",\\\"main\\\",null,{\\\"className\\\":\\\"self-center w-full max-w-screen-md p-4 text-gray-800\\\",\\\"children\\\":[\\\"$\\\",\\\"$L8\\\",null,{\\\"parallelRouterKey\\\":\\\"children\\\",\\\"segmentPath\\\":[\\\"children\\\"],\\\"error\\\":\\\"$undefined\\\",\\\"errorStyles\\\":\\\"$undefined\\\",\\\"errorScripts\\\":\\\"$undefined\\\",\\\"template\\\":[\\\"$\\\",\\\"$La\\\",null,{}],\\\"templateStyles\\\":\\\"$undefined\\\",\\\"templateScripts\\\":\\\"$undefined\\\",\\\"notFound\\\":[\\\"$\\\",\\\"div\\\",null,{\\\"children\\\":[[\\\"$\\\",\\\"h2\\\",null,{\\\"children\\\":\\\"Not Found\\\"}],[\\\"$\\\",\\\"p\\\",null,{\\\"children\\\":\\\"Could not find requested resource\\\"}],[\\\"$\\\",\\\"$Lc\\\",null,{\\\"href\\\":\\\"/\\\",\\\"children\\\":\\\"Return Home\\\"}]]}],\\\"notFoundStyles\\\":[],\\\"styles\\\":null}]}],[\\\"$\\\",\\\"footer\\\",null,{\\\"className\\\":\\\"self-center w-full max-w-screen-md px-4 h-96\\\",\\\"children\\\":[\\\"$\\\",\\\"p\\\",null,{\\\"children\\\":[\\\"© 2024-\\\",2024,\\\" \\\",\\\"dev2820\\\",\\\". All rights reserved.\\\"]}]}]]}]}],null],null],\\\"couldBeIntercepted\\\":false,\\\"initialHead\\\":[null,\\\"$Lf\\\"],\\\"globalErrorComponent\\\":\\\"$10\\\",\\\"missingSlots\\\":\\\"$W11\\\"}]]\\n\"])</script><script>self.__next_f.push([1,\"12:I[2870,[\\\"587\\\",\\\"static/chunks/952ad60e-7cdac7b6bf36214c.js\\\",\\\"618\\\",\\\"static/chunks/618-f2bb34773a0d24b2.js\\\",\\\"372\\\",\\\"static/chunks/372-b649e69f56e8eb19.js\\\",\\\"805\\\",\\\"static/chunks/805-a8af350d35fb9160.js\\\",\\\"333\\\",\\\"static/chunks/app/posts/%5Bslug%5D/page-e951164d6ad6c144.js\\\"],\\\"TableOfContents\\\"]\\n13:I[6894,[\\\"587\\\",\\\"static/chunks/952ad60e-7cdac7b6bf36214c.js\\\",\\\"618\\\",\\\"static/chunks/618-f2bb34773a0d24b2.js\\\",\\\"372\\\",\\\"static/chunks/372-b649e69f56e8eb19.js\\\",\\\"805\\\",\\\"static/chunks/805-a8af350d35fb9160.js\\\",\\\"333\\\",\\\"static/chunks/app/posts/%5Bslug%5D/page-e951164d6ad6c144.js\\\"],\\\"Anchor\\\"]\\n14:I[5969,[\\\"587\\\",\\\"static/chunks/952ad60e-7cdac7b6bf36214c.js\\\",\\\"618\\\",\\\"static/chunks/618-f2bb34773a0d24b2.js\\\",\\\"372\\\",\\\"static/chunks/372-b649e69f56e8eb19.js\\\",\\\"805\\\",\\\"static/chunks/805-a8af350d35fb9160.js\\\",\\\"333\\\",\\\"static/chunks/app/posts/%5Bslug%5D/page-e951164d6ad6c144.js\\\"],\\\"Image\\\"]\\n15:I[4547,[\\\"587\\\",\\\"static/chunks/952ad60e-7cdac7b6bf36214c.js\\\",\\\"618\\\",\\\"static/chunks/618-f2bb34773a0d24b2.js\\\",\\\"372\\\",\\\"static/chunks/372-b649e69f56e8eb19.js\\\",\\\"805\\\",\\\"static/chunks/805-a8af350d35fb9160.js\\\",\\\"333\\\",\\\"static/chunks/app/posts/%5Bslug%5D/page-e951164d6ad6c144.js\\\"],\\\"ShareButton\\\"]\\n16:I[6398,[\\\"587\\\",\\\"static/chunks/952ad60e-7cdac7b6bf36214c.js\\\",\\\"618\\\",\\\"static/chunks/618-f2bb34773a0d24b2.js\\\",\\\"372\\\",\\\"static/chunks/372-b649e69f56e8eb19.js\\\",\\\"805\\\",\\\"static/chunks/805-a8af350d35fb9160.js\\\",\\\"333\\\",\\\"static/chunks/app/posts/%5Bslug%5D/page-e951164d6ad6c144.js\\\"],\\\"AuthorInfo\\\"]\\n\"])</script><script>self.__next_f.push([1,\"7:[\\\"$\\\",\\\"article\\\",null,{\\\"className\\\":\\\"relative\\\",\\\"children\\\":[[\\\"$\\\",\\\"header\\\",null,{\\\"id\\\":\\\"post-meta\\\",\\\"children\\\":[\\\"$undefined\\\",[\\\"$\\\",\\\"h1\\\",null,{\\\"className\\\":\\\"mt-10 mb-4 text-heading1 font-bold leading-normal\\\",\\\"id\\\":\\\"algorithm-1-2-merge-sort\\\",\\\"children\\\":\\\"algorithm-1-2-merge-sort\\\"}],[\\\"$\\\",\\\"time\\\",null,{\\\"dateTime\\\":\\\"2024-03-31\\\",\\\"aria-label\\\":\\\"Published on 2024-03-31\\\",\\\"children\\\":\\\"2024-03-31\\\"}],\\\" \\\",\\\"|\\\",\\\" \\\",[\\\"$\\\",\\\"time\\\",null,{\\\"dateTime\\\":\\\"PT2M\\\",\\\"aria-label\\\":\\\"Estimated reading time\\\",\\\"children\\\":[2,\\\" mins\\\"]}]]}],[\\\"$\\\",\\\"div\\\",null,{\\\"id\\\":\\\"content\\\",\\\"className\\\":\\\"relative\\\",\\\"children\\\":[[\\\"$\\\",\\\"div\\\",null,{\\\"id\\\":\\\"table-of-header\\\",\\\"className\\\":\\\"absolute -right-12 translate-x-full h-full w-52 desktop:block hidden\\\",\\\"children\\\":[\\\"$\\\",\\\"$L12\\\",null,{\\\"toc\\\":[{\\\"level\\\":2,\\\"content\\\":\\\"합병 정렬의 절차\\\",\\\"slug\\\":\\\"#합병-정렬의-절차\\\"},{\\\"level\\\":2,\\\"content\\\":\\\"합병 정렬의 복잡도\\\",\\\"slug\\\":\\\"#합병-정렬의-복잡도\\\"},{\\\"level\\\":3,\\\"content\\\":\\\"시간복잡도\\\",\\\"slug\\\":\\\"#시간복잡도\\\"},{\\\"level\\\":3,\\\"content\\\":\\\"공간복잡도\\\",\\\"slug\\\":\\\"#공간복잡도\\\"},{\\\"level\\\":2,\\\"content\\\":\\\"javascript 구현\\\",\\\"slug\\\":\\\"#javascript-구현\\\"},{\\\"level\\\":2,\\\"content\\\":\\\"3분할, 4분할도 가능할까? k-way merge sort\\\",\\\"slug\\\":\\\"#3분할-4분할도-가능할까-k-way-merge-sort\\\"},{\\\"level\\\":3,\\\"content\\\":\\\"k-way merge sort의 시간복잡도\\\",\\\"slug\\\":\\\"#k-way-merge-sort의-시간복잡도\\\"},{\\\"level\\\":3,\\\"content\\\":\\\"k-way merge sort의 사용\\\",\\\"slug\\\":\\\"#k-way-merge-sort의-사용\\\"},{\\\"level\\\":2,\\\"content\\\":\\\"추가적인 생각거리\\\",\\\"slug\\\":\\\"#추가적인-생각거리\\\"}],\\\"className\\\":\\\"sticky top-24\\\"}]}],[\\\"$\\\",\\\"section\\\",null,{\\\"aria-labelledby\\\":\\\"12-합병-정렬-merge-sort\\\",\\\"children\\\":[[\\\"$\\\",\\\"h1\\\",null,{\\\"className\\\":\\\"mt-10 mb-4 text-heading1 font-bold leading-normal\\\",\\\"id\\\":\\\"12-합병-정렬-merge-sort\\\",\\\"children\\\":[[\\\"$\\\",\\\"$L13\\\",null,{\\\"aria-hidden\\\":\\\"true\\\",\\\"tabIndex\\\":\\\"-1\\\",\\\"href\\\":\\\"#12-합병-정렬-merge-sort\\\",\\\"children\\\":[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"icon icon-link\\\"}]}],\\\"1.2 합병 정렬 (Merge Sort)\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":[[\\\"$\\\",\\\"$L14\\\",null,{\\\"className\\\":\\\"object-cover rounded-md mx-auto my-12 w-full max-w-[704px]\\\",\\\"src\\\":\\\"/next-blog/posts/algorithm-1-2-merge-sort/https:/upload.wikimedia.org/wikipedia/commons/c/cc/Merge-sort-example-300px.gif\\\",\\\"alt\\\":\\\"합병 정렬\\\",\\\"width\\\":704,\\\"height\\\":300}],[\\\"$\\\",\\\"br\\\",null,{}],\\\"\\\\n\\\",\\\"출처: \\\",[\\\"$\\\",\\\"$L13\\\",null,{\\\"href\\\":\\\"https://ko.wikipedia.org/wiki/%ED%95%A9%EB%B3%91_%EC%A0%95%EB%A0%AC\\\",\\\"children\\\":\\\"https://ko.wikipedia.org/wiki/%ED%95%A9%EB%B3%91_%EC%A0%95%EB%A0%AC\\\"}]]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"우리가 흔히 알고있는 합병 정렬은 쌍방 합병(two-way merging)을 이용한다. 쌍방 합병은 정렬된 두 개의 배열을 정렬상태를 유지하며 하나로 합치는 것을 의미한다.\\\"}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"합병 정렬의 키 포인트는 배열을 절반씩 정렬하고 합치면 전체를 정렬할 수 있다는 것, 즉 정렬 문제가 작은 정렬 문제로 분할된다는 것이다.\\\"}],[\\\"$\\\",\\\"section\\\",null,{\\\"aria-labelledby\\\":\\\"합병-정렬의-절차\\\",\\\"children\\\":[[\\\"$\\\",\\\"h2\\\",null,{\\\"className\\\":\\\"mt-8 mb-3 text-heading2 font-semibold leading-normal\\\",\\\"id\\\":\\\"합병-정렬의-절차\\\",\\\"children\\\":[[\\\"$\\\",\\\"$L13\\\",null,{\\\"aria-hidden\\\":\\\"true\\\",\\\"tabIndex\\\":\\\"-1\\\",\\\"href\\\":\\\"#합병-정렬의-절차\\\",\\\"children\\\":[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"icon icon-link\\\"}]}],\\\"합병 정렬의 절차\\\"]}],[\\\"$\\\",\\\"ol\\\",null,{\\\"className\\\":\\\"list-decimal my-4\\\",\\\"children\\\":[\\\"\\\\n\\\",[\\\"$\\\",\\\"li\\\",null,{\\\"className\\\":\\\"text-paragraph font-light leading-normal py-1 ml-6\\\",\\\"children\\\":\\\"분할: 배열을 반으로 분할한다.\\\"}],\\\"\\\\n\\\",[\\\"$\\\",\\\"li\\\",null,{\\\"className\\\":\\\"text-paragraph font-light leading-normal py-1 ml-6\\\",\\\"children\\\":\\\"정복: 각 배열을 정렬한다.\\\"}],\\\"\\\\n\\\",[\\\"$\\\",\\\"li\\\",null,{\\\"className\\\":\\\"text-paragraph font-light leading-normal py-1 ml-6\\\",\\\"children\\\":\\\"취합: 정렬된 두 배열을 합병한다.\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"pre\\\",null,{\\\"className\\\":\\\"rounded-md [\\u0026_code]:py-0 [\\u0026_code]:px-0 line-numbers language-js\\\",\\\"children\\\":[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2 language-js\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token comment\\\",\\\"children\\\":\\\"// 수도코드\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token function\\\",\\\"children\\\":\\\"mergeSort\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token parameter\\\",\\\"children\\\":\\\"arr\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"{\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  arr1 \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" arr\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\".\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token method function property-access\\\",\\\"children\\\":\\\"slice\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"0\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],\\\" arr\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\".\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token property-access\\\",\\\"children\\\":\\\"length\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"/\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"2\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  arr2 \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" arr\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\".\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token method function property-access\\\",\\\"children\\\":\\\"slice\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"arr\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\".\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token property-access\\\",\\\"children\\\":\\\"length\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"/\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"2\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  sortedArr1 \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token function\\\",\\\"children\\\":\\\"mergeSort\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"arr1\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  sortedArr2 \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token function\\\",\\\"children\\\":\\\"mergeSort\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"arr2\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token function\\\",\\\"children\\\":\\\"merge\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"sortedArr1\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],\\\" sortedArr2\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"}\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token function\\\",\\\"children\\\":\\\"merge\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token parameter\\\",\\\"children\\\":[\\\"arr1\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],\\\"arr2\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"{\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  result \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"[\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"]\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  i \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"0\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\" j \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"0\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token comment\\\",\\\"children\\\":\\\"// i와 j는 각각 arr1,arr2를 순회할 때 사용할 인덱스\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token comment\\\",\\\"children\\\":\\\"// 한쪽 배열을 모두 순회할 때까지 result에 작은 수를 찾아 넣는다.\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword control-flow\\\",\\\"children\\\":\\\"while\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token function\\\",\\\"children\\\":\\\"isNotEmpty\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"arr1\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"\\u0026\\u0026\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token function\\\",\\\"children\\\":\\\"isNotEmpty\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"arr2\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"{\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"    \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword control-flow\\\",\\\"children\\\":\\\"if\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"i \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"\\u003e\\\"}],\\\" arr1\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\".\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token property-access\\\",\\\"children\\\":\\\"length\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"||\\\"}],\\\" j \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"\\u003e\\\"}],\\\" arr2\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\".\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token property-access\\\",\\\"children\\\":\\\"length\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"{\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"      \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword control-flow\\\",\\\"children\\\":\\\"break\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"    \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"}\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"    \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword control-flow\\\",\\\"children\\\":\\\"if\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"arr1\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"[\\\"}],\\\"i\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"]\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"\\u003c\\\"}],\\\" arr2\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"[\\\"}],\\\"j\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"]\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"{\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"      result\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\".\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token method function property-access\\\",\\\"children\\\":\\\"push\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"arr1\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"[\\\"}],\\\"i\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"]\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"      i\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"++\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"    \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"}\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"    \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword control-flow\\\",\\\"children\\\":\\\"else\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword control-flow\\\",\\\"children\\\":\\\"if\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"arr1\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"[\\\"}],\\\"i\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"]\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"\\u003e=\\\"}],\\\" arr2\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"[\\\"}],\\\"j\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"]\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"{\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"      result\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\".\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token method function property-access\\\",\\\"children\\\":\\\"push\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"arr2\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"[\\\"}],\\\"j\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"]\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"      j\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"++\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"    \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"}\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"}\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token comment\\\",\\\"children\\\":\\\"// 배열의 남은 원소를 이어 붙인다.\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  result\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\".\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token method function property-access\\\",\\\"children\\\":\\\"push\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"arr1\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\".\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token method function property-access\\\",\\\"children\\\":\\\"slice\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"i\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],\\\"arr1\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\".\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token property-access\\\",\\\"children\\\":\\\"length\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  result\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\".\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token method function property-access\\\",\\\"children\\\":\\\"push\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"arr2\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\".\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token method function property-access\\\",\\\"children\\\":\\\"slice\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"j\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],\\\"arr2\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\".\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token property-access\\\",\\\"children\\\":\\\"length\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword control-flow\\\",\\\"children\\\":\\\"return\\\"}],\\\" result\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"}\\\"}],\\\"\\\\n\\\"]}]]}]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"8개의 임의의 원소를 정렬하는 경우를 살펴보자.\\\"}],[\\\"$\\\",\\\"blockquote\\\",null,{\\\"className\\\":\\\"my-4 border-l-4 border-primary p-6 bg-gray-100 text-gray-700 [\\u0026_*:first-child]:mt-0 [\\u0026_*:last-child]:mb-0\\\",\\\"children\\\":[\\\"\\\\n\\\",[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"6 5 3 1 8 7 2 4\\\"}],\\\"\\\\n\\\",[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":[\\\"배열을 둘로 쪼갠다.\\\",[\\\"$\\\",\\\"br\\\",null,{}],\\\"\\\\n\\\",\\\"[6 5 3 1]\\\",[\\\"$\\\",\\\"br\\\",null,{}],\\\"\\\\n\\\",\\\"[8 7 2 4]\\\"]}],\\\"\\\\n\\\",[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":[\\\"분할한 각 배열을 정렬한다.\\\",[\\\"$\\\",\\\"br\\\",null,{}],\\\"\\\\n\\\",\\\"[1 3 5 6]\\\",[\\\"$\\\",\\\"br\\\",null,{}],\\\"\\\\n\\\",\\\"[2 4 7 8]\\\"]}],\\\"\\\\n\\\",[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"두 배열을 앞에서부터 순회하며 작은 값을 배열에 합친다.\\\"}],\\\"\\\\n\\\",[\\\"$\\\",\\\"ol\\\",null,{\\\"className\\\":\\\"list-decimal my-4\\\",\\\"children\\\":[\\\"\\\\n\\\",[\\\"$\\\",\\\"li\\\",null,{\\\"className\\\":\\\"text-paragraph font-light leading-normal py-1 ml-6\\\",\\\"children\\\":\\\"1이 2보다 작기 때문에 1을 넣는다. ([_ 3 5 6] [2 4 7 8])\\\"}],\\\"\\\\n\\\",[\\\"$\\\",\\\"li\\\",null,{\\\"className\\\":\\\"text-paragraph font-light leading-normal py-1 ml-6\\\",\\\"children\\\":\\\"2가 3보다 작기 때문에 2를 넣는다. ([_ 3 5 6] [_ 4 7 8])\\\"}],\\\"\\\\n\\\",[\\\"$\\\",\\\"li\\\",null,{\\\"className\\\":\\\"text-paragraph font-light leading-normal py-1 ml-6\\\",\\\"children\\\":\\\"3이 4보다 작기 때문에 3을 넣는다. ([_ _ 5 6] [_ 4 7 8])\\\"}],\\\"\\\\n\\\",[\\\"$\\\",\\\"li\\\",null,{\\\"className\\\":\\\"text-paragraph font-light leading-normal py-1 ml-6\\\",\\\"children\\\":\\\"4가 5보다 작기 때문에 4를 넣는다. ([_ _ 5 6] [_ _ 7 8])\\\"}],\\\"\\\\n\\\",[\\\"$\\\",\\\"li\\\",null,{\\\"className\\\":\\\"text-paragraph font-light leading-normal py-1 ml-6\\\",\\\"children\\\":\\\"5가 7보다 작기 때문에 5를 넣는다. ([_ _ _ 6] [_ _ 7 8])\\\"}],\\\"\\\\n\\\",[\\\"$\\\",\\\"li\\\",null,{\\\"className\\\":\\\"text-paragraph font-light leading-normal py-1 ml-6\\\",\\\"children\\\":[\\\"6이 7보다 작기 때문에 6을 넣는다. ([_ _ _ \\\",[\\\"$\\\",\\\"em\\\",null,{\\\"className\\\":\\\"[img+\\u0026]:block [img+\\u0026]:text-center [img+\\u0026]:text-gray-400 [img+\\u0026]:font-thin [img+\\u0026]:not-italic [img+\\u0026]:text-sm [img+\\u0026]:-translate-y-10\\\",\\\"children\\\":\\\"] [\\\"}],\\\" _ 7 8])\\\"]}],\\\"\\\\n\\\",[\\\"$\\\",\\\"li\\\",null,{\\\"className\\\":\\\"text-paragraph font-light leading-normal py-1 ml-6\\\",\\\"children\\\":[\\\"한쪽 배열이 비었기 때문에 다른 한 쪽을 뒤에 붙인다.\\\",[\\\"$\\\",\\\"br\\\",null,{}],\\\"\\\\n\\\",\\\"...\\\"]}],\\\"\\\\n\\\"]}],\\\"\\\\n\\\",[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"이렇게 하면 정렬된 배열을 얻을 수 있다.\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"쪼갠 두 배열의 길이가 같아야할 필요는 없다. 즉, 홀수여도 병합할 수 있다.\\\"}]]}],[\\\"$\\\",\\\"section\\\",null,{\\\"aria-labelledby\\\":\\\"합병-정렬의-복잡도\\\",\\\"children\\\":[[\\\"$\\\",\\\"h2\\\",null,{\\\"className\\\":\\\"mt-8 mb-3 text-heading2 font-semibold leading-normal\\\",\\\"id\\\":\\\"합병-정렬의-복잡도\\\",\\\"children\\\":[[\\\"$\\\",\\\"$L13\\\",null,{\\\"aria-hidden\\\":\\\"true\\\",\\\"tabIndex\\\":\\\"-1\\\",\\\"href\\\":\\\"#합병-정렬의-복잡도\\\",\\\"children\\\":[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"icon icon-link\\\"}]}],\\\"합병 정렬의 복잡도\\\"]}],[\\\"$\\\",\\\"section\\\",null,{\\\"aria-labelledby\\\":\\\"시간복잡도\\\",\\\"children\\\":[[\\\"$\\\",\\\"h3\\\",null,{\\\"className\\\":\\\"mt-7 mb-2 text-heading3 font-semibold leading-normal\\\",\\\"id\\\":\\\"시간복잡도\\\",\\\"children\\\":[[\\\"$\\\",\\\"$L13\\\",null,{\\\"aria-hidden\\\":\\\"true\\\",\\\"tabIndex\\\":\\\"-1\\\",\\\"href\\\":\\\"#시간복잡도\\\",\\\"children\\\":[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"icon icon-link\\\"}]}],\\\"시간복잡도\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"정렬에서 시간복잡도를 구할 때 보통 단위 연산을 비교 횟수로 잡는다.\\\"}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"먼저 합병을 할 때의 시간복잡도를 계산해보자.\\\"}],[\\\"$\\\",\\\"pre\\\",null,{\\\"className\\\":\\\"rounded-md [\\u0026_code]:py-0 [\\u0026_code]:px-0 line-numbers language-js\\\",\\\"children\\\":[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2 language-js\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"두 배열의 길이가 각각 h\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],\\\"m일 때\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"비교 연산은 최악의 경우 \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token template-string\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token template-punctuation string\\\",\\\"children\\\":\\\"`\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token string\\\",\\\"children\\\":\\\"W(h,m) = h + m - 1\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token template-punctuation string\\\",\\\"children\\\":\\\"`\\\"}]]}],\\\"이다\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\".\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token property-access\\\",\\\"children\\\":\\\"h\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"4\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],\\\" m\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"4\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"m\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"5\\\"}],\\\"일때도 동일하다\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" 일 때 총 \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"8\\\"}],\\\"번의 비교가 일어난다\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\".\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token property-access\\\",\\\"children\\\":\\\"병합\\\"}],\\\" 정렬을 하게 되면 최악의 경우는 다음과 같다\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\".\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token constant\\\",\\\"children\\\":\\\"W\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"n\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token constant\\\",\\\"children\\\":\\\"W\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"h\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"+\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token constant\\\",\\\"children\\\":\\\"W\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"m\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"+\\\"}],\\\" h \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"+\\\"}],\\\" m \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"-\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"1\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"n이 거듭제곱인 경우 h \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" m \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" n\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"/\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"2\\\"}],\\\"가 된다\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\".\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token property-access\\\",\\\"children\\\":\\\"따라서\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token constant\\\",\\\"children\\\":\\\"W\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"n\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token constant\\\",\\\"children\\\":\\\"W\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"n\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"/\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"2\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"+\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token constant\\\",\\\"children\\\":\\\"W\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"n\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"/\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"2\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"+\\\"}],\\\" n \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"-\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"1\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token constant\\\",\\\"children\\\":\\\"W\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"n\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"2\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"*\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token constant\\\",\\\"children\\\":\\\"W\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"n\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"/\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"2\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"+\\\"}],\\\" n \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"-\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"1\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"배열의 길이가 \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"1\\\"}],\\\"인 경우 비교는 없기 때문에 \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token constant\\\",\\\"children\\\":\\\"W\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"1\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"0\\\"}],\\\" 이다\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\".\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token property-access\\\",\\\"children\\\":\\\"귀납법으로\\\"}],\\\" 증명해보자\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\".\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token property-access\\\",\\\"children\\\":\\\"반복\\\"}],\\\" 대치를 해보면\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token constant\\\",\\\"children\\\":\\\"W\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"n\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"/\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"2\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"2\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"*\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token constant\\\",\\\"children\\\":\\\"W\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"n\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"/\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"4\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"+\\\"}],\\\" n\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"/\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"2\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"-\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"1\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token constant\\\",\\\"children\\\":\\\"W\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"n\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"/\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"4\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"2\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"*\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token constant\\\",\\\"children\\\":\\\"W\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"n\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"/\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"8\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"+\\\"}],\\\" n\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"/\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"4\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"-\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"1\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token constant\\\",\\\"children\\\":\\\"W\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"n\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"2\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"*\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token constant\\\",\\\"children\\\":\\\"W\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"n\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"/\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"2\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"+\\\"}],\\\" n \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"-\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"1\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"2\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"*\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"2\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"*\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token constant\\\",\\\"children\\\":\\\"W\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"n\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"/\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"4\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"+\\\"}],\\\" n\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"/\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"2\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"-\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"1\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"+\\\"}],\\\" n \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"-\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"1\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"4\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"*\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token constant\\\",\\\"children\\\":\\\"W\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"n\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"/\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"4\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"+\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"2n\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"-\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"3\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"4\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"*\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"2\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"*\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token constant\\\",\\\"children\\\":\\\"W\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"n\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"/\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"8\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"+\\\"}],\\\" n\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"/\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"4\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"-\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"1\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"+\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"2n\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"-\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"3\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"8\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"*\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token constant\\\",\\\"children\\\":\\\"W\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"n\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"/\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"8\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"+\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"3n\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"-\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"7\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token spread operator\\\",\\\"children\\\":\\\"...\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"2\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"^\\\"}],\\\"k \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"*\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token constant\\\",\\\"children\\\":\\\"W\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"n\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"/\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"2\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"^\\\"}],\\\"k\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"+\\\"}],\\\" kn \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"-\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"2\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"^\\\"}],\\\"k \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"-\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"1\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"k가 logn 일때\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token constant\\\",\\\"children\\\":\\\"W\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"n\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" n \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"*\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token constant\\\",\\\"children\\\":\\\"W\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"1\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"+\\\"}],\\\" n\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"*\\\"}],\\\"logn \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"-\\\"}],\\\" n \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"+\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"1\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" n\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"*\\\"}],\\\"logn \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"-\\\"}],\\\" n \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"+\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"1\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token constant\\\",\\\"children\\\":\\\"O\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"nlogn\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\"\\\\n\\\"]}]]}]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":[\\\"병합 정렬은 항상 배열을 반으로 나누어 재귀적으로 비교하기 때문에 최선의 시간복잡도와 평균 시간복잡도도 \\\",[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\\\",\\\"children\\\":\\\"nlog(n)\\\"}],\\\"으로 같다.\\\"]}]]}],[\\\"$\\\",\\\"section\\\",null,{\\\"aria-labelledby\\\":\\\"공간복잡도\\\",\\\"children\\\":[[\\\"$\\\",\\\"h3\\\",null,{\\\"className\\\":\\\"mt-7 mb-2 text-heading3 font-semibold leading-normal\\\",\\\"id\\\":\\\"공간복잡도\\\",\\\"children\\\":[[\\\"$\\\",\\\"$L13\\\",null,{\\\"aria-hidden\\\":\\\"true\\\",\\\"tabIndex\\\":\\\"-1\\\",\\\"href\\\":\\\"#공간복잡도\\\",\\\"children\\\":[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"icon icon-link\\\"}]}],\\\"공간복잡도\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"병합 정렬은 제자리정렬(in-place sort)가 아니다. 그 말인 즉슨, n개의 배열이 주어지면 2n의 공간이 필요하다는 뜻이다.\\\\n쉽게 생각해보면 n개의 배열을 정렬하기 위해선 n/2 배열 2개를 정렬하고 병합하는 과정에서 n만큼의 공간을 더 사용한다.\\\"}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":[\\\"따라서 공간복잡도는 \\\",[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\\\",\\\"children\\\":\\\"2n\\\"}],\\\"이다.\\\"]}]]}]]}],[\\\"$\\\",\\\"section\\\",null,{\\\"aria-labelledby\\\":\\\"javascript-구현\\\",\\\"children\\\":[[\\\"$\\\",\\\"h2\\\",null,{\\\"className\\\":\\\"mt-8 mb-3 text-heading2 font-semibold leading-normal\\\",\\\"id\\\":\\\"javascript-구현\\\",\\\"children\\\":[[\\\"$\\\",\\\"$L13\\\",null,{\\\"aria-hidden\\\":\\\"true\\\",\\\"tabIndex\\\":\\\"-1\\\",\\\"href\\\":\\\"#javascript-구현\\\",\\\"children\\\":[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"icon icon-link\\\"}]}],\\\"javascript 구현\\\"]}],[\\\"$\\\",\\\"pre\\\",null,{\\\"className\\\":\\\"rounded-md [\\u0026_code]:py-0 [\\u0026_code]:px-0 line-numbers language-js\\\",\\\"children\\\":[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2 language-js\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword\\\",\\\"children\\\":\\\"function\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token function\\\",\\\"children\\\":\\\"mergeSort\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token parameter\\\",\\\"children\\\":\\\"arr\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"{\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token comment\\\",\\\"children\\\":\\\"// 배열의 길이가 1 이하인 경우 정렬이 불필요하므로 그대로 반환\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword control-flow\\\",\\\"children\\\":\\\"if\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"arr\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\".\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token property-access\\\",\\\"children\\\":\\\"length\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"\\u003c=\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"1\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"{\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"    \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword control-flow\\\",\\\"children\\\":\\\"return\\\"}],\\\" arr\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"}\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token comment\\\",\\\"children\\\":\\\"// 배열을 반으로 나누기\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword\\\",\\\"children\\\":\\\"const\\\"}],\\\" mid \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token known-class-name class-name\\\",\\\"children\\\":\\\"Math\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\".\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token method function property-access\\\",\\\"children\\\":\\\"floor\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"arr\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\".\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token property-access\\\",\\\"children\\\":\\\"length\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"/\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"2\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword\\\",\\\"children\\\":\\\"const\\\"}],\\\" left \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" arr\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\".\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token method function property-access\\\",\\\"children\\\":\\\"slice\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"0\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],\\\" mid\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword\\\",\\\"children\\\":\\\"const\\\"}],\\\" right \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" arr\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\".\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token method function property-access\\\",\\\"children\\\":\\\"slice\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"mid\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token comment\\\",\\\"children\\\":\\\"// 재귀적으로 반으로 나눈 부분 배열을 정렬\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword\\\",\\\"children\\\":\\\"const\\\"}],\\\" sortedLeft \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token function\\\",\\\"children\\\":\\\"mergeSort\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"left\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword\\\",\\\"children\\\":\\\"const\\\"}],\\\" sortedRight \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token function\\\",\\\"children\\\":\\\"mergeSort\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"right\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token comment\\\",\\\"children\\\":\\\"// 두 부분 배열을 병합하여 정렬된 배열 반환\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword control-flow\\\",\\\"children\\\":\\\"return\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token function\\\",\\\"children\\\":\\\"merge\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"sortedLeft\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],\\\" sortedRight\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"}\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword\\\",\\\"children\\\":\\\"function\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token function\\\",\\\"children\\\":\\\"merge\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token parameter\\\",\\\"children\\\":[\\\"left\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],\\\" right\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"{\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword\\\",\\\"children\\\":\\\"let\\\"}],\\\" result \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"[\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"]\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword\\\",\\\"children\\\":\\\"let\\\"}],\\\" leftIndex \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"0\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword\\\",\\\"children\\\":\\\"let\\\"}],\\\" rightIndex \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"0\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token comment\\\",\\\"children\\\":\\\"// 두 부분 배열을 비교하여 작은 값을 결과 배열에 삽입\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword control-flow\\\",\\\"children\\\":\\\"while\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"leftIndex \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"\\u003c\\\"}],\\\" left\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\".\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token property-access\\\",\\\"children\\\":\\\"length\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"\\u0026\\u0026\\\"}],\\\" rightIndex \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"\\u003c\\\"}],\\\" right\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\".\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token property-access\\\",\\\"children\\\":\\\"length\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"{\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"    \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword control-flow\\\",\\\"children\\\":\\\"if\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"left\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"[\\\"}],\\\"leftIndex\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"]\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"\\u003c\\\"}],\\\" right\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"[\\\"}],\\\"rightIndex\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"]\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"{\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"      result\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\".\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token method function property-access\\\",\\\"children\\\":\\\"push\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"left\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"[\\\"}],\\\"leftIndex\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"]\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"      leftIndex\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"++\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"    \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"}\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword control-flow\\\",\\\"children\\\":\\\"else\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"{\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"      result\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\".\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token method function property-access\\\",\\\"children\\\":\\\"push\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"right\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"[\\\"}],\\\"rightIndex\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"]\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"      rightIndex\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"++\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"    \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"}\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"}\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token comment\\\",\\\"children\\\":\\\"// 남은 요소들을 결과 배열에 추가\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword control-flow\\\",\\\"children\\\":\\\"while\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"leftIndex \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"\\u003c\\\"}],\\\" left\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\".\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token property-access\\\",\\\"children\\\":\\\"length\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"{\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"    result\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\".\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token method function property-access\\\",\\\"children\\\":\\\"push\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"left\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"[\\\"}],\\\"leftIndex\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"]\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"    leftIndex\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"++\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"}\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword control-flow\\\",\\\"children\\\":\\\"while\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"rightIndex \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"\\u003c\\\"}],\\\" right\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\".\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token property-access\\\",\\\"children\\\":\\\"length\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"{\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"    result\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\".\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token method function property-access\\\",\\\"children\\\":\\\"push\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"right\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"[\\\"}],\\\"rightIndex\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"]\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"    rightIndex\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"++\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"}\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword control-flow\\\",\\\"children\\\":\\\"return\\\"}],\\\" result\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"}\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token comment\\\",\\\"children\\\":\\\"// 테스트를 위한 예시 배열\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword\\\",\\\"children\\\":\\\"const\\\"}],\\\" array \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"[\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"3\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"1\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"4\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"1\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"5\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"9\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"2\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"6\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"5\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"3\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"5\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"]\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token comment\\\",\\\"children\\\":\\\"// 머지 소트를 이용해 배열 정렬\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword\\\",\\\"children\\\":\\\"const\\\"}],\\\" sortedArray \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token function\\\",\\\"children\\\":\\\"mergeSort\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"array\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token console class-name\\\",\\\"children\\\":\\\"console\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\".\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token method function property-access\\\",\\\"children\\\":\\\"log\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token string\\\",\\\"children\\\":\\\"\\\\\\\"Sorted array:\\\\\\\"\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],\\\" sortedArray\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}]]}]}]]}],[\\\"$\\\",\\\"section\\\",null,{\\\"aria-labelledby\\\":\\\"3분할-4분할도-가능할까-k-way-merge-sort\\\",\\\"children\\\":[[\\\"$\\\",\\\"h2\\\",null,{\\\"className\\\":\\\"mt-8 mb-3 text-heading2 font-semibold leading-normal\\\",\\\"id\\\":\\\"3분할-4분할도-가능할까-k-way-merge-sort\\\",\\\"children\\\":[[\\\"$\\\",\\\"$L13\\\",null,{\\\"aria-hidden\\\":\\\"true\\\",\\\"tabIndex\\\":\\\"-1\\\",\\\"href\\\":\\\"#3분할-4분할도-가능할까-k-way-merge-sort\\\",\\\"children\\\":[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"icon icon-link\\\"}]}],\\\"3분할, 4분할도 가능할까? k-way merge sort\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"앞서 설명한 모든 내용은 two-way merge를 기반으로 했다. 그렇다면 three-way, four-way도 가능할까?\\\"}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"물론 가능하다. 이들을 k-way merge라고 한다.\\\"}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":[\\\"$\\\",\\\"$L14\\\",null,{\\\"className\\\":\\\"object-cover rounded-md mx-auto my-12 w-full max-w-[704px]\\\",\\\"src\\\":\\\"/next-blog/posts/algorithm-1-2-merge-sort/https:/image3.slideserve.com/5605436/of-comparisons-k-way-merge-l.jpg\\\",\\\"alt\\\":\\\"k-way merge sort\\\",\\\"width\\\":704,\\\"height\\\":300}]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":[\\\"출처: \\\",[\\\"$\\\",\\\"$L13\\\",null,{\\\"href\\\":\\\"https://www.slideserve.com/lamond/8-external-sorting\\\",\\\"children\\\":\\\"https://www.slideserve.com/lamond/8-external-sorting\\\"}],\\\"\\\\n수도코드는 다음과 같다.\\\"]}],[\\\"$\\\",\\\"pre\\\",null,{\\\"className\\\":\\\"rounded-md [\\u0026_code]:py-0 [\\u0026_code]:px-0 line-numbers language-js\\\",\\\"children\\\":[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2 language-js\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token comment\\\",\\\"children\\\":\\\"// k-way merge\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token function\\\",\\\"children\\\":\\\"mergeSort\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token parameter\\\",\\\"children\\\":\\\"arr\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"{\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  subArrays \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"[\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"]\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  subArrayLen \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" arr\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\".\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token property-access\\\",\\\"children\\\":\\\"length\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"/\\\"}],\\\" k\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword control-flow\\\",\\\"children\\\":\\\"for\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"i\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"0\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"i\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"\\u003c\\\"}],\\\"k\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"i\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"++\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"{\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"    subArray \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" arr\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\".\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token method function property-access\\\",\\\"children\\\":\\\"slice\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"i\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"*\\\"}],\\\"subArrayLen\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"i\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"+\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"1\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"*\\\"}],\\\"subArrayLen\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"    \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token function\\\",\\\"children\\\":\\\"mergeSort\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"subArray\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"    subArrays\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\".\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token method function property-access\\\",\\\"children\\\":\\\"push\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"subArray\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"}\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  result \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"[\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"]\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  indexes \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"[\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"0\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"0\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"0\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\".\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\".\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\".0\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"]\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token comment\\\",\\\"children\\\":\\\"// k 길이만큼 인덱스 배열\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword control-flow\\\",\\\"children\\\":\\\"while\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"subArray\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"[\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"0\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"]\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\".\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token property-access\\\",\\\"children\\\":\\\"length\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"\\u003e\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"0\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"\\u0026\\u0026\\\"}],\\\" subArray\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"[\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"1\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"]\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\".\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token property-access\\\",\\\"children\\\":\\\"length\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"\\u003e\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"0\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"\\u0026\\u0026\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token spread operator\\\",\\\"children\\\":\\\"...\\\"}],\\\" subArray\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"[\\\"}],\\\"k\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"-\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"1\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"]\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\".\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token property-access\\\",\\\"children\\\":\\\"length\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"\\u003e\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"0\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"{\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"    \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token comment\\\",\\\"children\\\":\\\"// subArray의 첫번째 원소중 가장 작은 원소를\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"    smallest \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"Infinity\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"    smallestIndex \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"0\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"    \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword control-flow\\\",\\\"children\\\":\\\"for\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"i\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"0\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"i\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"\\u003c\\\"}],\\\"k\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"i\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"++\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"{\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"      smallest \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token known-class-name class-name\\\",\\\"children\\\":\\\"Math\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\".\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token method function property-access\\\",\\\"children\\\":\\\"min\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"smallest\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],\\\" subArray\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"[\\\"}],\\\"i\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"]\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"[\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"0\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"]\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"      \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword control-flow\\\",\\\"children\\\":\\\"if\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"smallest \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"===\\\"}],\\\" subArray\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"[\\\"}],\\\"i\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"]\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"[\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"0\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"]\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"{\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"        smallestIndex \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" i\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"      \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"}\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"    \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"}\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"    indexes\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"[\\\"}],\\\"smallestIndex\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"]\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"++\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"    result\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\".\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token method function property-access\\\",\\\"children\\\":\\\"push\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"smallest\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"}\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"}\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"\\\\n\\\"}]]}]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"눈치챘겠지만, 그림에선 트리가 나오는데, 수도코드에는 트리 구조가 없어 잘못 설명된 수도코드임을 알 수 있다. 수도 코드에선 k 개의 배열 중 가장 작은 값을 찾고 있고, 이에 k^2를 사용하고 있다. 이 과정은 우선순위 큐, 즉 힙을 통해 최적화될 수 있다.\\\"}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"힙을 사용하면 가장 작은 원소가 top에 오도록 logk만에 정렬되기 때문에 klogk만에 병합을 완료할 수 있다.\\\"}],[\\\"$\\\",\\\"section\\\",null,{\\\"aria-labelledby\\\":\\\"k-way-merge-sort의-시간복잡도\\\",\\\"children\\\":[[\\\"$\\\",\\\"h3\\\",null,{\\\"className\\\":\\\"mt-7 mb-2 text-heading3 font-semibold leading-normal\\\",\\\"id\\\":\\\"k-way-merge-sort의-시간복잡도\\\",\\\"children\\\":[[\\\"$\\\",\\\"$L13\\\",null,{\\\"aria-hidden\\\":\\\"true\\\",\\\"tabIndex\\\":\\\"-1\\\",\\\"href\\\":\\\"#k-way-merge-sort의-시간복잡도\\\",\\\"children\\\":[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"icon icon-link\\\"}]}],\\\"k-way merge sort의 시간복잡도\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":[\\\"n * log\\\",[\\\"$\\\",\\\"sub\\\",null,{\\\"children\\\":\\\"k\\\"}],\\\"n\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":[\\\"증명 참고: \\\",[\\\"$\\\",\\\"$L13\\\",null,{\\\"href\\\":\\\"https://pro-programmer.tistory.com/entry/kway-Merge-Sort%ED%95%A9%EB%B3%91-%EC%A0%95%EB%A0%AC%EC%9D%98-%EC%8B%9C%EA%B0%84%EB%B3%B5%EC%9E%A1%EB%8F%84-%EA%B3%84%EC%82%B0%ED%95%98%EA%B8%B0\\\",\\\"children\\\":\\\"https://pro-programmer.tistory.com/entry/kway-Merge-Sort%ED%95%A9%EB%B3%91-%EC%A0%95%EB%A0%AC%EC%9D%98-%EC%8B%9C%EA%B0%84%EB%B3%B5%EC%9E%A1%EB%8F%84-%EA%B3%84%EC%82%B0%ED%95%98%EA%B8%B0\\\"}]]}]]}],[\\\"$\\\",\\\"section\\\",null,{\\\"aria-labelledby\\\":\\\"k-way-merge-sort의-사용\\\",\\\"children\\\":[[\\\"$\\\",\\\"h3\\\",null,{\\\"className\\\":\\\"mt-7 mb-2 text-heading3 font-semibold leading-normal\\\",\\\"id\\\":\\\"k-way-merge-sort의-사용\\\",\\\"children\\\":[[\\\"$\\\",\\\"$L13\\\",null,{\\\"aria-hidden\\\":\\\"true\\\",\\\"tabIndex\\\":\\\"-1\\\",\\\"href\\\":\\\"#k-way-merge-sort의-사용\\\",\\\"children\\\":[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"icon icon-link\\\"}]}],\\\"k-way merge sort의 사용\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"k-way merge sort는 언제 사용할 수 있을까? 주로 데이터베이스의 정렬에 사용된다.\\\"}],[\\\"$\\\",\\\"blockquote\\\",null,{\\\"className\\\":\\\"my-4 border-l-4 border-primary p-6 bg-gray-100 text-gray-700 [\\u0026_*:first-child]:mt-0 [\\u0026_*:last-child]:mb-0\\\",\\\"children\\\":[\\\"\\\\n\\\",[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"외부 병합 정렬(external merge sort)은 대상 데이터가 테이프나 디스크에 저장되어있고 데이터가 너무 커서 메모리에 담을 수 없는 경우에 실용적인 방법이다. 예를 들어, 900MB의 데이터를 100MB의 RAM을 사용하여 정렬을 해야 한다고 해보자.\\\"}],\\\"\\\\n\\\",[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"100MB 데이터를 주메모리에 읽어들이고, quicksort와 같이 일반적인 알고리즘을 사용하여 정렬한다.\\\\n정렬된 데이터를 디스크에 쓴다.\\\\n1,2 번 과정을 9번 반복한다. 그러면 100MB짜리 파일이 9개 생긴다.\\\\n9개의 파일에서 각각 처음부터 10MB 씩을 메모리(입력버퍼)에 로딩한다. 10MB의 출력을 위한 버퍼도 만들어둔다.\\\\n9way merge를 수행하고 결과를 출력버퍼에 쓴다. 출력버퍼가 차면 파일에 쓰고, 출력 버퍼를 비운다. 9개의 입력 버퍼가 비워지면, 다음 10MB를 읽는다.\\\"}],\\\"\\\\n\\\",[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":[\\\"출처: \\\",[\\\"$\\\",\\\"$L13\\\",null,{\\\"href\\\":\\\"https://ko.wikipedia.org/wiki/%ED%95%A9%EB%B3%91_%EC%A0%95%EB%A0%AC\\\",\\\"children\\\":\\\"https://ko.wikipedia.org/wiki/%ED%95%A9%EB%B3%91_%EC%A0%95%EB%A0%AC\\\"}]]}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"이러한 합병 정렬을 외부 합병 정렬이라고 한다. 위의 방법을 사용하면 900MB를 정렬하는데 100MB의 메모리만 사용해도 된다.\\\\n실제 데이터베이스가 사용되는 환경에서도 메모리의 크기에 한계가 있기 때문에 이러한 방법이 사용된다.\\\"}]]}]]}],[\\\"$\\\",\\\"section\\\",null,{\\\"aria-labelledby\\\":\\\"추가적인-생각거리\\\",\\\"children\\\":[[\\\"$\\\",\\\"h2\\\",null,{\\\"className\\\":\\\"mt-8 mb-3 text-heading2 font-semibold leading-normal\\\",\\\"id\\\":\\\"추가적인-생각거리\\\",\\\"children\\\":[[\\\"$\\\",\\\"$L13\\\",null,{\\\"aria-hidden\\\":\\\"true\\\",\\\"tabIndex\\\":\\\"-1\\\",\\\"href\\\":\\\"#추가적인-생각거리\\\",\\\"children\\\":[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"icon icon-link\\\"}]}],\\\"추가적인 생각거리\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"두 배열을 균등하지 않게 분할해도 머지소트가 동작할까?\\\"}]]}]]}],[\\\"$\\\",\\\"$L15\\\",null,{\\\"size\\\":\\\"lg\\\",\\\"shareData\\\":{\\\"title\\\":\\\"Terra Dev Blog - algorithm-1-2-merge-sort\\\",\\\"text\\\":\\\"$undefined\\\",\\\"url\\\":\\\"/next-blog/posts/algorithm-1-2-merge-sort\\\"},\\\"aria-label\\\":\\\"Share this article\\\"}]]}],[\\\"$\\\",\\\"section\\\",null,{\\\"id\\\":\\\"author\\\",\\\"children\\\":[\\\"$\\\",\\\"$L16\\\",null,{}]}],[\\\"$\\\",\\\"section\\\",null,{\\\"children\\\":[[\\\"$\\\",\\\"$Lb\\\",null,{\\\"src\\\":\\\"https://giscus.app/client.js\\\",\\\"data-repo\\\":\\\"dev2820/blog-posts\\\",\\\"data-repo-id\\\":\\\"R_kgDOLQagPA\\\",\\\"data-category\\\":\\\"General\\\",\\\"data-category-id\\\":\\\"DIC_kwDOLQagPM4CjAtl\\\",\\\"data-mapping\\\":\\\"og:title\\\",\\\"data-strict\\\":\\\"0\\\",\\\"data-reactions-enabled\\\":\\\"1\\\",\\\"data-emit-metadata\\\":\\\"0\\\",\\\"data-input-position\\\":\\\"top\\\",\\\"data-theme\\\":\\\"light\\\",\\\"data-lang\\\":\\\"ko\\\",\\\"data-loading\\\":\\\"lazy\\\",\\\"cross-origin\\\":\\\"anonymous\\\",\\\"async\\\":true}],[\\\"$\\\",\\\"div\\\",null,{\\\"className\\\":\\\"giscus w-full min-w-screen-md\\\"}]]}]]}]\\n\"])</script><script>self.__next_f.push([1,\"f:[[\\\"$\\\",\\\"meta\\\",\\\"0\\\",{\\\"name\\\":\\\"viewport\\\",\\\"content\\\":\\\"width=device-width, initial-scale=1\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"1\\\",{\\\"charSet\\\":\\\"utf-8\\\"}],[\\\"$\\\",\\\"title\\\",\\\"2\\\",{\\\"children\\\":\\\"Terra Dev Blog - algorithm-1-2-merge-sort\\\"}],[\\\"$\\\",\\\"link\\\",\\\"3\\\",{\\\"rel\\\":\\\"canonical\\\",\\\"href\\\":\\\"https://dev2820.github.io/next-blog/algorithm-1-2-merge-sort\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"4\\\",{\\\"property\\\":\\\"og:title\\\",\\\"content\\\":\\\"algorithm-1-2-merge-sort\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"5\\\",{\\\"property\\\":\\\"og:url\\\",\\\"content\\\":\\\"https://dev2820.github.io/next-blog/algorithm-1-2-merge-sort\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"6\\\",{\\\"property\\\":\\\"og:locale\\\",\\\"content\\\":\\\"ko_KR\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"7\\\",{\\\"property\\\":\\\"og:image\\\",\\\"content\\\":\\\"https://dev2820.github.io/next-blog/next-blog/posts/algorithm-1-2-merge-sort\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"8\\\",{\\\"property\\\":\\\"og:image:width\\\",\\\"content\\\":\\\"800\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"9\\\",{\\\"property\\\":\\\"og:image:height\\\",\\\"content\\\":\\\"600\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"10\\\",{\\\"property\\\":\\\"og:image:alt\\\",\\\"content\\\":\\\"algorithm-1-2-merge-sort\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"11\\\",{\\\"property\\\":\\\"og:type\\\",\\\"content\\\":\\\"article\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"12\\\",{\\\"name\\\":\\\"twitter:card\\\",\\\"content\\\":\\\"summary_large_image\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"13\\\",{\\\"name\\\":\\\"twitter:title\\\",\\\"content\\\":\\\"algorithm-1-2-merge-sort\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"14\\\",{\\\"name\\\":\\\"twitter:image\\\",\\\"content\\\":\\\"https://dev2820.github.io/next-blog/next-blog/posts/algorithm-1-2-merge-sort\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"15\\\",{\\\"name\\\":\\\"twitter:image:width\\\",\\\"content\\\":\\\"800\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"16\\\",{\\\"name\\\":\\\"twitter:image:height\\\",\\\"content\\\":\\\"600\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"17\\\",{\\\"name\\\":\\\"twitter:image:alt\\\",\\\"content\\\":\\\"algorithm-1-2-merge-sort\\\"}],[\\\"$\\\",\\\"link\\\",\\\"18\\\",{\\\"rel\\\":\\\"icon\\\",\\\"href\\\":\\\"/next-blog/favicon.ico\\\",\\\"type\\\":\\\"image/x-icon\\\",\\\"sizes\\\":\\\"16x16\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"19\\\",{\\\"name\\\":\\\"next-size-adjust\\\"}]]\\n6:null\\n\"])</script></body></html>",
            "url": "https://dev2820.github.io/next-blogalgorithm-1-2-merge-sort",
            "title": "algorithm-1-2-merge-sort",
            "date_modified": "2024-03-31T12:40:51.204Z",
            "author": {
                "name": "dev2820",
                "url": "https://dev2820.github.io/next-blog/about"
            }
        },
        {
            "id": "algorithm-1-3-quick-sort",
            "content_html": "<!DOCTYPE html><html lang=\"kr\" class=\"__variable_fa65fd __variable_7691e4 scroll-smooth\"><head><meta charSet=\"utf-8\"/><meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"/><link rel=\"preload\" href=\"/next-blog/_next/static/media/3e7b7e3fd4560936-s.p.woff2\" as=\"font\" crossorigin=\"\" type=\"font/woff2\"/><link rel=\"preload\" href=\"/next-blog/_next/static/media/ff840cfebfb63b0c-s.p.woff2\" as=\"font\" crossorigin=\"\" type=\"font/woff2\"/><link rel=\"stylesheet\" href=\"/next-blog/_next/static/css/16077bc16defb9b9.css\" data-precedence=\"next\"/><link rel=\"stylesheet\" href=\"/next-blog/_next/static/css/203da25389b4eeab.css\" data-precedence=\"next\"/><link rel=\"preload\" as=\"script\" fetchPriority=\"low\" href=\"/next-blog/_next/static/chunks/webpack-8f27d743501d147d.js\"/><script src=\"/next-blog/_next/static/chunks/f14ca715-03ac7b40665f0731.js\" async=\"\"></script><script src=\"/next-blog/_next/static/chunks/465-9f8ee17d6a70e147.js\" async=\"\"></script><script src=\"/next-blog/_next/static/chunks/main-app-e31317f2a5bf611e.js\" async=\"\"></script><script src=\"/next-blog/_next/static/chunks/805-a8af350d35fb9160.js\" async=\"\"></script><script src=\"/next-blog/_next/static/chunks/app/posts/%5Bslug%5D/layout-1cf1294e1a2539f4.js\" async=\"\"></script><script src=\"/next-blog/_next/static/chunks/618-f2bb34773a0d24b2.js\" async=\"\"></script><script src=\"/next-blog/_next/static/chunks/app/posts/page-e8c6275c8ebfad50.js\" async=\"\"></script><script src=\"/next-blog/_next/static/chunks/372-b649e69f56e8eb19.js\" async=\"\"></script><script src=\"/next-blog/_next/static/chunks/app/layout-c7fa40d911107206.js\" async=\"\"></script><script src=\"/next-blog/_next/static/chunks/952ad60e-7cdac7b6bf36214c.js\" async=\"\"></script><script src=\"/next-blog/_next/static/chunks/app/posts/%5Bslug%5D/page-e951164d6ad6c144.js\" async=\"\"></script><link rel=\"preload\" href=\"https://giscus.app/client.js\" as=\"script\"/><link rel=\"preload\" href=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/prism.min.js\" as=\"script\"/><link rel=\"preload\" href=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-javascript.min.js\" as=\"script\"/><link rel=\"preload\" href=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-typescript.min.js\" as=\"script\"/><link rel=\"preload\" href=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-jsx.min.js\" as=\"script\"/><link rel=\"preload\" href=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-tsx.min.js\" as=\"script\"/><link rel=\"preload\" href=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-c.min.js\" as=\"script\"/><link rel=\"preload\" href=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/plugins/line-numbers/prism-line-numbers.min.js\" as=\"script\"/><title>Terra Dev Blog - algorithm-1-3-quick-sort</title><link rel=\"canonical\" href=\"https://dev2820.github.io/next-blog/algorithm-1-3-quick-sort\"/><meta property=\"og:title\" content=\"algorithm-1-3-quick-sort\"/><meta property=\"og:url\" content=\"https://dev2820.github.io/next-blog/algorithm-1-3-quick-sort\"/><meta property=\"og:locale\" content=\"ko_KR\"/><meta property=\"og:image\" content=\"https://dev2820.github.io/next-blog/next-blog/posts/algorithm-1-3-quick-sort\"/><meta property=\"og:image:width\" content=\"800\"/><meta property=\"og:image:height\" content=\"600\"/><meta property=\"og:image:alt\" content=\"algorithm-1-3-quick-sort\"/><meta property=\"og:type\" content=\"article\"/><meta name=\"twitter:card\" content=\"summary_large_image\"/><meta name=\"twitter:title\" content=\"algorithm-1-3-quick-sort\"/><meta name=\"twitter:image\" content=\"https://dev2820.github.io/next-blog/next-blog/posts/algorithm-1-3-quick-sort\"/><meta name=\"twitter:image:width\" content=\"800\"/><meta name=\"twitter:image:height\" content=\"600\"/><meta name=\"twitter:image:alt\" content=\"algorithm-1-3-quick-sort\"/><link rel=\"icon\" href=\"/next-blog/favicon.ico\" type=\"image/x-icon\" sizes=\"16x16\"/><meta name=\"next-size-adjust\"/><script src=\"/next-blog/_next/static/chunks/polyfills-78c92fac7aa8fdd8.js\" noModule=\"\"></script></head><body class=\"__className_fa65fd flex flex-col text-gray-800\"><link href=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/plugins/line-numbers/prism-line-numbers.min.css\" rel=\"stylesheet\"/><header class=\"flex flex-row justify-center py-2 items-center self-center w-full max-w-screen-md px-4\"><a href=\"/next-blog\"><img alt=\"Terra&#x27;s Devlog logo\" loading=\"lazy\" width=\"258\" height=\"48\" decoding=\"async\" data-nimg=\"1\" style=\"color:transparent\" src=\"/next-blog/_next/static/media/logo-full.a2c57f51.svg\"/></a><div class=\"flex-1\"></div><nav class=\"\"><menu class=\"flex flex-row gap-8\"><li><a aria-disabled=\"false\" href=\"/next-blog/posts\"><div class=\"cursor-pointer duration-200 font-medium text-primary hover:text-primary\">Posts</div></a></li><li><a aria-disabled=\"true\" href=\"\"><div class=\"duration-200 font-medium cursor-not-allowed text-muted hover:text-muted\">About Me</div></a></li><li><a aria-disabled=\"true\" href=\"\"><div class=\"duration-200 font-medium cursor-not-allowed text-muted hover:text-muted\">Contact</div></a></li></menu></nav></header><main class=\"self-center w-full max-w-screen-md p-4 text-gray-800\"><article class=\"relative\"><header id=\"post-meta\"><h1 class=\"mt-10 mb-4 text-heading1 font-bold leading-normal\" id=\"algorithm-1-3-quick-sort\">algorithm-1-3-quick-sort</h1><time dateTime=\"2024-04-12\" aria-label=\"Published on 2024-04-12\">2024-04-12</time> <!-- -->|<!-- --> <time dateTime=\"PT3M\" aria-label=\"Estimated reading time\">3<!-- --> mins</time></header><div id=\"content\" class=\"relative\"><div id=\"table-of-header\" class=\"absolute -right-12 translate-x-full h-full w-52 desktop:block hidden\"><nav class=\"sticky top-24\"><ol><li><a href=\"#퀵-소트-동작-방식\"><div class=\"text-sm font-light data-[active=&quot;true&quot;]:text-base data-[active=&quot;true&quot;]:font-semibold py-0.5 text-neutral-400 data-[active=&quot;true&quot;]:text-primary duration-200 hover:text-primary pl-4\" data-id=\"#퀵-소트-동작-방식\">퀵 소트 동작 방식</div></a></li><li><a href=\"#퀵-소트-수도-코드\"><div class=\"text-sm font-light data-[active=&quot;true&quot;]:text-base data-[active=&quot;true&quot;]:font-semibold py-0.5 text-neutral-400 data-[active=&quot;true&quot;]:text-primary duration-200 hover:text-primary pl-10\" data-id=\"#퀵-소트-수도-코드\">퀵 소트 수도 코드</div></a></li><li><a href=\"#partition-함수-동작-방식\"><div class=\"text-sm font-light data-[active=&quot;true&quot;]:text-base data-[active=&quot;true&quot;]:font-semibold py-0.5 text-neutral-400 data-[active=&quot;true&quot;]:text-primary duration-200 hover:text-primary pl-4\" data-id=\"#partition-함수-동작-방식\">partition 함수 동작 방식</div></a></li><li><a href=\"#partition-함수의-시간복잡도\"><div class=\"text-sm font-light data-[active=&quot;true&quot;]:text-base data-[active=&quot;true&quot;]:font-semibold py-0.5 text-neutral-400 data-[active=&quot;true&quot;]:text-primary duration-200 hover:text-primary pl-10\" data-id=\"#partition-함수의-시간복잡도\">partition 함수의 시간복잡도</div></a></li><li><a href=\"#퀵-소트의-시간복잡도\"><div class=\"text-sm font-light data-[active=&quot;true&quot;]:text-base data-[active=&quot;true&quot;]:font-semibold py-0.5 text-neutral-400 data-[active=&quot;true&quot;]:text-primary duration-200 hover:text-primary pl-4\" data-id=\"#퀵-소트의-시간복잡도\">퀵 소트의 시간복잡도</div></a></li><li><a href=\"#최악-시간-복잡도\"><div class=\"text-sm font-light data-[active=&quot;true&quot;]:text-base data-[active=&quot;true&quot;]:font-semibold py-0.5 text-neutral-400 data-[active=&quot;true&quot;]:text-primary duration-200 hover:text-primary pl-10\" data-id=\"#최악-시간-복잡도\">최악 시간 복잡도</div></a></li><li><a href=\"#평균-시간-복잡도\"><div class=\"text-sm font-light data-[active=&quot;true&quot;]:text-base data-[active=&quot;true&quot;]:font-semibold py-0.5 text-neutral-400 data-[active=&quot;true&quot;]:text-primary duration-200 hover:text-primary pl-10\" data-id=\"#평균-시간-복잡도\">평균 시간 복잡도</div></a></li><li><a href=\"#quick-sorts는-왜-빠를까\"><div class=\"text-sm font-light data-[active=&quot;true&quot;]:text-base data-[active=&quot;true&quot;]:font-semibold py-0.5 text-neutral-400 data-[active=&quot;true&quot;]:text-primary duration-200 hover:text-primary pl-4\" data-id=\"#quick-sorts는-왜-빠를까\">Quick Sorts는 왜 빠를까?</div></a></li><li><a href=\"#어떤-위치를-pivot으로-지정할-것인가-퀵소트-최적화\"><div class=\"text-sm font-light data-[active=&quot;true&quot;]:text-base data-[active=&quot;true&quot;]:font-semibold py-0.5 text-neutral-400 data-[active=&quot;true&quot;]:text-primary duration-200 hover:text-primary pl-4\" data-id=\"#어떤-위치를-pivot으로-지정할-것인가-퀵소트-최적화\">어떤 위치를 pivot으로 지정할 것인가 (퀵소트 최적화)</div></a></li><li><a href=\"#random-pivot\"><div class=\"text-sm font-light data-[active=&quot;true&quot;]:text-base data-[active=&quot;true&quot;]:font-semibold py-0.5 text-neutral-400 data-[active=&quot;true&quot;]:text-primary duration-200 hover:text-primary pl-10\" data-id=\"#random-pivot\">Random Pivot</div></a></li><li><a href=\"#median-of-three-quicksort\"><div class=\"text-sm font-light data-[active=&quot;true&quot;]:text-base data-[active=&quot;true&quot;]:font-semibold py-0.5 text-neutral-400 data-[active=&quot;true&quot;]:text-primary duration-200 hover:text-primary pl-10\" data-id=\"#median-of-three-quicksort\">Median of Three QuickSort</div></a></li><li><a href=\"#three-way-partitioning\"><div class=\"text-sm font-light data-[active=&quot;true&quot;]:text-base data-[active=&quot;true&quot;]:font-semibold py-0.5 text-neutral-400 data-[active=&quot;true&quot;]:text-primary duration-200 hover:text-primary pl-10\" data-id=\"#three-way-partitioning\">Three-way partitioning</div></a></li><li><a href=\"#그-외\"><div class=\"text-sm font-light data-[active=&quot;true&quot;]:text-base data-[active=&quot;true&quot;]:font-semibold py-0.5 text-neutral-400 data-[active=&quot;true&quot;]:text-primary duration-200 hover:text-primary pl-10\" data-id=\"#그-외\">그 외</div></a></li></ol></nav></div><section aria-labelledby=\"13-퀵-정렬-quick-sort\"><h1 class=\"mt-10 mb-4 text-heading1 font-bold leading-normal\" id=\"13-퀵-정렬-quick-sort\"><a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#13-퀵-정렬-quick-sort\"><span class=\"icon icon-link\"></span></a>1.3 퀵 정렬 (Quick Sort)</h1><p class=\"font-light leading-normal mt-4 mb-2\"><img alt=\"퀵 정렬\" loading=\"lazy\" width=\"704\" height=\"300\" decoding=\"async\" data-nimg=\"1\" class=\"object-cover rounded-md mx-auto my-12 w-full max-w-[704px]\" style=\"color:transparent\" src=\"/next-blog/posts/algorithm-1-3-quick-sort/https:/upload.wikimedia.org/wikipedia/commons/6/6a/Sorting_quicksort_anim.gif\"/><br/>\n<!-- -->출처: <a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" href=\"https://ko.wikipedia.org/wiki/%ED%80%B5_%EC%A0%95%EB%A0%AC\">https://ko.wikipedia.org/wiki/%ED%80%B5_%EC%A0%95%EB%A0%AC</a>\n빠르다고 알려진 퀵 소트(분할교환정렬) 또한 분할 정복을 이용한 예시이다.</p><p class=\"font-light leading-normal mt-4 mb-2\">분할 정복의 논지는 다음과 같다.</p><blockquote class=\"my-4 border-l-4 border-primary p-6 bg-gray-100 text-gray-700 [&amp;_*:first-child]:mt-0 [&amp;_*:last-child]:mb-0\">\n<p class=\"font-light leading-normal mt-4 mb-2\">피봇(pivot)을 기준으로 왼쪽은 피봇보다 작은 값, 오른쪽은 피봇보다 큰 값을 옮긴다.</p>\n<p class=\"font-light leading-normal mt-4 mb-2\">왼쪽 영역과 오른쪽 영역을 정렬한다.</p>\n<p class=\"font-light leading-normal mt-4 mb-2\">=&gt; 모든 영역이 정렬 되었다.</p>\n</blockquote><p class=\"font-light leading-normal mt-4 mb-2\">방식은 합병 정렬과 비슷하지만, 배열을 분할하는 방식이 다르다.</p><section aria-labelledby=\"퀵-소트-동작-방식\"><h2 class=\"mt-8 mb-3 text-heading2 font-semibold leading-normal\" id=\"퀵-소트-동작-방식\"><a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#퀵-소트-동작-방식\"><span class=\"icon icon-link\"></span></a>퀵 소트 동작 방식</h2><p class=\"font-light leading-normal mt-4 mb-2\">원소가 하나면 정렬할 필요가 없다.</p><p class=\"font-light leading-normal mt-4 mb-2\">첫번째 원소를 피봇으로 지정한다고 하자.</p><pre class=\"rounded-md [&amp;_code]:py-0 [&amp;_code]:px-0 line-numbers\"><code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\"><span class=\"code-line\">15 22 13 27 12 10 20 25\n</span><span class=\"code-line\">▲\n</span><span class=\"code-line\">(pivot)\n</span></code></pre><p class=\"font-light leading-normal mt-4 mb-2\">pivot(15)를 기준으로 pivot 오른쪽 원소부터 pivot보다 작은 값을 pivot 왼쪽으로 옮긴다.</p><pre class=\"rounded-md [&amp;_code]:py-0 [&amp;_code]:px-0 line-numbers\"><code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\"><span class=\"code-line\">13 12 10 15 22 27 20 25\n</span><span class=\"code-line\">         ▲\n</span><span class=\"code-line\">      (pivot)\n</span></code></pre><p class=\"font-light leading-normal mt-4 mb-2\">pivot 왼쪽과 오른쪽 영역을 각각 정렬한다. (퀵소트 재귀호출)</p><pre class=\"rounded-md [&amp;_code]:py-0 [&amp;_code]:px-0 line-numbers\"><code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\"><span class=\"code-line\">10 12 13 15 20 22 25 27\n</span></code></pre><section aria-labelledby=\"퀵-소트-수도-코드\"><h3 class=\"mt-7 mb-2 text-heading3 font-semibold leading-normal\" id=\"퀵-소트-수도-코드\"><a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#퀵-소트-수도-코드\"><span class=\"icon icon-link\"></span></a>퀵 소트 수도 코드</h3><pre class=\"rounded-md [&amp;_code]:py-0 [&amp;_code]:px-0 line-numbers language-js\"><code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2 language-js\"><span class=\"code-line\"><span class=\"token keyword\">function</span> <span class=\"token function\">quicksort</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">index low<span class=\"token punctuation\">,</span> index high</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">  pivot <span class=\"token operator\">=</span> low<span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">  <span class=\"token comment\">// low ~ high를 pivot을 기준으로 양분한다.</span>\n</span><span class=\"code-line\">  <span class=\"token comment\">// 배열은 왼쪽은 pivot보다 작은 값, 오른쪽은 큰 값들이 오게 된다.</span>\n</span><span class=\"code-line\">  divide <span class=\"token operator\">=</span> <span class=\"token function\">partition</span><span class=\"token punctuation\">(</span>low<span class=\"token punctuation\">,</span> high<span class=\"token punctuation\">,</span> pivot<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">  <span class=\"token comment\">// pivot보다 작은 값들을 정렬한다.</span>\n</span><span class=\"code-line\">  <span class=\"token function\">quicksort</span><span class=\"token punctuation\">(</span>low<span class=\"token punctuation\">,</span> divide <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">  <span class=\"token comment\">// pivot보다 큰 값들을 정렬한다.</span>\n</span><span class=\"code-line\">  <span class=\"token function\">quicksort</span><span class=\"token punctuation\">(</span>divide <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> high<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\"><span class=\"token punctuation\">}</span>\n</span></code></pre></section></section><section aria-labelledby=\"partition-함수-동작-방식\"><h2 class=\"mt-8 mb-3 text-heading2 font-semibold leading-normal\" id=\"partition-함수-동작-방식\"><a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#partition-함수-동작-방식\"><span class=\"icon icon-link\"></span></a>partition 함수 동작 방식</h2><p class=\"font-light leading-normal mt-4 mb-2\">partition은 pivot보다 큰수, 작은 수로 배열을 분할하는 함수이다. 먼저 pivot을 배열의 첫 번째 값으로 잡는 경우의 알고리즘이다.</p><p class=\"font-light leading-normal mt-4 mb-2\">파티션(partition)함수의 논지는 다음과 같다.</p><blockquote class=\"my-4 border-l-4 border-primary p-6 bg-gray-100 text-gray-700 [&amp;_*:first-child]:mt-0 [&amp;_*:last-child]:mb-0\">\n<p class=\"font-light leading-normal mt-4 mb-2\">피봇을 제외한 원소들을 순회하며 pivot보다 큰 값이지만 왼쪽에 있는 값, pivot보다 작은 값이지만 오른쪽에 있는 값을 찾게 되면 둘을 swap한다.</p>\n<p class=\"font-light leading-normal mt-4 mb-2\">2개의 index가 필요하다. 하나는 배열 왼쪽에서 시작하며 pivot보다 큰 값을 찾는 용도이다. 다른 하나는 배열 오른쪽에서 시작하며 pivot보다 작은 값을 찾는 용도이다. 각각을 i, j 라고 하겠다.</p>\n<p class=\"font-light leading-normal mt-4 mb-2\">i = 1, j = arr.length - 1이다.</p>\n<p class=\"font-light leading-normal mt-4 mb-2\">arr[i]가 pivot보다 큰 값을 만날 때까지 i를 1씩 증가시킨다.</p>\n<p class=\"font-light leading-normal mt-4 mb-2\">arr[j]가 pivot보다 작은 값을 만날 때까지 j를 1씩 감소시킨다.</p>\n<p class=\"font-light leading-normal mt-4 mb-2\">pivot보다 큰 arr[i], pivot보다 작은 arr[j]를 만나면 두 값을 swap한다.</p>\n<p class=\"font-light leading-normal mt-4 mb-2\">swap한 뒤 다시 2번으로 간다.</p>\n<p class=\"font-light leading-normal mt-4 mb-2\">i와 j가 만나면 순회를 종료한다.</p>\n<p class=\"font-light leading-normal mt-4 mb-2\">pivot과 i-1를 swap한다.</p>\n</blockquote><pre class=\"rounded-md [&amp;_code]:py-0 [&amp;_code]:px-0 line-numbers language-js\"><code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2 language-js\"><span class=\"code-line\"><span class=\"token keyword\">function</span> <span class=\"token function\">partition</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">low<span class=\"token punctuation\">,</span>high<span class=\"token punctuation\">,</span>pivot</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">  i<span class=\"token operator\">=</span>low<span class=\"token punctuation\">,</span> j<span class=\"token operator\">=</span>high\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">  <span class=\"token function\">whlie</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">i<span class=\"token operator\">&lt;</span>j</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">    <span class=\"token keyword control-flow\">while</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;=</span> arr<span class=\"token punctuation\">[</span>pivot<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">      i<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">      <span class=\"token keyword control-flow\">if</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">&gt;=</span>j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">        <span class=\"token keyword control-flow\">break</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">      <span class=\"token punctuation\">}</span>\n</span><span class=\"code-line\">    <span class=\"token punctuation\">}</span>\n</span><span class=\"code-line\">    <span class=\"token keyword control-flow\">while</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">&gt;=</span> arr<span class=\"token punctuation\">[</span>pivot<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">      j<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">      <span class=\"token keyword control-flow\">if</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">&gt;=</span>j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">        <span class=\"token keyword control-flow\">break</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">      <span class=\"token punctuation\">}</span>\n</span><span class=\"code-line\">    <span class=\"token punctuation\">}</span>\n</span><span class=\"code-line\">    <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">)</span>\n</span><span class=\"code-line\">  <span class=\"token punctuation\">}</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">  <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>pivot<span class=\"token punctuation\">)</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"token punctuation\">}</span>\n</span><span class=\"code-line\"><span class=\"token number\">15</span> <span class=\"token number\">22</span> <span class=\"token number\">13</span> <span class=\"token number\">27</span> <span class=\"token number\">12</span> <span class=\"token number\">10</span> <span class=\"token number\">20</span> <span class=\"token number\">25</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">i</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">j</span><span class=\"token operator\">:</span> <span class=\"token number\">7</span></span><span class=\"token punctuation\">)</span>\n</span><span class=\"code-line\"><span class=\"token arrow operator\">=&gt;</span>  <span class=\"token number\">15</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">22</span>이므로 i<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> i 증가를 중단한다<span class=\"token punctuation\">.</span>\n</span><span class=\"code-line\"><span class=\"token arrow operator\">=&gt;</span> j를 <span class=\"token number\">1</span>씩 감소시키며 <span class=\"token number\">15</span>보다 작은 값을 찾는다<span class=\"token punctuation\">.</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"token number\">15</span> <span class=\"token number\">22</span> <span class=\"token number\">13</span> <span class=\"token number\">27</span> <span class=\"token number\">12</span> <span class=\"token number\">10</span> <span class=\"token number\">20</span> <span class=\"token number\">25</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">i</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">j</span><span class=\"token operator\">:</span> <span class=\"token number\">5</span></span><span class=\"token punctuation\">)</span>\n</span><span class=\"code-line\"><span class=\"token arrow operator\">=&gt;</span> <span class=\"token number\">15</span> <span class=\"token operator\">&gt;</span> <span class=\"token number\">10</span>이므로 j<span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> j 감소를 중단한다<span class=\"token punctuation\">.</span>\n</span><span class=\"code-line\"><span class=\"token arrow operator\">=&gt;</span> i와 j를 swap한다<span class=\"token punctuation\">.</span>\n</span><span class=\"code-line\"><span class=\"token arrow operator\">=&gt;</span> i를 <span class=\"token number\">1</span>씩 증가시킨다<span class=\"token punctuation\">.</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"token number\">15</span> <span class=\"token number\">10</span> <span class=\"token number\">13</span> <span class=\"token number\">27</span> <span class=\"token number\">12</span> <span class=\"token number\">22</span> <span class=\"token number\">20</span> <span class=\"token number\">25</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">i</span><span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">j</span><span class=\"token operator\">:</span> <span class=\"token number\">5</span></span><span class=\"token punctuation\">)</span>\n</span><span class=\"code-line\"><span class=\"token arrow operator\">=&gt;</span> <span class=\"token number\">15</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">27</span>이므로 i 증가를 중단한다<span class=\"token punctuation\">.</span>\n</span><span class=\"code-line\"><span class=\"token arrow operator\">=&gt;</span> j를 <span class=\"token number\">1</span>씩 감소시키며 <span class=\"token number\">15</span>보다 작은 값을 찾는다<span class=\"token punctuation\">.</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"token number\">15</span> <span class=\"token number\">10</span> <span class=\"token number\">13</span> <span class=\"token number\">27</span> <span class=\"token number\">12</span> <span class=\"token number\">22</span> <span class=\"token number\">20</span> <span class=\"token number\">25</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">i</span><span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">j</span><span class=\"token operator\">:</span> <span class=\"token number\">4</span></span><span class=\"token punctuation\">)</span>\n</span><span class=\"code-line\"><span class=\"token arrow operator\">=&gt;</span> <span class=\"token number\">15</span> <span class=\"token operator\">&gt;</span> <span class=\"token number\">12</span>이므로 j 감소를 중단한다<span class=\"token punctuation\">.</span>\n</span><span class=\"code-line\"><span class=\"token arrow operator\">=&gt;</span> i와 j를 swap한다<span class=\"token punctuation\">.</span>\n</span><span class=\"code-line\"><span class=\"token arrow operator\">=&gt;</span> i를 <span class=\"token number\">1</span>씩 증가시킨다<span class=\"token punctuation\">.</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"token number\">15</span> <span class=\"token number\">10</span> <span class=\"token number\">13</span> <span class=\"token number\">12</span> <span class=\"token number\">27</span> <span class=\"token number\">22</span> <span class=\"token number\">20</span> <span class=\"token number\">25</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">i</span><span class=\"token operator\">:</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">j</span><span class=\"token operator\">:</span> <span class=\"token number\">4</span></span><span class=\"token punctuation\">)</span>\n</span><span class=\"code-line\"><span class=\"token arrow operator\">=&gt;</span> i와 j가 같아졌기 때문에 i 증가를 중단한다<span class=\"token punctuation\">.</span>\n</span><span class=\"code-line\"><span class=\"token arrow operator\">=&gt;</span> 마지막으로 pivot보다 작은 값이 있었던 위치인 i<span class=\"token operator\">-</span><span class=\"token number\">1</span>과 pivot을 스왑한다<span class=\"token punctuation\">.</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"token number\">12</span> <span class=\"token number\">10</span> <span class=\"token number\">13</span> <span class=\"token number\">15</span> <span class=\"token number\">27</span> <span class=\"token number\">22</span> <span class=\"token number\">20</span> <span class=\"token number\">25</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">i</span><span class=\"token operator\">:</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">j</span><span class=\"token operator\">:</span> <span class=\"token number\">4</span></span><span class=\"token punctuation\">)</span>\n</span><span class=\"code-line\"><span class=\"token arrow operator\">=&gt;</span> 종료\n</span></code></pre><section aria-labelledby=\"partition-함수의-시간복잡도\"><h3 class=\"mt-7 mb-2 text-heading3 font-semibold leading-normal\" id=\"partition-함수의-시간복잡도\"><a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#partition-함수의-시간복잡도\"><span class=\"icon icon-link\"></span></a>partition 함수의 시간복잡도</h3><p class=\"font-light leading-normal mt-4 mb-2\">n 길이 배열을 pivot을 제외한 모든 원소를 순회하기 때문에 <code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\">T(n) = n-1</code>이다.</p></section></section><section aria-labelledby=\"퀵-소트의-시간복잡도\"><h2 class=\"mt-8 mb-3 text-heading2 font-semibold leading-normal\" id=\"퀵-소트의-시간복잡도\"><a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#퀵-소트의-시간복잡도\"><span class=\"icon icon-link\"></span></a>퀵 소트의 시간복잡도</h2><p class=\"font-light leading-normal mt-4 mb-2\">퀵 소트는 일정한 시간복잡도를 가지지 않는다. 따라서 평균 시간 복잡도와 최악 시간 복잡도만 계산한다.</p><section aria-labelledby=\"최악-시간-복잡도\"><h3 class=\"mt-7 mb-2 text-heading3 font-semibold leading-normal\" id=\"최악-시간-복잡도\"><a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#최악-시간-복잡도\"><span class=\"icon icon-link\"></span></a>최악 시간 복잡도</h3><p class=\"font-light leading-normal mt-4 mb-2\">완전히 정렬된 경우, 혹은 역순 정렬된 경우 최악의 시간 복잡도를 가지게 된다. pivot을 제외한 배열을 다시 정렬해야하기 때문이다. 즉, partition의 크기가 불균형을 이룰수록 시간 복잡도가 커진다.</p><p class=\"font-light leading-normal mt-4 mb-2\">예를 들어 1,2,3,4,5 배열을 quicksort해보자.</p><blockquote class=\"my-4 border-l-4 border-primary p-6 bg-gray-100 text-gray-700 [&amp;_*:first-child]:mt-0 [&amp;_*:last-child]:mb-0\">\n<p class=\"font-light leading-normal mt-4 mb-2\">pivot = 0</p>\n<p class=\"font-light leading-normal mt-4 mb-2\">1,2,3,4,5</p>\n<p class=\"font-light leading-normal mt-4 mb-2\">quicksort([1,2,3,4,5])</p>\n<p class=\"font-light leading-normal mt-4 mb-2\">= partition([1,2,3,4,5]) + quicksort([]) + quicksort([2,3,4,5])</p>\n<p class=\"font-light leading-normal mt-4 mb-2\">quicksort([2,3,4,5])</p>\n<p class=\"font-light leading-normal mt-4 mb-2\">= partition([2,3,4,5]) + quicksort([]) + quicksort([3,4,5])</p>\n<p class=\"font-light leading-normal mt-4 mb-2\">...</p>\n</blockquote><p class=\"font-light leading-normal mt-4 mb-2\">위의 경우 [1,2,3,4,5] 정렬 + [2,3,4,5] 정렬 + [3,4,5] 정렬 + [4,5] 정렬 + [5] 정렬</p><p class=\"font-light leading-normal mt-4 mb-2\">= 4+3+2+1</p><p class=\"font-light leading-normal mt-4 mb-2\">= 10</p><p class=\"font-light leading-normal mt-4 mb-2\">일반화하면 <code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\">1+2+3+...+n-1 = n*(n-1)/2</code></p><p class=\"font-light leading-normal mt-4 mb-2\">시간복잡도는 <code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\">O(n^2)</code> 이다.</p></section><section aria-labelledby=\"평균-시간-복잡도\"><h3 class=\"mt-7 mb-2 text-heading3 font-semibold leading-normal\" id=\"평균-시간-복잡도\"><a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#평균-시간-복잡도\"><span class=\"icon icon-link\"></span></a>평균 시간 복잡도</h3><p class=\"font-light leading-normal mt-4 mb-2\">최악 시간 복잡도가 n^2이라니, 전혀 quick하지 않다. 하지만 quick sort는 평균적인 상황에서 꽤 준수한 성능을 보여준다.</p><p class=\"font-light leading-normal mt-4 mb-2\">평균적인 상황에서 배열의 원소는 무작위로 흩어져있을 것이다. 따라서 평균적으로 피봇보다 작은 원소들의 배열과 피봇보다 큰 원소들의 배열은 평균적으로 비슷한 크기를 갖게 된다.</p><p class=\"font-light leading-normal mt-4 mb-2\">합병 정렬(Merge Sort)에서 설명했듯, 배열을 절반으로 나누고 정렬하는 과정을 반복하면 시간복잡도는 <code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\">O(nlogn)</code>이 된다. 따라서 평균적으로 퀵 소트도 합병 정렬과 같은 평균 시간 복잡도를 가지게 된다.</p></section></section><section aria-labelledby=\"quick-sorts는-왜-빠를까\"><h2 class=\"mt-8 mb-3 text-heading2 font-semibold leading-normal\" id=\"quick-sorts는-왜-빠를까\"><a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#quick-sorts는-왜-빠를까\"><span class=\"icon icon-link\"></span></a>Quick Sorts는 왜 빠를까?</h2><p class=\"font-light leading-normal mt-4 mb-2\">평균 시간 복잡도를 보아도 여전히 Merge Sort와 시간복잡도가 같다. 그렇다면 최악의 경우 더 느린 Quick Sort를 쓸 이유가 없어보인다. 하지만 지역성(Locality)에 의해 Quick Sort는 Merge Sort보다 평균적으로 더 빠른 속도를 가지게 된다.</p><p class=\"font-light leading-normal mt-4 mb-2\"><img alt=\"locality\" loading=\"lazy\" width=\"704\" height=\"300\" decoding=\"async\" data-nimg=\"1\" class=\"object-cover rounded-md mx-auto my-12 w-full max-w-[704px]\" style=\"color:transparent\" src=\"/next-blog/posts/algorithm-1-3-quick-sort/images/locality.gif\"/><br/>\n<!-- -->참조: <a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" href=\"https://stackoverflow.com/questions/7638932/what-is-locality-of-reference\">https://stackoverflow.com/questions/7638932/what-is-locality-of-reference</a></p><p class=\"font-light leading-normal mt-4 mb-2\">Locality, 지역성이란 CPU가 메모리를 참조할 땐, 주로 메모리 내의 인접한 영역을 반복적으로 참조하게 된다는 것이다.</p><p class=\"font-light leading-normal mt-4 mb-2\">메모리의 지역성은 시간적으로도, 공간적으로도 적용된다.</p><blockquote class=\"my-4 border-l-4 border-primary p-6 bg-gray-100 text-gray-700 [&amp;_*:first-child]:mt-0 [&amp;_*:last-child]:mb-0\">\n<p class=\"font-light leading-normal mt-4 mb-2\">시간적 지역성(Temporal Locality): 최근에 참조된 메모리는 곧 다시 참조될 확률이 높다.\n공간적 지역성(Spatial Locality): 최근에 참조한 메모리의 인접한 메모리를 참조하게 될 확률이 높다.</p>\n</blockquote><p class=\"font-light leading-normal mt-4 mb-2\">이러한 원리 덕에, 캐시가 유효한 전략이 된다.</p><p class=\"font-light leading-normal mt-4 mb-2\"><img alt=\"merge sort locality\" loading=\"lazy\" width=\"704\" height=\"300\" decoding=\"async\" data-nimg=\"1\" class=\"object-cover rounded-md mx-auto my-12 w-full max-w-[704px]\" style=\"color:transparent\" src=\"/next-blog/posts/algorithm-1-3-quick-sort/https:/i.imgur.com/oMbHRV9.gif\"/>\n<img alt=\"quick sort locality\" loading=\"lazy\" width=\"704\" height=\"300\" decoding=\"async\" data-nimg=\"1\" class=\"object-cover rounded-md mx-auto my-12 w-full max-w-[704px]\" style=\"color:transparent\" src=\"/next-blog/posts/algorithm-1-3-quick-sort/https:/i.imgur.com/GdAe2WF.gif\"/></p><p class=\"font-light leading-normal mt-4 mb-2\">참조: <a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" href=\"https://imgur.com/gallery/omL5k\">https://imgur.com/gallery/omL5k</a><br/>\n<!-- -->위: Merge Sort / 아래: Quick Sort</p><p class=\"font-light leading-normal mt-4 mb-2\">합병정렬은 전체 메모리를 순회하는 방식으로 정렬을 하지만 퀵소트는 국지적인 영역을 정렬하는 방식으로 정렬이 이루어지는 것을 볼 수 있다. 이 때문에 퀵 소트는 메모리 지역성을 제대로 활용하고 캐시의 수혜를 최대로 누리기 때문에 평균적으로 합병정렬보다 빠르게 된다.</p></section><section aria-labelledby=\"어떤-위치를-pivot으로-지정할-것인가-퀵소트-최적화\"><h2 class=\"mt-8 mb-3 text-heading2 font-semibold leading-normal\" id=\"어떤-위치를-pivot으로-지정할-것인가-퀵소트-최적화\"><a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#어떤-위치를-pivot으로-지정할-것인가-퀵소트-최적화\"><span class=\"icon icon-link\"></span></a>어떤 위치를 pivot으로 지정할 것인가 (퀵소트 최적화)</h2><section aria-labelledby=\"random-pivot\"><h3 class=\"mt-7 mb-2 text-heading3 font-semibold leading-normal\" id=\"random-pivot\"><a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#random-pivot\"><span class=\"icon icon-link\"></span></a>Random Pivot</h3><p class=\"font-light leading-normal mt-4 mb-2\">퀵소트는 배열이 pivot을 기준으로 비슷한 크기로 양분(partitioning)될 때 성능이 좋다.\n반대로 말하면 배열이 역순, 혹은 정순으로 정렬되어 있을수록 성능이 떨어진다.</p><p class=\"font-light leading-normal mt-4 mb-2\">따라서 랜덤성을 부여해 배열이 pivot을 기준으로 비슷한 크기로 양분될 확률을 높인다.</p><pre class=\"rounded-md [&amp;_code]:py-0 [&amp;_code]:px-0 line-numbers language-js\"><code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2 language-js\"><span class=\"code-line\"><span class=\"token keyword\">function</span> <span class=\"token function\">quicksort</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">index low<span class=\"token punctuation\">,</span> index high</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">  pivot <span class=\"token operator\">=</span> <span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>high <span class=\"token operator\">-</span> low<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> low<span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">  <span class=\"token comment\">// low ~ high를 pivot을 기준으로 양분한다.</span>\n</span><span class=\"code-line\">  <span class=\"token comment\">// 배열은 왼쪽은 pivot보다 작은 값, 오른쪽은 큰 값들이 오게 된다.</span>\n</span><span class=\"code-line\">  <span class=\"token function\">partition</span><span class=\"token punctuation\">(</span>low<span class=\"token punctuation\">,</span> high<span class=\"token punctuation\">,</span> pivot<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">  <span class=\"token comment\">// pivot보다 작은 값들을 정렬한다.</span>\n</span><span class=\"code-line\">  <span class=\"token function\">quicksort</span><span class=\"token punctuation\">(</span>low<span class=\"token punctuation\">,</span> pivot <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">  <span class=\"token comment\">// pivot보다 큰 값들을 정렬한다.</span>\n</span><span class=\"code-line\">  <span class=\"token function\">quicksort</span><span class=\"token punctuation\">(</span>pivot<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> high<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\"><span class=\"token punctuation\">}</span>\n</span></code></pre><p class=\"font-light leading-normal mt-4 mb-2\">하지만 이 방법은 근본적으로 배열의 양분을 보장하지 않기 때문에 안정성이 떨어진다.</p></section><section aria-labelledby=\"median-of-three-quicksort\"><h3 class=\"mt-7 mb-2 text-heading3 font-semibold leading-normal\" id=\"median-of-three-quicksort\"><a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#median-of-three-quicksort\"><span class=\"icon icon-link\"></span></a>Median of Three QuickSort</h3><p class=\"font-light leading-normal mt-4 mb-2\">양쪽이 가장 균등하게 나누어지려면, 이상적인 pivot은 arr[pivot]이 배열의 중앙값인 경우이다.\n물론 중앙값을 알기 위해선 배열을 서치해야한다. 매번 배열을 서치하면 복잡도는 n^2이나 다름없다.</p><p class=\"font-light leading-normal mt-4 mb-2\">따라서 표본 조사를 통해 중앙에 가까운 값을 찾는다. 이것이 Median of Three(세 값중 중앙값) 전략이다.</p><p class=\"font-light leading-normal mt-4 mb-2\">다음의 예시를 보자.</p><p class=\"font-light leading-normal mt-4 mb-2\"><code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\">3 1 4 1 5 9 2 6 5 3 5</code></p><p class=\"font-light leading-normal mt-4 mb-2\">맨 왼쪽, 중간, 오른쪽 값을 꺼낸다. 각각 3, 9, 5 이다. 이중 중앙값은 5이다. 따라서 5값에 해당하는 맨 오른쪽을 pivot으로 삼는다.</p><pre class=\"rounded-md [&amp;_code]:py-0 [&amp;_code]:px-0 line-numbers language-js\"><code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2 language-js\"><span class=\"code-line\"><span class=\"token keyword\">function</span> <span class=\"token function\">quicksort</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">index low<span class=\"token punctuation\">,</span> index high</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">  left <span class=\"token operator\">=</span> low<span class=\"token punctuation\">,</span> middle <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>low <span class=\"token operator\">+</span> high<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> right <span class=\"token operator\">=</span> high<span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">  <span class=\"token keyword control-flow\">if</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>middle<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> arr<span class=\"token punctuation\">[</span>left<span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;&amp;</span> arr<span class=\"token punctuation\">[</span>left<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> arr<span class=\"token punctuation\">[</span>right<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> arr<span class=\"token punctuation\">[</span>middle<span class=\"token punctuation\">]</span> <span class=\"token operator\">&gt;</span> arr<span class=\"token punctuation\">[</span>left<span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;&amp;</span> arr<span class=\"token punctuation\">[</span>left<span class=\"token punctuation\">]</span> <span class=\"token operator\">&gt;</span> arr<span class=\"token punctuation\">[</span>right<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">    pivot <span class=\"token operator\">=</span> left<span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">  <span class=\"token punctuation\">}</span>\n</span><span class=\"code-line\">  <span class=\"token keyword control-flow\">if</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>left<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> arr<span class=\"token punctuation\">[</span>middle<span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;&amp;</span> arr<span class=\"token punctuation\">[</span>middle<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> arr<span class=\"token punctuation\">[</span>right<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> arr<span class=\"token punctuation\">[</span>left<span class=\"token punctuation\">]</span> <span class=\"token operator\">&gt;</span> arr<span class=\"token punctuation\">[</span>middle<span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;&amp;</span> arr<span class=\"token punctuation\">[</span>middle<span class=\"token punctuation\">]</span> <span class=\"token operator\">&gt;</span> arr<span class=\"token punctuation\">[</span>right<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">    pivot <span class=\"token operator\">=</span> middle<span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">  <span class=\"token punctuation\">}</span>\n</span><span class=\"code-line\">  <span class=\"token keyword control-flow\">if</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>left<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> arr<span class=\"token punctuation\">[</span>right<span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;&amp;</span> arr<span class=\"token punctuation\">[</span>right<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> arr<span class=\"token punctuation\">[</span>middle<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>left<span class=\"token punctuation\">]</span> <span class=\"token operator\">&gt;</span> arr<span class=\"token punctuation\">[</span>right<span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;&amp;</span> arr<span class=\"token punctuation\">[</span>right<span class=\"token punctuation\">]</span> <span class=\"token operator\">&gt;</span> arr<span class=\"token punctuation\">[</span>middle<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">    pivot <span class=\"token operator\">=</span> right<span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">  <span class=\"token punctuation\">}</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">  <span class=\"token comment\">// low ~ high를 pivot을 기준으로 양분한다.</span>\n</span><span class=\"code-line\">  <span class=\"token comment\">// 배열은 왼쪽은 pivot보다 작은 값, 오른쪽은 큰 값들이 오게 된다.</span>\n</span><span class=\"code-line\">  <span class=\"token function\">partition</span><span class=\"token punctuation\">(</span>low<span class=\"token punctuation\">,</span> high<span class=\"token punctuation\">,</span> pivot<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">  <span class=\"token comment\">// pivot보다 작은 값들을 정렬한다.</span>\n</span><span class=\"code-line\">  <span class=\"token function\">quicksort</span><span class=\"token punctuation\">(</span>low<span class=\"token punctuation\">,</span> pivot <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">  <span class=\"token comment\">// pivot보다 큰 값들을 정렬한다.</span>\n</span><span class=\"code-line\">  <span class=\"token function\">quicksort</span><span class=\"token punctuation\">(</span>pivot<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> high<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\"><span class=\"token punctuation\">}</span>\n</span></code></pre><p class=\"font-light leading-normal mt-4 mb-2\">median of three 전략을 이용하면 배열이 정렬된 경우에도 균등분할을 보장하면서 (즉, 최악의 시나리오를 피하면서) 일반적인 상황에서 더욱 균등 분할이 이뤄지도록 확률을 보정한다.</p></section><section aria-labelledby=\"three-way-partitioning\"><h3 class=\"mt-7 mb-2 text-heading3 font-semibold leading-normal\" id=\"three-way-partitioning\"><a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#three-way-partitioning\"><span class=\"icon icon-link\"></span></a>Three-way partitioning</h3><p class=\"font-light leading-normal mt-4 mb-2\">배열에 같은 수가 많다면 자연스레 배열은 불균등하게 분할된다.\n예를 들어, [3,3,3,3,3,3] 배열을 보자.\npivot은 3, partition은 [], [3,3,3,3,3]이 될 것이다.</p><p class=\"font-light leading-normal mt-4 mb-2\">이를 해결하기 위한 방법은 간단하다. 파티션을 하나 더 두면 된다.</p><p class=\"font-light leading-normal mt-4 mb-2\">pivot보다 작은 값 / pivot보다 큰 값으로 구성한 2분 파티션이 아닌,\npivot보다 작은 값 / pivot과 같은 값 / pivot보다 큰 값으로 구성한 3분 파티션을 활용한다.</p><p class=\"font-light leading-normal mt-4 mb-2\">어차피 중간 파티션의 값들은 같은 값들이니 정렬할 필요가 없다. pivot보다 작은 값, pivot보다 큰 값들만 정렬하면 된다.\n이 방법은 같은 수가 많이 분포된 배열에서도 퀵소트의 성능 저하를 막을 수 있다.</p><pre class=\"rounded-md [&amp;_code]:py-0 [&amp;_code]:px-0 line-numbers language-js\"><code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2 language-js\"><span class=\"code-line\"><span class=\"token keyword\">function</span> <span class=\"token function\">quicksort</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">low<span class=\"token punctuation\">,</span> high</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">  <span class=\"token punctuation\">[</span>left<span class=\"token punctuation\">,</span> right<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">partition</span><span class=\"token punctuation\">(</span>low<span class=\"token punctuation\">,</span> high<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">  <span class=\"token function\">quicksort</span><span class=\"token punctuation\">(</span>low<span class=\"token punctuation\">,</span> left <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">  <span class=\"token function\">quicksort</span><span class=\"token punctuation\">(</span>right<span class=\"token punctuation\">,</span> high<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\"><span class=\"token punctuation\">}</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"token keyword\">function</span> <span class=\"token function\">partition</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">low<span class=\"token punctuation\">,</span>high</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">  pivot <span class=\"token operator\">=</span> low\n</span><span class=\"code-line\">  pivotValue <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">[</span>pivot<span class=\"token punctuation\">]</span>\n</span><span class=\"code-line\">  lt <span class=\"token operator\">=</span> low<span class=\"token punctuation\">,</span>\n</span><span class=\"code-line\">  gt <span class=\"token operator\">=</span> high\n</span><span class=\"code-line\">  i <span class=\"token operator\">=</span> low <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">  <span class=\"token keyword control-flow\">while</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">&lt;=</span>gt<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">    <span class=\"token keyword control-flow\">if</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> pivotValue<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">      <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>lt<span class=\"token punctuation\">,</span>i<span class=\"token punctuation\">)</span>\n</span><span class=\"code-line\">      i<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">      lt<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">    <span class=\"token punctuation\">}</span>\n</span><span class=\"code-line\">    <span class=\"token keyword control-flow\">else</span> <span class=\"token keyword control-flow\">if</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">&gt;</span> pivotValue<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">      <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span>gt<span class=\"token punctuation\">)</span>\n</span><span class=\"code-line\">      gt<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">    <span class=\"token punctuation\">}</span>\n</span><span class=\"code-line\">    <span class=\"token keyword control-flow\">else</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">      i<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">    <span class=\"token punctuation\">}</span>\n</span><span class=\"code-line\">  <span class=\"token punctuation\">}</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">  <span class=\"token keyword control-flow\">return</span> <span class=\"token punctuation\">[</span>lt<span class=\"token punctuation\">,</span>gt<span class=\"token punctuation\">]</span>\n</span><span class=\"code-line\"><span class=\"token punctuation\">}</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">example\n</span><span class=\"code-line\"><span class=\"token number\">3</span> <span class=\"token number\">1</span> <span class=\"token number\">4</span> <span class=\"token number\">1</span> <span class=\"token number\">5</span> <span class=\"token number\">9</span> <span class=\"token number\">2</span> <span class=\"token number\">6</span> <span class=\"token number\">5</span> <span class=\"token number\">3</span> <span class=\"token number\">5</span> <span class=\"token operator\">|</span> lt<span class=\"token operator\">=</span><span class=\"token number\">0</span> gt<span class=\"token operator\">=</span><span class=\"token number\">10</span> i<span class=\"token operator\">=</span><span class=\"token number\">1</span>\n</span><span class=\"code-line\"><span class=\"token number\">1</span> <span class=\"token number\">3</span> <span class=\"token number\">4</span> <span class=\"token number\">1</span> <span class=\"token number\">5</span> <span class=\"token number\">9</span> <span class=\"token number\">2</span> <span class=\"token number\">6</span> <span class=\"token number\">5</span> <span class=\"token number\">3</span> <span class=\"token number\">5</span> <span class=\"token operator\">|</span> lt<span class=\"token operator\">=</span><span class=\"token number\">1</span> gt<span class=\"token operator\">=</span><span class=\"token number\">10</span> i<span class=\"token operator\">=</span><span class=\"token number\">2</span>\n</span><span class=\"code-line\"><span class=\"token number\">1</span> <span class=\"token number\">3</span> <span class=\"token number\">5</span> <span class=\"token number\">1</span> <span class=\"token number\">5</span> <span class=\"token number\">9</span> <span class=\"token number\">2</span> <span class=\"token number\">6</span> <span class=\"token number\">5</span> <span class=\"token number\">3</span> <span class=\"token number\">4</span> <span class=\"token operator\">|</span> lt<span class=\"token operator\">=</span><span class=\"token number\">1</span> gt<span class=\"token operator\">=</span><span class=\"token number\">9</span> i<span class=\"token operator\">=</span><span class=\"token number\">2</span>\n</span><span class=\"code-line\"><span class=\"token number\">1</span> <span class=\"token number\">3</span> <span class=\"token number\">3</span> <span class=\"token number\">1</span> <span class=\"token number\">5</span> <span class=\"token number\">9</span> <span class=\"token number\">2</span> <span class=\"token number\">6</span> <span class=\"token number\">5</span> <span class=\"token number\">5</span> <span class=\"token number\">4</span> <span class=\"token operator\">|</span> lt<span class=\"token operator\">=</span><span class=\"token number\">1</span> gt<span class=\"token operator\">=</span><span class=\"token number\">8</span> i<span class=\"token operator\">=</span><span class=\"token number\">2</span>\n</span><span class=\"code-line\"><span class=\"token number\">1</span> <span class=\"token number\">3</span> <span class=\"token number\">3</span> <span class=\"token number\">1</span> <span class=\"token number\">5</span> <span class=\"token number\">9</span> <span class=\"token number\">2</span> <span class=\"token number\">6</span> <span class=\"token number\">5</span> <span class=\"token number\">5</span> <span class=\"token number\">4</span> <span class=\"token operator\">|</span> lt<span class=\"token operator\">=</span><span class=\"token number\">1</span> gt<span class=\"token operator\">=</span><span class=\"token number\">8</span> i<span class=\"token operator\">=</span><span class=\"token number\">3</span>\n</span><span class=\"code-line\"><span class=\"token number\">1</span> <span class=\"token number\">1</span> <span class=\"token number\">3</span> <span class=\"token number\">3</span> <span class=\"token number\">5</span> <span class=\"token number\">9</span> <span class=\"token number\">2</span> <span class=\"token number\">6</span> <span class=\"token number\">5</span> <span class=\"token number\">5</span> <span class=\"token number\">4</span> <span class=\"token operator\">|</span> lt<span class=\"token operator\">=</span><span class=\"token number\">2</span> gt<span class=\"token operator\">=</span><span class=\"token number\">8</span> i<span class=\"token operator\">=</span><span class=\"token number\">4</span>\n</span><span class=\"code-line\"><span class=\"token number\">1</span> <span class=\"token number\">1</span> <span class=\"token number\">3</span> <span class=\"token number\">3</span> <span class=\"token number\">5</span> <span class=\"token number\">9</span> <span class=\"token number\">2</span> <span class=\"token number\">6</span> <span class=\"token number\">5</span> <span class=\"token number\">5</span> <span class=\"token number\">4</span> <span class=\"token operator\">|</span> lt<span class=\"token operator\">=</span><span class=\"token number\">2</span> gt<span class=\"token operator\">=</span><span class=\"token number\">7</span> i<span class=\"token operator\">=</span><span class=\"token number\">4</span>\n</span><span class=\"code-line\"><span class=\"token number\">1</span> <span class=\"token number\">1</span> <span class=\"token number\">3</span> <span class=\"token number\">3</span> <span class=\"token number\">6</span> <span class=\"token number\">9</span> <span class=\"token number\">2</span> <span class=\"token number\">5</span> <span class=\"token number\">5</span> <span class=\"token number\">5</span> <span class=\"token number\">4</span> <span class=\"token operator\">|</span> lt<span class=\"token operator\">=</span><span class=\"token number\">2</span> gt<span class=\"token operator\">=</span><span class=\"token number\">6</span> i<span class=\"token operator\">=</span><span class=\"token number\">4</span>\n</span><span class=\"code-line\"><span class=\"token number\">1</span> <span class=\"token number\">1</span> <span class=\"token number\">3</span> <span class=\"token number\">3</span> <span class=\"token number\">2</span> <span class=\"token number\">9</span> <span class=\"token number\">6</span> <span class=\"token number\">5</span> <span class=\"token number\">5</span> <span class=\"token number\">5</span> <span class=\"token number\">4</span> <span class=\"token operator\">|</span> lt<span class=\"token operator\">=</span><span class=\"token number\">2</span> gt<span class=\"token operator\">=</span><span class=\"token number\">5</span> i<span class=\"token operator\">=</span><span class=\"token number\">4</span>\n</span><span class=\"code-line\"><span class=\"token number\">1</span> <span class=\"token number\">1</span> <span class=\"token number\">2</span> <span class=\"token number\">3</span> <span class=\"token number\">3</span> <span class=\"token number\">9</span> <span class=\"token number\">6</span> <span class=\"token number\">5</span> <span class=\"token number\">5</span> <span class=\"token number\">5</span> <span class=\"token number\">4</span> <span class=\"token operator\">|</span> lt<span class=\"token operator\">=</span><span class=\"token number\">3</span> gt<span class=\"token operator\">=</span><span class=\"token number\">5</span> i<span class=\"token operator\">=</span><span class=\"token number\">5</span>\n</span><span class=\"code-line\">\n</span></code></pre></section><section aria-labelledby=\"그-외\"><h3 class=\"mt-7 mb-2 text-heading3 font-semibold leading-normal\" id=\"그-외\"><a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#그-외\"><span class=\"icon icon-link\"></span></a>그 외</h3><p class=\"font-light leading-normal mt-4 mb-2\"><a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" href=\"https://www.geeksforgeeks.org/improvement-on-the-quick-sort-algorithm/\">https://www.geeksforgeeks.org/improvement-on-the-quick-sort-algorithm/</a></p><p class=\"font-light leading-normal mt-4 mb-2\">geeksforgeeks에서 더 많은 개선 방법들을 찾아볼 수 있다.</p></section></section></section><button class=\"__trds __trds button trds-inline-flex trds-justify-center trds-place-items-center trds-whitespace-nowrap trds-rounded-lg trds-text-md trds-font-medium trds-gap-2 trds-transition-colors trds-cursor-pointer disabled:trds-cursor-not-allowed disabled:trds-opacity-50 trds-bg-neutral trds-text-fg-neutral disabled:trds-bg-neutral enabled:hover:trds-bg-neutral-hover enabled:active:trds-bg-neutral-pressed __trds trds-h-11 trds-w-11 trds-px-0 trds-py-0\" type=\"button\" aria-disabled=\"false\" aria-busy=\"false\" aria-label=\"Share this article\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-share\"><path d=\"M4 12v8a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-8\"></path><polyline points=\"16 6 12 2 8 6\"></polyline><line x1=\"12\" x2=\"12\" y1=\"2\" y2=\"15\"></line></svg></button><div data-scope=\"toast\" data-part=\"group\" dir=\"ltr\" tabindex=\"-1\" aria-label=\"bottom Notifications alt+T\" id=\"toast-group:bottom\" data-placement=\"bottom\" data-side=\"bottom\" data-align=\"center\" aria-live=\"polite\" role=\"region\" style=\"position:fixed;pointer-events:none;display:flex;flex-direction:column;--gap:16px;--first-height:0px;z-index:2147483647;align-items:center;bottom:max(env(safe-area-inset-bottom, 0px), 1rem);inset-inline-end:calc(env(safe-area-inset-right, 0px) + 1rem);inset-inline-start:calc(env(safe-area-inset-left, 0px) + 1rem)\"></div></div><section id=\"author\"><div class=\"flex flex-row gap-4 items-center\"><div class=\"__trds trds-animate-shimmer trds-bg-clip-padding-box trds-text-transparent trds-cursor-default trds-pointer-events-none trds-select-none before::trds-invisible after::trds-invisible [&amp;_*]:trds-invisible trds-rounded-lg rounded-full\"><div data-scope=\"avatar\" data-part=\"root\" dir=\"ltr\" id=\"avatar::Rn7obtsra:\" class=\"trds-rounded-full trds-overflow-hidden w-16 h-16\"><img data-scope=\"avatar\" data-part=\"image\" hidden=\"\" dir=\"ltr\" id=\"avatar::Rn7obtsra::image\" data-state=\"hidden\" class=\"trds-bg-muted\"/><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"64\" height=\"64\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-user trds-bg-muted trds-w-full trds-h-full\" data-scope=\"avatar\" data-part=\"fallback\" dir=\"ltr\" id=\"avatar::Rn7obtsra::fallback\" data-state=\"visible\"><path d=\"M19 21v-2a4 4 0 0 0-4-4H9a4 4 0 0 0-4 4v2\"></path><circle cx=\"12\" cy=\"7\" r=\"4\"></circle></svg></div></div><div class=\"text-pretty flex flex-col gap-2\"><div class=\"__trds trds-animate-shimmer trds-bg-clip-padding-box trds-text-transparent trds-cursor-default trds-pointer-events-none trds-select-none before::trds-invisible after::trds-invisible [&amp;_*]:trds-invisible trds-rounded-lg h-fit w-fit\"><strong class=\"inline-block h-6 min-w-36\"> </strong></div><div class=\"__trds trds-animate-shimmer trds-bg-clip-padding-box trds-text-transparent trds-cursor-default trds-pointer-events-none trds-select-none before::trds-invisible after::trds-invisible [&amp;_*]:trds-invisible trds-rounded-lg h-fit w-fit\"><p class=\"whitespace-pre-wrap h-6 min-w-64\"></p></div></div></div></section><section><div class=\"giscus w-full min-w-screen-md\"></div></section></article></main><footer class=\"self-center w-full max-w-screen-md px-4 h-96\"><p>© 2024-<!-- -->2024<!-- --> <!-- -->dev2820<!-- -->. All rights reserved.</p></footer><script src=\"/next-blog/_next/static/chunks/webpack-8f27d743501d147d.js\" async=\"\"></script><script>(self.__next_f=self.__next_f||[]).push([0]);self.__next_f.push([2,null])</script><script>self.__next_f.push([1,\"1:HL[\\\"/next-blog/_next/static/media/3e7b7e3fd4560936-s.p.woff2\\\",\\\"font\\\",{\\\"crossOrigin\\\":\\\"\\\",\\\"type\\\":\\\"font/woff2\\\"}]\\n2:HL[\\\"/next-blog/_next/static/media/ff840cfebfb63b0c-s.p.woff2\\\",\\\"font\\\",{\\\"crossOrigin\\\":\\\"\\\",\\\"type\\\":\\\"font/woff2\\\"}]\\n3:HL[\\\"/next-blog/_next/static/css/16077bc16defb9b9.css\\\",\\\"style\\\"]\\n4:HL[\\\"/next-blog/_next/static/css/203da25389b4eeab.css\\\",\\\"style\\\"]\\n\"])</script><script>self.__next_f.push([1,\"5:I[5726,[],\\\"\\\"]\\n8:I[1699,[],\\\"\\\"]\\na:I[2579,[],\\\"\\\"]\\nb:I[3805,[\\\"805\\\",\\\"static/chunks/805-a8af350d35fb9160.js\\\",\\\"418\\\",\\\"static/chunks/app/posts/%5Bslug%5D/layout-1cf1294e1a2539f4.js\\\"],\\\"\\\"]\\nc:I[9618,[\\\"618\\\",\\\"static/chunks/618-f2bb34773a0d24b2.js\\\",\\\"991\\\",\\\"static/chunks/app/posts/page-e8c6275c8ebfad50.js\\\"],\\\"\\\"]\\nd:I[6210,[\\\"618\\\",\\\"static/chunks/618-f2bb34773a0d24b2.js\\\",\\\"372\\\",\\\"static/chunks/372-b649e69f56e8eb19.js\\\",\\\"185\\\",\\\"static/chunks/app/layout-c7fa40d911107206.js\\\"],\\\"BrandLogo\\\"]\\ne:I[9205,[\\\"618\\\",\\\"static/chunks/618-f2bb34773a0d24b2.js\\\",\\\"372\\\",\\\"static/chunks/372-b649e69f56e8eb19.js\\\",\\\"185\\\",\\\"static/chunks/app/layout-c7fa40d911107206.js\\\"],\\\"GlobalNavigationBar\\\"]\\n10:I[3141,[],\\\"\\\"]\\n9:[\\\"slug\\\",\\\"algorithm-1-3-quick-sort\\\",\\\"d\\\"]\\n11:[]\\n\"])</script><script>self.__next_f.push([1,\"0:[[[\\\"$\\\",\\\"link\\\",\\\"0\\\",{\\\"rel\\\":\\\"stylesheet\\\",\\\"href\\\":\\\"/next-blog/_next/static/css/16077bc16defb9b9.css\\\",\\\"precedence\\\":\\\"next\\\",\\\"crossOrigin\\\":\\\"$undefined\\\"}]],[\\\"$\\\",\\\"$L5\\\",null,{\\\"buildId\\\":\\\"FkDD4ed24GsUGsJlrpxW5\\\",\\\"assetPrefix\\\":\\\"/next-blog\\\",\\\"initialCanonicalUrl\\\":\\\"/posts/algorithm-1-3-quick-sort\\\",\\\"initialTree\\\":[\\\"\\\",{\\\"children\\\":[\\\"posts\\\",{\\\"children\\\":[[\\\"slug\\\",\\\"algorithm-1-3-quick-sort\\\",\\\"d\\\"],{\\\"children\\\":[\\\"__PAGE__?{\\\\\\\"slug\\\\\\\":\\\\\\\"algorithm-1-3-quick-sort\\\\\\\"}\\\",{}]}]}]},\\\"$undefined\\\",\\\"$undefined\\\",true],\\\"initialSeedData\\\":[\\\"\\\",{\\\"children\\\":[\\\"posts\\\",{\\\"children\\\":[[\\\"slug\\\",\\\"algorithm-1-3-quick-sort\\\",\\\"d\\\"],{\\\"children\\\":[\\\"__PAGE__\\\",{},[[\\\"$L6\\\",\\\"$L7\\\"],null],null]},[[[\\\"$\\\",\\\"$L8\\\",null,{\\\"parallelRouterKey\\\":\\\"children\\\",\\\"segmentPath\\\":[\\\"children\\\",\\\"posts\\\",\\\"children\\\",\\\"$9\\\",\\\"children\\\"],\\\"error\\\":\\\"$undefined\\\",\\\"errorStyles\\\":\\\"$undefined\\\",\\\"errorScripts\\\":\\\"$undefined\\\",\\\"template\\\":[\\\"$\\\",\\\"$La\\\",null,{}],\\\"templateStyles\\\":\\\"$undefined\\\",\\\"templateScripts\\\":\\\"$undefined\\\",\\\"notFound\\\":\\\"$undefined\\\",\\\"notFoundStyles\\\":\\\"$undefined\\\",\\\"styles\\\":null}],[\\\"$\\\",\\\"$Lb\\\",null,{\\\"src\\\":\\\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/prism.min.js\\\"}],[\\\"$\\\",\\\"$Lb\\\",null,{\\\"src\\\":\\\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-javascript.min.js\\\"}],[\\\"$\\\",\\\"$Lb\\\",null,{\\\"src\\\":\\\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-typescript.min.js\\\"}],[\\\"$\\\",\\\"$Lb\\\",null,{\\\"src\\\":\\\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-jsx.min.js\\\"}],[\\\"$\\\",\\\"$Lb\\\",null,{\\\"src\\\":\\\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-tsx.min.js\\\"}],[\\\"$\\\",\\\"$Lb\\\",null,{\\\"src\\\":\\\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-c.min.js\\\"}],[\\\"$\\\",\\\"$Lb\\\",null,{\\\"src\\\":\\\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/plugins/line-numbers/prism-line-numbers.min.js\\\"}]],null],null]},[\\\"$\\\",\\\"$L8\\\",null,{\\\"parallelRouterKey\\\":\\\"children\\\",\\\"segmentPath\\\":[\\\"children\\\",\\\"posts\\\",\\\"children\\\"],\\\"error\\\":\\\"$undefined\\\",\\\"errorStyles\\\":\\\"$undefined\\\",\\\"errorScripts\\\":\\\"$undefined\\\",\\\"template\\\":[\\\"$\\\",\\\"$La\\\",null,{}],\\\"templateStyles\\\":\\\"$undefined\\\",\\\"templateScripts\\\":\\\"$undefined\\\",\\\"notFound\\\":\\\"$undefined\\\",\\\"notFoundStyles\\\":\\\"$undefined\\\",\\\"styles\\\":[[\\\"$\\\",\\\"link\\\",\\\"0\\\",{\\\"rel\\\":\\\"stylesheet\\\",\\\"href\\\":\\\"/next-blog/_next/static/css/203da25389b4eeab.css\\\",\\\"precedence\\\":\\\"next\\\",\\\"crossOrigin\\\":\\\"$undefined\\\"}]]}],null]},[[\\\"$\\\",\\\"html\\\",null,{\\\"lang\\\":\\\"kr\\\",\\\"className\\\":\\\"__variable_fa65fd __variable_7691e4 scroll-smooth\\\",\\\"children\\\":[\\\"$\\\",\\\"body\\\",null,{\\\"className\\\":\\\"__className_fa65fd flex flex-col text-gray-800\\\",\\\"children\\\":[[\\\"$\\\",\\\"link\\\",null,{\\\"href\\\":\\\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/plugins/line-numbers/prism-line-numbers.min.css\\\",\\\"rel\\\":\\\"stylesheet\\\"}],[\\\"$\\\",\\\"header\\\",null,{\\\"className\\\":\\\"flex flex-row justify-center py-2 items-center self-center w-full max-w-screen-md px-4\\\",\\\"children\\\":[[\\\"$\\\",\\\"$Lc\\\",null,{\\\"href\\\":\\\"/\\\",\\\"children\\\":[\\\"$\\\",\\\"$Ld\\\",null,{\\\"height\\\":48}]}],[\\\"$\\\",\\\"div\\\",null,{\\\"className\\\":\\\"flex-1\\\"}],[\\\"$\\\",\\\"$Le\\\",null,{}]]}],[\\\"$\\\",\\\"main\\\",null,{\\\"className\\\":\\\"self-center w-full max-w-screen-md p-4 text-gray-800\\\",\\\"children\\\":[\\\"$\\\",\\\"$L8\\\",null,{\\\"parallelRouterKey\\\":\\\"children\\\",\\\"segmentPath\\\":[\\\"children\\\"],\\\"error\\\":\\\"$undefined\\\",\\\"errorStyles\\\":\\\"$undefined\\\",\\\"errorScripts\\\":\\\"$undefined\\\",\\\"template\\\":[\\\"$\\\",\\\"$La\\\",null,{}],\\\"templateStyles\\\":\\\"$undefined\\\",\\\"templateScripts\\\":\\\"$undefined\\\",\\\"notFound\\\":[\\\"$\\\",\\\"div\\\",null,{\\\"children\\\":[[\\\"$\\\",\\\"h2\\\",null,{\\\"children\\\":\\\"Not Found\\\"}],[\\\"$\\\",\\\"p\\\",null,{\\\"children\\\":\\\"Could not find requested resource\\\"}],[\\\"$\\\",\\\"$Lc\\\",null,{\\\"href\\\":\\\"/\\\",\\\"children\\\":\\\"Return Home\\\"}]]}],\\\"notFoundStyles\\\":[],\\\"styles\\\":null}]}],[\\\"$\\\",\\\"footer\\\",null,{\\\"className\\\":\\\"self-center w-full max-w-screen-md px-4 h-96\\\",\\\"children\\\":[\\\"$\\\",\\\"p\\\",null,{\\\"children\\\":[\\\"© 2024-\\\",2024,\\\" \\\",\\\"dev2820\\\",\\\". All rights reserved.\\\"]}]}]]}]}],null],null],\\\"couldBeIntercepted\\\":false,\\\"initialHead\\\":[null,\\\"$Lf\\\"],\\\"globalErrorComponent\\\":\\\"$10\\\",\\\"missingSlots\\\":\\\"$W11\\\"}]]\\n\"])</script><script>self.__next_f.push([1,\"12:I[2870,[\\\"587\\\",\\\"static/chunks/952ad60e-7cdac7b6bf36214c.js\\\",\\\"618\\\",\\\"static/chunks/618-f2bb34773a0d24b2.js\\\",\\\"372\\\",\\\"static/chunks/372-b649e69f56e8eb19.js\\\",\\\"805\\\",\\\"static/chunks/805-a8af350d35fb9160.js\\\",\\\"333\\\",\\\"static/chunks/app/posts/%5Bslug%5D/page-e951164d6ad6c144.js\\\"],\\\"TableOfContents\\\"]\\n13:I[6894,[\\\"587\\\",\\\"static/chunks/952ad60e-7cdac7b6bf36214c.js\\\",\\\"618\\\",\\\"static/chunks/618-f2bb34773a0d24b2.js\\\",\\\"372\\\",\\\"static/chunks/372-b649e69f56e8eb19.js\\\",\\\"805\\\",\\\"static/chunks/805-a8af350d35fb9160.js\\\",\\\"333\\\",\\\"static/chunks/app/posts/%5Bslug%5D/page-e951164d6ad6c144.js\\\"],\\\"Anchor\\\"]\\n14:I[5969,[\\\"587\\\",\\\"static/chunks/952ad60e-7cdac7b6bf36214c.js\\\",\\\"618\\\",\\\"static/chunks/618-f2bb34773a0d24b2.js\\\",\\\"372\\\",\\\"static/chunks/372-b649e69f56e8eb19.js\\\",\\\"805\\\",\\\"static/chunks/805-a8af350d35fb9160.js\\\",\\\"333\\\",\\\"static/chunks/app/posts/%5Bslug%5D/page-e951164d6ad6c144.js\\\"],\\\"Image\\\"]\\n15:I[4547,[\\\"587\\\",\\\"static/chunks/952ad60e-7cdac7b6bf36214c.js\\\",\\\"618\\\",\\\"static/chunks/618-f2bb34773a0d24b2.js\\\",\\\"372\\\",\\\"static/chunks/372-b649e69f56e8eb19.js\\\",\\\"805\\\",\\\"static/chunks/805-a8af350d35fb9160.js\\\",\\\"333\\\",\\\"static/chunks/app/posts/%5Bslug%5D/page-e951164d6ad6c144.js\\\"],\\\"ShareButton\\\"]\\n16:I[6398,[\\\"587\\\",\\\"static/chunks/952ad60e-7cdac7b6bf36214c.js\\\",\\\"618\\\",\\\"static/chunks/618-f2bb34773a0d24b2.js\\\",\\\"372\\\",\\\"static/chunks/372-b649e69f56e8eb19.js\\\",\\\"805\\\",\\\"static/chunks/805-a8af350d35fb9160.js\\\",\\\"333\\\",\\\"static/chunks/app/posts/%5Bslug%5D/page-e951164d6ad6c144.js\\\"],\\\"AuthorInfo\\\"]\\n\"])</script><script>self.__next_f.push([1,\"7:[\\\"$\\\",\\\"article\\\",null,{\\\"className\\\":\\\"relative\\\",\\\"children\\\":[[\\\"$\\\",\\\"header\\\",null,{\\\"id\\\":\\\"post-meta\\\",\\\"children\\\":[\\\"$undefined\\\",[\\\"$\\\",\\\"h1\\\",null,{\\\"className\\\":\\\"mt-10 mb-4 text-heading1 font-bold leading-normal\\\",\\\"id\\\":\\\"algorithm-1-3-quick-sort\\\",\\\"children\\\":\\\"algorithm-1-3-quick-sort\\\"}],[\\\"$\\\",\\\"time\\\",null,{\\\"dateTime\\\":\\\"2024-04-12\\\",\\\"aria-label\\\":\\\"Published on 2024-04-12\\\",\\\"children\\\":\\\"2024-04-12\\\"}],\\\" \\\",\\\"|\\\",\\\" \\\",[\\\"$\\\",\\\"time\\\",null,{\\\"dateTime\\\":\\\"PT3M\\\",\\\"aria-label\\\":\\\"Estimated reading time\\\",\\\"children\\\":[3,\\\" mins\\\"]}]]}],[\\\"$\\\",\\\"div\\\",null,{\\\"id\\\":\\\"content\\\",\\\"className\\\":\\\"relative\\\",\\\"children\\\":[[\\\"$\\\",\\\"div\\\",null,{\\\"id\\\":\\\"table-of-header\\\",\\\"className\\\":\\\"absolute -right-12 translate-x-full h-full w-52 desktop:block hidden\\\",\\\"children\\\":[\\\"$\\\",\\\"$L12\\\",null,{\\\"toc\\\":[{\\\"level\\\":2,\\\"content\\\":\\\"퀵 소트 동작 방식\\\",\\\"slug\\\":\\\"#퀵-소트-동작-방식\\\"},{\\\"level\\\":3,\\\"content\\\":\\\"퀵 소트 수도 코드\\\",\\\"slug\\\":\\\"#퀵-소트-수도-코드\\\"},{\\\"level\\\":2,\\\"content\\\":\\\"partition 함수 동작 방식\\\",\\\"slug\\\":\\\"#partition-함수-동작-방식\\\"},{\\\"level\\\":3,\\\"content\\\":\\\"partition 함수의 시간복잡도\\\",\\\"slug\\\":\\\"#partition-함수의-시간복잡도\\\"},{\\\"level\\\":2,\\\"content\\\":\\\"퀵 소트의 시간복잡도\\\",\\\"slug\\\":\\\"#퀵-소트의-시간복잡도\\\"},{\\\"level\\\":3,\\\"content\\\":\\\"최악 시간 복잡도\\\",\\\"slug\\\":\\\"#최악-시간-복잡도\\\"},{\\\"level\\\":3,\\\"content\\\":\\\"평균 시간 복잡도\\\",\\\"slug\\\":\\\"#평균-시간-복잡도\\\"},{\\\"level\\\":2,\\\"content\\\":\\\"Quick Sorts는 왜 빠를까?\\\",\\\"slug\\\":\\\"#quick-sorts는-왜-빠를까\\\"},{\\\"level\\\":2,\\\"content\\\":\\\"어떤 위치를 pivot으로 지정할 것인가 (퀵소트 최적화)\\\",\\\"slug\\\":\\\"#어떤-위치를-pivot으로-지정할-것인가-퀵소트-최적화\\\"},{\\\"level\\\":3,\\\"content\\\":\\\"Random Pivot\\\",\\\"slug\\\":\\\"#random-pivot\\\"},{\\\"level\\\":3,\\\"content\\\":\\\"Median of Three QuickSort\\\",\\\"slug\\\":\\\"#median-of-three-quicksort\\\"},{\\\"level\\\":3,\\\"content\\\":\\\"Three-way partitioning\\\",\\\"slug\\\":\\\"#three-way-partitioning\\\"},{\\\"level\\\":3,\\\"content\\\":\\\"그 외\\\",\\\"slug\\\":\\\"#그-외\\\"}],\\\"className\\\":\\\"sticky top-24\\\"}]}],[\\\"$\\\",\\\"section\\\",null,{\\\"aria-labelledby\\\":\\\"13-퀵-정렬-quick-sort\\\",\\\"children\\\":[[\\\"$\\\",\\\"h1\\\",null,{\\\"className\\\":\\\"mt-10 mb-4 text-heading1 font-bold leading-normal\\\",\\\"id\\\":\\\"13-퀵-정렬-quick-sort\\\",\\\"children\\\":[[\\\"$\\\",\\\"$L13\\\",null,{\\\"aria-hidden\\\":\\\"true\\\",\\\"tabIndex\\\":\\\"-1\\\",\\\"href\\\":\\\"#13-퀵-정렬-quick-sort\\\",\\\"children\\\":[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"icon icon-link\\\"}]}],\\\"1.3 퀵 정렬 (Quick Sort)\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":[[\\\"$\\\",\\\"$L14\\\",null,{\\\"className\\\":\\\"object-cover rounded-md mx-auto my-12 w-full max-w-[704px]\\\",\\\"src\\\":\\\"/next-blog/posts/algorithm-1-3-quick-sort/https:/upload.wikimedia.org/wikipedia/commons/6/6a/Sorting_quicksort_anim.gif\\\",\\\"alt\\\":\\\"퀵 정렬\\\",\\\"width\\\":704,\\\"height\\\":300}],[\\\"$\\\",\\\"br\\\",null,{}],\\\"\\\\n\\\",\\\"출처: \\\",[\\\"$\\\",\\\"$L13\\\",null,{\\\"href\\\":\\\"https://ko.wikipedia.org/wiki/%ED%80%B5_%EC%A0%95%EB%A0%AC\\\",\\\"children\\\":\\\"https://ko.wikipedia.org/wiki/%ED%80%B5_%EC%A0%95%EB%A0%AC\\\"}],\\\"\\\\n빠르다고 알려진 퀵 소트(분할교환정렬) 또한 분할 정복을 이용한 예시이다.\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"분할 정복의 논지는 다음과 같다.\\\"}],[\\\"$\\\",\\\"blockquote\\\",null,{\\\"className\\\":\\\"my-4 border-l-4 border-primary p-6 bg-gray-100 text-gray-700 [\\u0026_*:first-child]:mt-0 [\\u0026_*:last-child]:mb-0\\\",\\\"children\\\":[\\\"\\\\n\\\",[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"피봇(pivot)을 기준으로 왼쪽은 피봇보다 작은 값, 오른쪽은 피봇보다 큰 값을 옮긴다.\\\"}],\\\"\\\\n\\\",[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"왼쪽 영역과 오른쪽 영역을 정렬한다.\\\"}],\\\"\\\\n\\\",[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"=\\u003e 모든 영역이 정렬 되었다.\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"방식은 합병 정렬과 비슷하지만, 배열을 분할하는 방식이 다르다.\\\"}],[\\\"$\\\",\\\"section\\\",null,{\\\"aria-labelledby\\\":\\\"퀵-소트-동작-방식\\\",\\\"children\\\":[[\\\"$\\\",\\\"h2\\\",null,{\\\"className\\\":\\\"mt-8 mb-3 text-heading2 font-semibold leading-normal\\\",\\\"id\\\":\\\"퀵-소트-동작-방식\\\",\\\"children\\\":[[\\\"$\\\",\\\"$L13\\\",null,{\\\"aria-hidden\\\":\\\"true\\\",\\\"tabIndex\\\":\\\"-1\\\",\\\"href\\\":\\\"#퀵-소트-동작-방식\\\",\\\"children\\\":[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"icon icon-link\\\"}]}],\\\"퀵 소트 동작 방식\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"원소가 하나면 정렬할 필요가 없다.\\\"}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"첫번째 원소를 피봇으로 지정한다고 하자.\\\"}],[\\\"$\\\",\\\"pre\\\",null,{\\\"className\\\":\\\"rounded-md [\\u0026_code]:py-0 [\\u0026_code]:px-0 line-numbers\\\",\\\"children\\\":[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"15 22 13 27 12 10 20 25\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"▲\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"(pivot)\\\\n\\\"}]]}]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"pivot(15)를 기준으로 pivot 오른쪽 원소부터 pivot보다 작은 값을 pivot 왼쪽으로 옮긴다.\\\"}],[\\\"$\\\",\\\"pre\\\",null,{\\\"className\\\":\\\"rounded-md [\\u0026_code]:py-0 [\\u0026_code]:px-0 line-numbers\\\",\\\"children\\\":[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"13 12 10 15 22 27 20 25\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"         ▲\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"      (pivot)\\\\n\\\"}]]}]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"pivot 왼쪽과 오른쪽 영역을 각각 정렬한다. (퀵소트 재귀호출)\\\"}],[\\\"$\\\",\\\"pre\\\",null,{\\\"className\\\":\\\"rounded-md [\\u0026_code]:py-0 [\\u0026_code]:px-0 line-numbers\\\",\\\"children\\\":[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\\\",\\\"children\\\":[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"10 12 13 15 20 22 25 27\\\\n\\\"}]}]}],[\\\"$\\\",\\\"section\\\",null,{\\\"aria-labelledby\\\":\\\"퀵-소트-수도-코드\\\",\\\"children\\\":[[\\\"$\\\",\\\"h3\\\",null,{\\\"className\\\":\\\"mt-7 mb-2 text-heading3 font-semibold leading-normal\\\",\\\"id\\\":\\\"퀵-소트-수도-코드\\\",\\\"children\\\":[[\\\"$\\\",\\\"$L13\\\",null,{\\\"aria-hidden\\\":\\\"true\\\",\\\"tabIndex\\\":\\\"-1\\\",\\\"href\\\":\\\"#퀵-소트-수도-코드\\\",\\\"children\\\":[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"icon icon-link\\\"}]}],\\\"퀵 소트 수도 코드\\\"]}],[\\\"$\\\",\\\"pre\\\",null,{\\\"className\\\":\\\"rounded-md [\\u0026_code]:py-0 [\\u0026_code]:px-0 line-numbers language-js\\\",\\\"children\\\":[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2 language-js\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword\\\",\\\"children\\\":\\\"function\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token function\\\",\\\"children\\\":\\\"quicksort\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token parameter\\\",\\\"children\\\":[\\\"index low\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],\\\" index high\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"{\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  pivot \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" low\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token comment\\\",\\\"children\\\":\\\"// low ~ high를 pivot을 기준으로 양분한다.\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token comment\\\",\\\"children\\\":\\\"// 배열은 왼쪽은 pivot보다 작은 값, 오른쪽은 큰 값들이 오게 된다.\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  divide \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token function\\\",\\\"children\\\":\\\"partition\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"low\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],\\\" high\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],\\\" pivot\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token comment\\\",\\\"children\\\":\\\"// pivot보다 작은 값들을 정렬한다.\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token function\\\",\\\"children\\\":\\\"quicksort\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"low\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],\\\" divide \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"-\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"1\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token comment\\\",\\\"children\\\":\\\"// pivot보다 큰 값들을 정렬한다.\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token function\\\",\\\"children\\\":\\\"quicksort\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"divide \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"+\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"1\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],\\\" high\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"}\\\"}],\\\"\\\\n\\\"]}]]}]}]]}]]}],[\\\"$\\\",\\\"section\\\",null,{\\\"aria-labelledby\\\":\\\"partition-함수-동작-방식\\\",\\\"children\\\":[[\\\"$\\\",\\\"h2\\\",null,{\\\"className\\\":\\\"mt-8 mb-3 text-heading2 font-semibold leading-normal\\\",\\\"id\\\":\\\"partition-함수-동작-방식\\\",\\\"children\\\":[[\\\"$\\\",\\\"$L13\\\",null,{\\\"aria-hidden\\\":\\\"true\\\",\\\"tabIndex\\\":\\\"-1\\\",\\\"href\\\":\\\"#partition-함수-동작-방식\\\",\\\"children\\\":[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"icon icon-link\\\"}]}],\\\"partition 함수 동작 방식\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"partition은 pivot보다 큰수, 작은 수로 배열을 분할하는 함수이다. 먼저 pivot을 배열의 첫 번째 값으로 잡는 경우의 알고리즘이다.\\\"}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"파티션(partition)함수의 논지는 다음과 같다.\\\"}],[\\\"$\\\",\\\"blockquote\\\",null,{\\\"className\\\":\\\"my-4 border-l-4 border-primary p-6 bg-gray-100 text-gray-700 [\\u0026_*:first-child]:mt-0 [\\u0026_*:last-child]:mb-0\\\",\\\"children\\\":[\\\"\\\\n\\\",[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"피봇을 제외한 원소들을 순회하며 pivot보다 큰 값이지만 왼쪽에 있는 값, pivot보다 작은 값이지만 오른쪽에 있는 값을 찾게 되면 둘을 swap한다.\\\"}],\\\"\\\\n\\\",[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"2개의 index가 필요하다. 하나는 배열 왼쪽에서 시작하며 pivot보다 큰 값을 찾는 용도이다. 다른 하나는 배열 오른쪽에서 시작하며 pivot보다 작은 값을 찾는 용도이다. 각각을 i, j 라고 하겠다.\\\"}],\\\"\\\\n\\\",[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"i = 1, j = arr.length - 1이다.\\\"}],\\\"\\\\n\\\",[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"arr[i]가 pivot보다 큰 값을 만날 때까지 i를 1씩 증가시킨다.\\\"}],\\\"\\\\n\\\",[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"arr[j]가 pivot보다 작은 값을 만날 때까지 j를 1씩 감소시킨다.\\\"}],\\\"\\\\n\\\",[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"pivot보다 큰 arr[i], pivot보다 작은 arr[j]를 만나면 두 값을 swap한다.\\\"}],\\\"\\\\n\\\",[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"swap한 뒤 다시 2번으로 간다.\\\"}],\\\"\\\\n\\\",[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"i와 j가 만나면 순회를 종료한다.\\\"}],\\\"\\\\n\\\",[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"pivot과 i-1를 swap한다.\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"pre\\\",null,{\\\"className\\\":\\\"rounded-md [\\u0026_code]:py-0 [\\u0026_code]:px-0 line-numbers language-js\\\",\\\"children\\\":[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2 language-js\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword\\\",\\\"children\\\":\\\"function\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token function\\\",\\\"children\\\":\\\"partition\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token parameter\\\",\\\"children\\\":[\\\"low\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],\\\"high\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],\\\"pivot\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"{\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  i\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\"low\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],\\\" j\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\"high\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token function\\\",\\\"children\\\":\\\"whlie\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token parameter\\\",\\\"children\\\":[\\\"i\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"\\u003c\\\"}],\\\"j\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"{\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"    \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword control-flow\\\",\\\"children\\\":\\\"while\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"arr\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"[\\\"}],\\\"i\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"]\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"\\u003c=\\\"}],\\\" arr\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"[\\\"}],\\\"pivot\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"]\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"{\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"      i\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"++\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"      \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword control-flow\\\",\\\"children\\\":\\\"if\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"i\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"\\u003e=\\\"}],\\\"j\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"{\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"        \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword control-flow\\\",\\\"children\\\":\\\"break\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"      \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"}\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"    \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"}\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"    \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword control-flow\\\",\\\"children\\\":\\\"while\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"arr\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"[\\\"}],\\\"j\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"]\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"\\u003e=\\\"}],\\\" arr\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"[\\\"}],\\\"pivot\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"]\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"{\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"      j\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"--\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"      \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword control-flow\\\",\\\"children\\\":\\\"if\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"i\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"\\u003e=\\\"}],\\\"j\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"{\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"        \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword control-flow\\\",\\\"children\\\":\\\"break\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"      \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"}\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"    \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"}\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"    \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token function\\\",\\\"children\\\":\\\"swap\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"i\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],\\\"j\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"}\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token function\\\",\\\"children\\\":\\\"swap\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"i\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"-\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"1\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],\\\"pivot\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"}\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"15\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"22\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"13\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"27\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"12\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"10\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"20\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"25\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token parameter\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token literal-property property\\\",\\\"children\\\":\\\"i\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\":\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"1\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token literal-property property\\\",\\\"children\\\":\\\"j\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\":\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"7\\\"}]]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token arrow operator\\\",\\\"children\\\":\\\"=\\u003e\\\"}],\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"15\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"\\u003c\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"22\\\"}],\\\"이므로 i\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"1\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],\\\" i 증가를 중단한다\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\".\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token arrow operator\\\",\\\"children\\\":\\\"=\\u003e\\\"}],\\\" j를 \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"1\\\"}],\\\"씩 감소시키며 \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"15\\\"}],\\\"보다 작은 값을 찾는다\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\".\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"15\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"22\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"13\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"27\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"12\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"10\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"20\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"25\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token parameter\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token literal-property property\\\",\\\"children\\\":\\\"i\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\":\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"1\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token literal-property property\\\",\\\"children\\\":\\\"j\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\":\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"5\\\"}]]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token arrow operator\\\",\\\"children\\\":\\\"=\\u003e\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"15\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"\\u003e\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"10\\\"}],\\\"이므로 j\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"5\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],\\\" j 감소를 중단한다\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\".\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token arrow operator\\\",\\\"children\\\":\\\"=\\u003e\\\"}],\\\" i와 j를 swap한다\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\".\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token arrow operator\\\",\\\"children\\\":\\\"=\\u003e\\\"}],\\\" i를 \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"1\\\"}],\\\"씩 증가시킨다\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\".\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"15\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"10\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"13\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"27\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"12\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"22\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"20\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"25\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token parameter\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token literal-property property\\\",\\\"children\\\":\\\"i\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\":\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"3\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token literal-property property\\\",\\\"children\\\":\\\"j\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\":\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"5\\\"}]]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token arrow operator\\\",\\\"children\\\":\\\"=\\u003e\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"15\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"\\u003c\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"27\\\"}],\\\"이므로 i 증가를 중단한다\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\".\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token arrow operator\\\",\\\"children\\\":\\\"=\\u003e\\\"}],\\\" j를 \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"1\\\"}],\\\"씩 감소시키며 \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"15\\\"}],\\\"보다 작은 값을 찾는다\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\".\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"15\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"10\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"13\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"27\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"12\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"22\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"20\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"25\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token parameter\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token literal-property property\\\",\\\"children\\\":\\\"i\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\":\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"3\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token literal-property property\\\",\\\"children\\\":\\\"j\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\":\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"4\\\"}]]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token arrow operator\\\",\\\"children\\\":\\\"=\\u003e\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"15\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"\\u003e\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"12\\\"}],\\\"이므로 j 감소를 중단한다\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\".\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token arrow operator\\\",\\\"children\\\":\\\"=\\u003e\\\"}],\\\" i와 j를 swap한다\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\".\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token arrow operator\\\",\\\"children\\\":\\\"=\\u003e\\\"}],\\\" i를 \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"1\\\"}],\\\"씩 증가시킨다\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\".\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"15\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"10\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"13\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"12\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"27\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"22\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"20\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"25\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token parameter\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token literal-property property\\\",\\\"children\\\":\\\"i\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\":\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"4\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token literal-property property\\\",\\\"children\\\":\\\"j\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\":\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"4\\\"}]]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token arrow operator\\\",\\\"children\\\":\\\"=\\u003e\\\"}],\\\" i와 j가 같아졌기 때문에 i 증가를 중단한다\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\".\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token arrow operator\\\",\\\"children\\\":\\\"=\\u003e\\\"}],\\\" 마지막으로 pivot보다 작은 값이 있었던 위치인 i\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"-\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"1\\\"}],\\\"과 pivot을 스왑한다\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\".\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"12\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"10\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"13\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"15\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"27\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"22\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"20\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"25\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token parameter\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token literal-property property\\\",\\\"children\\\":\\\"i\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\":\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"4\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token literal-property property\\\",\\\"children\\\":\\\"j\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\":\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"4\\\"}]]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token arrow operator\\\",\\\"children\\\":\\\"=\\u003e\\\"}],\\\" 종료\\\\n\\\"]}]]}]}],[\\\"$\\\",\\\"section\\\",null,{\\\"aria-labelledby\\\":\\\"partition-함수의-시간복잡도\\\",\\\"children\\\":[[\\\"$\\\",\\\"h3\\\",null,{\\\"className\\\":\\\"mt-7 mb-2 text-heading3 font-semibold leading-normal\\\",\\\"id\\\":\\\"partition-함수의-시간복잡도\\\",\\\"children\\\":[[\\\"$\\\",\\\"$L13\\\",null,{\\\"aria-hidden\\\":\\\"true\\\",\\\"tabIndex\\\":\\\"-1\\\",\\\"href\\\":\\\"#partition-함수의-시간복잡도\\\",\\\"children\\\":[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"icon icon-link\\\"}]}],\\\"partition 함수의 시간복잡도\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":[\\\"n 길이 배열을 pivot을 제외한 모든 원소를 순회하기 때문에 \\\",[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\\\",\\\"children\\\":\\\"T(n) = n-1\\\"}],\\\"이다.\\\"]}]]}]]}],[\\\"$\\\",\\\"section\\\",null,{\\\"aria-labelledby\\\":\\\"퀵-소트의-시간복잡도\\\",\\\"children\\\":[[\\\"$\\\",\\\"h2\\\",null,{\\\"className\\\":\\\"mt-8 mb-3 text-heading2 font-semibold leading-normal\\\",\\\"id\\\":\\\"퀵-소트의-시간복잡도\\\",\\\"children\\\":[[\\\"$\\\",\\\"$L13\\\",null,{\\\"aria-hidden\\\":\\\"true\\\",\\\"tabIndex\\\":\\\"-1\\\",\\\"href\\\":\\\"#퀵-소트의-시간복잡도\\\",\\\"children\\\":[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"icon icon-link\\\"}]}],\\\"퀵 소트의 시간복잡도\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"퀵 소트는 일정한 시간복잡도를 가지지 않는다. 따라서 평균 시간 복잡도와 최악 시간 복잡도만 계산한다.\\\"}],[\\\"$\\\",\\\"section\\\",null,{\\\"aria-labelledby\\\":\\\"최악-시간-복잡도\\\",\\\"children\\\":[[\\\"$\\\",\\\"h3\\\",null,{\\\"className\\\":\\\"mt-7 mb-2 text-heading3 font-semibold leading-normal\\\",\\\"id\\\":\\\"최악-시간-복잡도\\\",\\\"children\\\":[[\\\"$\\\",\\\"$L13\\\",null,{\\\"aria-hidden\\\":\\\"true\\\",\\\"tabIndex\\\":\\\"-1\\\",\\\"href\\\":\\\"#최악-시간-복잡도\\\",\\\"children\\\":[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"icon icon-link\\\"}]}],\\\"최악 시간 복잡도\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"완전히 정렬된 경우, 혹은 역순 정렬된 경우 최악의 시간 복잡도를 가지게 된다. pivot을 제외한 배열을 다시 정렬해야하기 때문이다. 즉, partition의 크기가 불균형을 이룰수록 시간 복잡도가 커진다.\\\"}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"예를 들어 1,2,3,4,5 배열을 quicksort해보자.\\\"}],[\\\"$\\\",\\\"blockquote\\\",null,{\\\"className\\\":\\\"my-4 border-l-4 border-primary p-6 bg-gray-100 text-gray-700 [\\u0026_*:first-child]:mt-0 [\\u0026_*:last-child]:mb-0\\\",\\\"children\\\":[\\\"\\\\n\\\",[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"pivot = 0\\\"}],\\\"\\\\n\\\",[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"1,2,3,4,5\\\"}],\\\"\\\\n\\\",[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"quicksort([1,2,3,4,5])\\\"}],\\\"\\\\n\\\",[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"= partition([1,2,3,4,5]) + quicksort([]) + quicksort([2,3,4,5])\\\"}],\\\"\\\\n\\\",[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"quicksort([2,3,4,5])\\\"}],\\\"\\\\n\\\",[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"= partition([2,3,4,5]) + quicksort([]) + quicksort([3,4,5])\\\"}],\\\"\\\\n\\\",[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"...\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"위의 경우 [1,2,3,4,5] 정렬 + [2,3,4,5] 정렬 + [3,4,5] 정렬 + [4,5] 정렬 + [5] 정렬\\\"}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"= 4+3+2+1\\\"}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"= 10\\\"}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":[\\\"일반화하면 \\\",[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\\\",\\\"children\\\":\\\"1+2+3+...+n-1 = n*(n-1)/2\\\"}]]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":[\\\"시간복잡도는 \\\",[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\\\",\\\"children\\\":\\\"O(n^2)\\\"}],\\\" 이다.\\\"]}]]}],[\\\"$\\\",\\\"section\\\",null,{\\\"aria-labelledby\\\":\\\"평균-시간-복잡도\\\",\\\"children\\\":[[\\\"$\\\",\\\"h3\\\",null,{\\\"className\\\":\\\"mt-7 mb-2 text-heading3 font-semibold leading-normal\\\",\\\"id\\\":\\\"평균-시간-복잡도\\\",\\\"children\\\":[[\\\"$\\\",\\\"$L13\\\",null,{\\\"aria-hidden\\\":\\\"true\\\",\\\"tabIndex\\\":\\\"-1\\\",\\\"href\\\":\\\"#평균-시간-복잡도\\\",\\\"children\\\":[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"icon icon-link\\\"}]}],\\\"평균 시간 복잡도\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"최악 시간 복잡도가 n^2이라니, 전혀 quick하지 않다. 하지만 quick sort는 평균적인 상황에서 꽤 준수한 성능을 보여준다.\\\"}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"평균적인 상황에서 배열의 원소는 무작위로 흩어져있을 것이다. 따라서 평균적으로 피봇보다 작은 원소들의 배열과 피봇보다 큰 원소들의 배열은 평균적으로 비슷한 크기를 갖게 된다.\\\"}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":[\\\"합병 정렬(Merge Sort)에서 설명했듯, 배열을 절반으로 나누고 정렬하는 과정을 반복하면 시간복잡도는 \\\",[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\\\",\\\"children\\\":\\\"O(nlogn)\\\"}],\\\"이 된다. 따라서 평균적으로 퀵 소트도 합병 정렬과 같은 평균 시간 복잡도를 가지게 된다.\\\"]}]]}]]}],[\\\"$\\\",\\\"section\\\",null,{\\\"aria-labelledby\\\":\\\"quick-sorts는-왜-빠를까\\\",\\\"children\\\":[[\\\"$\\\",\\\"h2\\\",null,{\\\"className\\\":\\\"mt-8 mb-3 text-heading2 font-semibold leading-normal\\\",\\\"id\\\":\\\"quick-sorts는-왜-빠를까\\\",\\\"children\\\":[[\\\"$\\\",\\\"$L13\\\",null,{\\\"aria-hidden\\\":\\\"true\\\",\\\"tabIndex\\\":\\\"-1\\\",\\\"href\\\":\\\"#quick-sorts는-왜-빠를까\\\",\\\"children\\\":[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"icon icon-link\\\"}]}],\\\"Quick Sorts는 왜 빠를까?\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"평균 시간 복잡도를 보아도 여전히 Merge Sort와 시간복잡도가 같다. 그렇다면 최악의 경우 더 느린 Quick Sort를 쓸 이유가 없어보인다. 하지만 지역성(Locality)에 의해 Quick Sort는 Merge Sort보다 평균적으로 더 빠른 속도를 가지게 된다.\\\"}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":[[\\\"$\\\",\\\"$L14\\\",null,{\\\"className\\\":\\\"object-cover rounded-md mx-auto my-12 w-full max-w-[704px]\\\",\\\"src\\\":\\\"/next-blog/posts/algorithm-1-3-quick-sort/images/locality.gif\\\",\\\"alt\\\":\\\"locality\\\",\\\"width\\\":704,\\\"height\\\":300}],[\\\"$\\\",\\\"br\\\",null,{}],\\\"\\\\n\\\",\\\"참조: \\\",[\\\"$\\\",\\\"$L13\\\",null,{\\\"href\\\":\\\"https://stackoverflow.com/questions/7638932/what-is-locality-of-reference\\\",\\\"children\\\":\\\"https://stackoverflow.com/questions/7638932/what-is-locality-of-reference\\\"}]]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"Locality, 지역성이란 CPU가 메모리를 참조할 땐, 주로 메모리 내의 인접한 영역을 반복적으로 참조하게 된다는 것이다.\\\"}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"메모리의 지역성은 시간적으로도, 공간적으로도 적용된다.\\\"}],[\\\"$\\\",\\\"blockquote\\\",null,{\\\"className\\\":\\\"my-4 border-l-4 border-primary p-6 bg-gray-100 text-gray-700 [\\u0026_*:first-child]:mt-0 [\\u0026_*:last-child]:mb-0\\\",\\\"children\\\":[\\\"\\\\n\\\",[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"시간적 지역성(Temporal Locality): 최근에 참조된 메모리는 곧 다시 참조될 확률이 높다.\\\\n공간적 지역성(Spatial Locality): 최근에 참조한 메모리의 인접한 메모리를 참조하게 될 확률이 높다.\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"이러한 원리 덕에, 캐시가 유효한 전략이 된다.\\\"}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":[[\\\"$\\\",\\\"$L14\\\",null,{\\\"className\\\":\\\"object-cover rounded-md mx-auto my-12 w-full max-w-[704px]\\\",\\\"src\\\":\\\"/next-blog/posts/algorithm-1-3-quick-sort/https:/i.imgur.com/oMbHRV9.gif\\\",\\\"alt\\\":\\\"merge sort locality\\\",\\\"width\\\":704,\\\"height\\\":300}],\\\"\\\\n\\\",[\\\"$\\\",\\\"$L14\\\",null,{\\\"className\\\":\\\"object-cover rounded-md mx-auto my-12 w-full max-w-[704px]\\\",\\\"src\\\":\\\"/next-blog/posts/algorithm-1-3-quick-sort/https:/i.imgur.com/GdAe2WF.gif\\\",\\\"alt\\\":\\\"quick sort locality\\\",\\\"width\\\":704,\\\"height\\\":300}]]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":[\\\"참조: \\\",[\\\"$\\\",\\\"$L13\\\",null,{\\\"href\\\":\\\"https://imgur.com/gallery/omL5k\\\",\\\"children\\\":\\\"https://imgur.com/gallery/omL5k\\\"}],[\\\"$\\\",\\\"br\\\",null,{}],\\\"\\\\n\\\",\\\"위: Merge Sort / 아래: Quick Sort\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"합병정렬은 전체 메모리를 순회하는 방식으로 정렬을 하지만 퀵소트는 국지적인 영역을 정렬하는 방식으로 정렬이 이루어지는 것을 볼 수 있다. 이 때문에 퀵 소트는 메모리 지역성을 제대로 활용하고 캐시의 수혜를 최대로 누리기 때문에 평균적으로 합병정렬보다 빠르게 된다.\\\"}]]}],[\\\"$\\\",\\\"section\\\",null,{\\\"aria-labelledby\\\":\\\"어떤-위치를-pivot으로-지정할-것인가-퀵소트-최적화\\\",\\\"children\\\":[[\\\"$\\\",\\\"h2\\\",null,{\\\"className\\\":\\\"mt-8 mb-3 text-heading2 font-semibold leading-normal\\\",\\\"id\\\":\\\"어떤-위치를-pivot으로-지정할-것인가-퀵소트-최적화\\\",\\\"children\\\":[[\\\"$\\\",\\\"$L13\\\",null,{\\\"aria-hidden\\\":\\\"true\\\",\\\"tabIndex\\\":\\\"-1\\\",\\\"href\\\":\\\"#어떤-위치를-pivot으로-지정할-것인가-퀵소트-최적화\\\",\\\"children\\\":[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"icon icon-link\\\"}]}],\\\"어떤 위치를 pivot으로 지정할 것인가 (퀵소트 최적화)\\\"]}],[\\\"$\\\",\\\"section\\\",null,{\\\"aria-labelledby\\\":\\\"random-pivot\\\",\\\"children\\\":[[\\\"$\\\",\\\"h3\\\",null,{\\\"className\\\":\\\"mt-7 mb-2 text-heading3 font-semibold leading-normal\\\",\\\"id\\\":\\\"random-pivot\\\",\\\"children\\\":[[\\\"$\\\",\\\"$L13\\\",null,{\\\"aria-hidden\\\":\\\"true\\\",\\\"tabIndex\\\":\\\"-1\\\",\\\"href\\\":\\\"#random-pivot\\\",\\\"children\\\":[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"icon icon-link\\\"}]}],\\\"Random Pivot\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"퀵소트는 배열이 pivot을 기준으로 비슷한 크기로 양분(partitioning)될 때 성능이 좋다.\\\\n반대로 말하면 배열이 역순, 혹은 정순으로 정렬되어 있을수록 성능이 떨어진다.\\\"}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"따라서 랜덤성을 부여해 배열이 pivot을 기준으로 비슷한 크기로 양분될 확률을 높인다.\\\"}],[\\\"$\\\",\\\"pre\\\",null,{\\\"className\\\":\\\"rounded-md [\\u0026_code]:py-0 [\\u0026_code]:px-0 line-numbers language-js\\\",\\\"children\\\":[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2 language-js\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword\\\",\\\"children\\\":\\\"function\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token function\\\",\\\"children\\\":\\\"quicksort\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token parameter\\\",\\\"children\\\":[\\\"index low\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],\\\" index high\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"{\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  pivot \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token function\\\",\\\"children\\\":\\\"random\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"*\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"high \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"-\\\"}],\\\" low\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"+\\\"}],\\\" low\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token comment\\\",\\\"children\\\":\\\"// low ~ high를 pivot을 기준으로 양분한다.\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token comment\\\",\\\"children\\\":\\\"// 배열은 왼쪽은 pivot보다 작은 값, 오른쪽은 큰 값들이 오게 된다.\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token function\\\",\\\"children\\\":\\\"partition\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"low\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],\\\" high\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],\\\" pivot\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token comment\\\",\\\"children\\\":\\\"// pivot보다 작은 값들을 정렬한다.\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token function\\\",\\\"children\\\":\\\"quicksort\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"low\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],\\\" pivot \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"-\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"1\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token comment\\\",\\\"children\\\":\\\"// pivot보다 큰 값들을 정렬한다.\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token function\\\",\\\"children\\\":\\\"quicksort\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"pivot\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"+\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"1\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],\\\" high\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"}\\\"}],\\\"\\\\n\\\"]}]]}]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"하지만 이 방법은 근본적으로 배열의 양분을 보장하지 않기 때문에 안정성이 떨어진다.\\\"}]]}],[\\\"$\\\",\\\"section\\\",null,{\\\"aria-labelledby\\\":\\\"median-of-three-quicksort\\\",\\\"children\\\":[[\\\"$\\\",\\\"h3\\\",null,{\\\"className\\\":\\\"mt-7 mb-2 text-heading3 font-semibold leading-normal\\\",\\\"id\\\":\\\"median-of-three-quicksort\\\",\\\"children\\\":[[\\\"$\\\",\\\"$L13\\\",null,{\\\"aria-hidden\\\":\\\"true\\\",\\\"tabIndex\\\":\\\"-1\\\",\\\"href\\\":\\\"#median-of-three-quicksort\\\",\\\"children\\\":[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"icon icon-link\\\"}]}],\\\"Median of Three QuickSort\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"양쪽이 가장 균등하게 나누어지려면, 이상적인 pivot은 arr[pivot]이 배열의 중앙값인 경우이다.\\\\n물론 중앙값을 알기 위해선 배열을 서치해야한다. 매번 배열을 서치하면 복잡도는 n^2이나 다름없다.\\\"}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"따라서 표본 조사를 통해 중앙에 가까운 값을 찾는다. 이것이 Median of Three(세 값중 중앙값) 전략이다.\\\"}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"다음의 예시를 보자.\\\"}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\\\",\\\"children\\\":\\\"3 1 4 1 5 9 2 6 5 3 5\\\"}]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"맨 왼쪽, 중간, 오른쪽 값을 꺼낸다. 각각 3, 9, 5 이다. 이중 중앙값은 5이다. 따라서 5값에 해당하는 맨 오른쪽을 pivot으로 삼는다.\\\"}],[\\\"$\\\",\\\"pre\\\",null,{\\\"className\\\":\\\"rounded-md [\\u0026_code]:py-0 [\\u0026_code]:px-0 line-numbers language-js\\\",\\\"children\\\":[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2 language-js\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword\\\",\\\"children\\\":\\\"function\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token function\\\",\\\"children\\\":\\\"quicksort\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token parameter\\\",\\\"children\\\":[\\\"index low\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],\\\" index high\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"{\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  left \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" low\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],\\\" middle \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"low \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"+\\\"}],\\\" high\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"/\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"2\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],\\\" right \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" high\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword control-flow\\\",\\\"children\\\":\\\"if\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"arr\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"[\\\"}],\\\"middle\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"]\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"\\u003c\\\"}],\\\" arr\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"[\\\"}],\\\"left\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"]\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"\\u0026\\u0026\\\"}],\\\" arr\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"[\\\"}],\\\"left\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"]\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"\\u003c\\\"}],\\\" arr\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"[\\\"}],\\\"right\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"]\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"||\\\"}],\\\" arr\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"[\\\"}],\\\"middle\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"]\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"\\u003e\\\"}],\\\" arr\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"[\\\"}],\\\"left\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"]\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"\\u0026\\u0026\\\"}],\\\" arr\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"[\\\"}],\\\"left\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"]\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"\\u003e\\\"}],\\\" arr\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"[\\\"}],\\\"right\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"]\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"{\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"    pivot \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" left\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"}\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword control-flow\\\",\\\"children\\\":\\\"if\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"arr\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"[\\\"}],\\\"left\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"]\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"\\u003c\\\"}],\\\" arr\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"[\\\"}],\\\"middle\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"]\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"\\u0026\\u0026\\\"}],\\\" arr\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"[\\\"}],\\\"middle\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"]\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"\\u003c\\\"}],\\\" arr\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"[\\\"}],\\\"right\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"]\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"||\\\"}],\\\" arr\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"[\\\"}],\\\"left\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"]\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"\\u003e\\\"}],\\\" arr\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"[\\\"}],\\\"middle\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"]\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"\\u0026\\u0026\\\"}],\\\" arr\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"[\\\"}],\\\"middle\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"]\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"\\u003e\\\"}],\\\" arr\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"[\\\"}],\\\"right\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"]\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"{\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"    pivot \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" middle\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"}\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword control-flow\\\",\\\"children\\\":\\\"if\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"arr\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"[\\\"}],\\\"left\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"]\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"\\u003c\\\"}],\\\" arr\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"[\\\"}],\\\"right\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"]\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"\\u0026\\u0026\\\"}],\\\" arr\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"[\\\"}],\\\"right\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"]\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"\\u003c\\\"}],\\\" arr\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"[\\\"}],\\\"middle\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"]\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"||\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"arr\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"[\\\"}],\\\"left\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"]\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"\\u003e\\\"}],\\\" arr\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"[\\\"}],\\\"right\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"]\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"\\u0026\\u0026\\\"}],\\\" arr\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"[\\\"}],\\\"right\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"]\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"\\u003e\\\"}],\\\" arr\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"[\\\"}],\\\"middle\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"]\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"{\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"    pivot \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" right\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"}\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token comment\\\",\\\"children\\\":\\\"// low ~ high를 pivot을 기준으로 양분한다.\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token comment\\\",\\\"children\\\":\\\"// 배열은 왼쪽은 pivot보다 작은 값, 오른쪽은 큰 값들이 오게 된다.\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token function\\\",\\\"children\\\":\\\"partition\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"low\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],\\\" high\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],\\\" pivot\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token comment\\\",\\\"children\\\":\\\"// pivot보다 작은 값들을 정렬한다.\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token function\\\",\\\"children\\\":\\\"quicksort\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"low\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],\\\" pivot \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"-\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"1\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token comment\\\",\\\"children\\\":\\\"// pivot보다 큰 값들을 정렬한다.\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token function\\\",\\\"children\\\":\\\"quicksort\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"pivot\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"+\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"1\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],\\\" high\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"}\\\"}],\\\"\\\\n\\\"]}]]}]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"median of three 전략을 이용하면 배열이 정렬된 경우에도 균등분할을 보장하면서 (즉, 최악의 시나리오를 피하면서) 일반적인 상황에서 더욱 균등 분할이 이뤄지도록 확률을 보정한다.\\\"}]]}],[\\\"$\\\",\\\"section\\\",null,{\\\"aria-labelledby\\\":\\\"three-way-partitioning\\\",\\\"children\\\":[[\\\"$\\\",\\\"h3\\\",null,{\\\"className\\\":\\\"mt-7 mb-2 text-heading3 font-semibold leading-normal\\\",\\\"id\\\":\\\"three-way-partitioning\\\",\\\"children\\\":[[\\\"$\\\",\\\"$L13\\\",null,{\\\"aria-hidden\\\":\\\"true\\\",\\\"tabIndex\\\":\\\"-1\\\",\\\"href\\\":\\\"#three-way-partitioning\\\",\\\"children\\\":[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"icon icon-link\\\"}]}],\\\"Three-way partitioning\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"배열에 같은 수가 많다면 자연스레 배열은 불균등하게 분할된다.\\\\n예를 들어, [3,3,3,3,3,3] 배열을 보자.\\\\npivot은 3, partition은 [], [3,3,3,3,3]이 될 것이다.\\\"}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"이를 해결하기 위한 방법은 간단하다. 파티션을 하나 더 두면 된다.\\\"}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"pivot보다 작은 값 / pivot보다 큰 값으로 구성한 2분 파티션이 아닌,\\\\npivot보다 작은 값 / pivot과 같은 값 / pivot보다 큰 값으로 구성한 3분 파티션을 활용한다.\\\"}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"어차피 중간 파티션의 값들은 같은 값들이니 정렬할 필요가 없다. pivot보다 작은 값, pivot보다 큰 값들만 정렬하면 된다.\\\\n이 방법은 같은 수가 많이 분포된 배열에서도 퀵소트의 성능 저하를 막을 수 있다.\\\"}],[\\\"$\\\",\\\"pre\\\",null,{\\\"className\\\":\\\"rounded-md [\\u0026_code]:py-0 [\\u0026_code]:px-0 line-numbers language-js\\\",\\\"children\\\":[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2 language-js\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword\\\",\\\"children\\\":\\\"function\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token function\\\",\\\"children\\\":\\\"quicksort\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token parameter\\\",\\\"children\\\":[\\\"low\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],\\\" high\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"{\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"[\\\"}],\\\"left\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],\\\" right\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"]\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token function\\\",\\\"children\\\":\\\"partition\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"low\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],\\\" high\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token function\\\",\\\"children\\\":\\\"quicksort\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"low\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],\\\" left \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"-\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"1\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token function\\\",\\\"children\\\":\\\"quicksort\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"right\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],\\\" high\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"}\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword\\\",\\\"children\\\":\\\"function\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token function\\\",\\\"children\\\":\\\"partition\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token parameter\\\",\\\"children\\\":[\\\"low\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],\\\"high\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"{\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  pivot \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" low\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  pivotValue \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" arr\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"[\\\"}],\\\"pivot\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"]\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  lt \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" low\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  gt \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" high\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  i \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" low \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"+\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"1\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword control-flow\\\",\\\"children\\\":\\\"while\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"i\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"\\u003c=\\\"}],\\\"gt\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"{\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"    \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword control-flow\\\",\\\"children\\\":\\\"if\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"arr\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"[\\\"}],\\\"i\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"]\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"\\u003c\\\"}],\\\" pivotValue\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"{\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"      \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token function\\\",\\\"children\\\":\\\"swap\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"lt\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],\\\"i\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"      i\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"++\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"      lt\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"++\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"    \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"}\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"    \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword control-flow\\\",\\\"children\\\":\\\"else\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword control-flow\\\",\\\"children\\\":\\\"if\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"arr\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"[\\\"}],\\\"i\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"]\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"\\u003e\\\"}],\\\" pivotValue\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"{\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"      \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token function\\\",\\\"children\\\":\\\"swap\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"i\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],\\\"gt\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"      gt\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"--\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"    \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"}\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"    \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword control-flow\\\",\\\"children\\\":\\\"else\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"{\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"      i\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"++\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"    \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"}\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"}\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword control-flow\\\",\\\"children\\\":\\\"return\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"[\\\"}],\\\"lt\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\",\\\"}],\\\"gt\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"]\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"}\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"example\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"3\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"1\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"4\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"1\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"5\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"9\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"2\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"6\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"5\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"3\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"5\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"|\\\"}],\\\" lt\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"0\\\"}],\\\" gt\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"10\\\"}],\\\" i\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"1\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"1\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"3\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"4\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"1\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"5\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"9\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"2\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"6\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"5\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"3\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"5\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"|\\\"}],\\\" lt\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"1\\\"}],\\\" gt\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"10\\\"}],\\\" i\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"2\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"1\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"3\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"5\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"1\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"5\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"9\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"2\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"6\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"5\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"3\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"4\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"|\\\"}],\\\" lt\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"1\\\"}],\\\" gt\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"9\\\"}],\\\" i\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"2\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"1\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"3\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"3\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"1\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"5\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"9\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"2\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"6\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"5\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"5\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"4\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"|\\\"}],\\\" lt\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"1\\\"}],\\\" gt\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"8\\\"}],\\\" i\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"2\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"1\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"3\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"3\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"1\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"5\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"9\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"2\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"6\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"5\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"5\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"4\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"|\\\"}],\\\" lt\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"1\\\"}],\\\" gt\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"8\\\"}],\\\" i\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"3\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"1\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"1\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"3\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"3\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"5\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"9\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"2\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"6\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"5\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"5\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"4\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"|\\\"}],\\\" lt\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"2\\\"}],\\\" gt\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"8\\\"}],\\\" i\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"4\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"1\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"1\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"3\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"3\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"5\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"9\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"2\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"6\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"5\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"5\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"4\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"|\\\"}],\\\" lt\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"2\\\"}],\\\" gt\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"7\\\"}],\\\" i\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"4\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"1\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"1\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"3\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"3\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"6\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"9\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"2\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"5\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"5\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"5\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"4\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"|\\\"}],\\\" lt\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"2\\\"}],\\\" gt\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"6\\\"}],\\\" i\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"4\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"1\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"1\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"3\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"3\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"2\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"9\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"6\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"5\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"5\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"5\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"4\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"|\\\"}],\\\" lt\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"2\\\"}],\\\" gt\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"5\\\"}],\\\" i\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"4\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"1\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"1\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"2\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"3\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"3\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"9\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"6\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"5\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"5\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"5\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"4\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"|\\\"}],\\\" lt\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"3\\\"}],\\\" gt\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"5\\\"}],\\\" i\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"5\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"\\\\n\\\"}]]}]}]]}],[\\\"$\\\",\\\"section\\\",null,{\\\"aria-labelledby\\\":\\\"그-외\\\",\\\"children\\\":[[\\\"$\\\",\\\"h3\\\",null,{\\\"className\\\":\\\"mt-7 mb-2 text-heading3 font-semibold leading-normal\\\",\\\"id\\\":\\\"그-외\\\",\\\"children\\\":[[\\\"$\\\",\\\"$L13\\\",null,{\\\"aria-hidden\\\":\\\"true\\\",\\\"tabIndex\\\":\\\"-1\\\",\\\"href\\\":\\\"#그-외\\\",\\\"children\\\":[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"icon icon-link\\\"}]}],\\\"그 외\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":[\\\"$\\\",\\\"$L13\\\",null,{\\\"href\\\":\\\"https://www.geeksforgeeks.org/improvement-on-the-quick-sort-algorithm/\\\",\\\"children\\\":\\\"https://www.geeksforgeeks.org/improvement-on-the-quick-sort-algorithm/\\\"}]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"geeksforgeeks에서 더 많은 개선 방법들을 찾아볼 수 있다.\\\"}]]}]]}]]}],[\\\"$\\\",\\\"$L15\\\",null,{\\\"size\\\":\\\"lg\\\",\\\"shareData\\\":{\\\"title\\\":\\\"Terra Dev Blog - algorithm-1-3-quick-sort\\\",\\\"text\\\":\\\"$undefined\\\",\\\"url\\\":\\\"/next-blog/posts/algorithm-1-3-quick-sort\\\"},\\\"aria-label\\\":\\\"Share this article\\\"}]]}],[\\\"$\\\",\\\"section\\\",null,{\\\"id\\\":\\\"author\\\",\\\"children\\\":[\\\"$\\\",\\\"$L16\\\",null,{}]}],[\\\"$\\\",\\\"section\\\",null,{\\\"children\\\":[[\\\"$\\\",\\\"$Lb\\\",null,{\\\"src\\\":\\\"https://giscus.app/client.js\\\",\\\"data-repo\\\":\\\"dev2820/blog-posts\\\",\\\"data-repo-id\\\":\\\"R_kgDOLQagPA\\\",\\\"data-category\\\":\\\"General\\\",\\\"data-category-id\\\":\\\"DIC_kwDOLQagPM4CjAtl\\\",\\\"data-mapping\\\":\\\"og:title\\\",\\\"data-strict\\\":\\\"0\\\",\\\"data-reactions-enabled\\\":\\\"1\\\",\\\"data-emit-metadata\\\":\\\"0\\\",\\\"data-input-position\\\":\\\"top\\\",\\\"data-theme\\\":\\\"light\\\",\\\"data-lang\\\":\\\"ko\\\",\\\"data-loading\\\":\\\"lazy\\\",\\\"cross-origin\\\":\\\"anonymous\\\",\\\"async\\\":true}],[\\\"$\\\",\\\"div\\\",null,{\\\"className\\\":\\\"giscus w-full min-w-screen-md\\\"}]]}]]}]\\n\"])</script><script>self.__next_f.push([1,\"f:[[\\\"$\\\",\\\"meta\\\",\\\"0\\\",{\\\"name\\\":\\\"viewport\\\",\\\"content\\\":\\\"width=device-width, initial-scale=1\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"1\\\",{\\\"charSet\\\":\\\"utf-8\\\"}],[\\\"$\\\",\\\"title\\\",\\\"2\\\",{\\\"children\\\":\\\"Terra Dev Blog - algorithm-1-3-quick-sort\\\"}],[\\\"$\\\",\\\"link\\\",\\\"3\\\",{\\\"rel\\\":\\\"canonical\\\",\\\"href\\\":\\\"https://dev2820.github.io/next-blog/algorithm-1-3-quick-sort\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"4\\\",{\\\"property\\\":\\\"og:title\\\",\\\"content\\\":\\\"algorithm-1-3-quick-sort\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"5\\\",{\\\"property\\\":\\\"og:url\\\",\\\"content\\\":\\\"https://dev2820.github.io/next-blog/algorithm-1-3-quick-sort\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"6\\\",{\\\"property\\\":\\\"og:locale\\\",\\\"content\\\":\\\"ko_KR\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"7\\\",{\\\"property\\\":\\\"og:image\\\",\\\"content\\\":\\\"https://dev2820.github.io/next-blog/next-blog/posts/algorithm-1-3-quick-sort\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"8\\\",{\\\"property\\\":\\\"og:image:width\\\",\\\"content\\\":\\\"800\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"9\\\",{\\\"property\\\":\\\"og:image:height\\\",\\\"content\\\":\\\"600\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"10\\\",{\\\"property\\\":\\\"og:image:alt\\\",\\\"content\\\":\\\"algorithm-1-3-quick-sort\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"11\\\",{\\\"property\\\":\\\"og:type\\\",\\\"content\\\":\\\"article\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"12\\\",{\\\"name\\\":\\\"twitter:card\\\",\\\"content\\\":\\\"summary_large_image\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"13\\\",{\\\"name\\\":\\\"twitter:title\\\",\\\"content\\\":\\\"algorithm-1-3-quick-sort\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"14\\\",{\\\"name\\\":\\\"twitter:image\\\",\\\"content\\\":\\\"https://dev2820.github.io/next-blog/next-blog/posts/algorithm-1-3-quick-sort\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"15\\\",{\\\"name\\\":\\\"twitter:image:width\\\",\\\"content\\\":\\\"800\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"16\\\",{\\\"name\\\":\\\"twitter:image:height\\\",\\\"content\\\":\\\"600\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"17\\\",{\\\"name\\\":\\\"twitter:image:alt\\\",\\\"content\\\":\\\"algorithm-1-3-quick-sort\\\"}],[\\\"$\\\",\\\"link\\\",\\\"18\\\",{\\\"rel\\\":\\\"icon\\\",\\\"href\\\":\\\"/next-blog/favicon.ico\\\",\\\"type\\\":\\\"image/x-icon\\\",\\\"sizes\\\":\\\"16x16\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"19\\\",{\\\"name\\\":\\\"next-size-adjust\\\"}]]\\n6:null\\n\"])</script></body></html>",
            "url": "https://dev2820.github.io/next-blogalgorithm-1-3-quick-sort",
            "title": "algorithm-1-3-quick-sort",
            "date_modified": "2024-04-12T12:09:42.553Z",
            "author": {
                "name": "dev2820",
                "url": "https://dev2820.github.io/next-blog/about"
            }
        },
        {
            "id": "faster-async-functions-and-promises",
            "content_html": "<!DOCTYPE html><html lang=\"kr\" class=\"__variable_fa65fd __variable_7691e4 scroll-smooth\"><head><meta charSet=\"utf-8\"/><meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"/><link rel=\"preload\" href=\"/next-blog/_next/static/media/3e7b7e3fd4560936-s.p.woff2\" as=\"font\" crossorigin=\"\" type=\"font/woff2\"/><link rel=\"preload\" href=\"/next-blog/_next/static/media/ff840cfebfb63b0c-s.p.woff2\" as=\"font\" crossorigin=\"\" type=\"font/woff2\"/><link rel=\"stylesheet\" href=\"/next-blog/_next/static/css/16077bc16defb9b9.css\" data-precedence=\"next\"/><link rel=\"stylesheet\" href=\"/next-blog/_next/static/css/203da25389b4eeab.css\" data-precedence=\"next\"/><link rel=\"preload\" as=\"script\" fetchPriority=\"low\" href=\"/next-blog/_next/static/chunks/webpack-8f27d743501d147d.js\"/><script src=\"/next-blog/_next/static/chunks/f14ca715-03ac7b40665f0731.js\" async=\"\"></script><script src=\"/next-blog/_next/static/chunks/465-9f8ee17d6a70e147.js\" async=\"\"></script><script src=\"/next-blog/_next/static/chunks/main-app-e31317f2a5bf611e.js\" async=\"\"></script><script src=\"/next-blog/_next/static/chunks/805-a8af350d35fb9160.js\" async=\"\"></script><script src=\"/next-blog/_next/static/chunks/app/posts/%5Bslug%5D/layout-1cf1294e1a2539f4.js\" async=\"\"></script><script src=\"/next-blog/_next/static/chunks/618-f2bb34773a0d24b2.js\" async=\"\"></script><script src=\"/next-blog/_next/static/chunks/app/posts/page-e8c6275c8ebfad50.js\" async=\"\"></script><script src=\"/next-blog/_next/static/chunks/372-b649e69f56e8eb19.js\" async=\"\"></script><script src=\"/next-blog/_next/static/chunks/app/layout-c7fa40d911107206.js\" async=\"\"></script><script src=\"/next-blog/_next/static/chunks/952ad60e-7cdac7b6bf36214c.js\" async=\"\"></script><script src=\"/next-blog/_next/static/chunks/app/posts/%5Bslug%5D/page-e951164d6ad6c144.js\" async=\"\"></script><link rel=\"preload\" href=\"https://giscus.app/client.js\" as=\"script\"/><link rel=\"preload\" href=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/prism.min.js\" as=\"script\"/><link rel=\"preload\" href=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-javascript.min.js\" as=\"script\"/><link rel=\"preload\" href=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-typescript.min.js\" as=\"script\"/><link rel=\"preload\" href=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-jsx.min.js\" as=\"script\"/><link rel=\"preload\" href=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-tsx.min.js\" as=\"script\"/><link rel=\"preload\" href=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-c.min.js\" as=\"script\"/><link rel=\"preload\" href=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/plugins/line-numbers/prism-line-numbers.min.js\" as=\"script\"/><title>Terra Dev Blog - faster-async-functions-and-promises</title><link rel=\"canonical\" href=\"https://dev2820.github.io/next-blog/faster-async-functions-and-promises\"/><meta property=\"og:title\" content=\"faster-async-functions-and-promises\"/><meta property=\"og:url\" content=\"https://dev2820.github.io/next-blog/faster-async-functions-and-promises\"/><meta property=\"og:locale\" content=\"ko_KR\"/><meta property=\"og:image\" content=\"https://dev2820.github.io/next-blog/next-blog/posts/faster-async-functions-and-promises\"/><meta property=\"og:image:width\" content=\"800\"/><meta property=\"og:image:height\" content=\"600\"/><meta property=\"og:image:alt\" content=\"faster-async-functions-and-promises\"/><meta property=\"og:type\" content=\"article\"/><meta name=\"twitter:card\" content=\"summary_large_image\"/><meta name=\"twitter:title\" content=\"faster-async-functions-and-promises\"/><meta name=\"twitter:image\" content=\"https://dev2820.github.io/next-blog/next-blog/posts/faster-async-functions-and-promises\"/><meta name=\"twitter:image:width\" content=\"800\"/><meta name=\"twitter:image:height\" content=\"600\"/><meta name=\"twitter:image:alt\" content=\"faster-async-functions-and-promises\"/><link rel=\"icon\" href=\"/next-blog/favicon.ico\" type=\"image/x-icon\" sizes=\"16x16\"/><meta name=\"next-size-adjust\"/><script src=\"/next-blog/_next/static/chunks/polyfills-78c92fac7aa8fdd8.js\" noModule=\"\"></script></head><body class=\"__className_fa65fd flex flex-col text-gray-800\"><link href=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/plugins/line-numbers/prism-line-numbers.min.css\" rel=\"stylesheet\"/><header class=\"flex flex-row justify-center py-2 items-center self-center w-full max-w-screen-md px-4\"><a href=\"/next-blog\"><img alt=\"Terra&#x27;s Devlog logo\" loading=\"lazy\" width=\"258\" height=\"48\" decoding=\"async\" data-nimg=\"1\" style=\"color:transparent\" src=\"/next-blog/_next/static/media/logo-full.a2c57f51.svg\"/></a><div class=\"flex-1\"></div><nav class=\"\"><menu class=\"flex flex-row gap-8\"><li><a aria-disabled=\"false\" href=\"/next-blog/posts\"><div class=\"cursor-pointer duration-200 font-medium text-primary hover:text-primary\">Posts</div></a></li><li><a aria-disabled=\"true\" href=\"\"><div class=\"duration-200 font-medium cursor-not-allowed text-muted hover:text-muted\">About Me</div></a></li><li><a aria-disabled=\"true\" href=\"\"><div class=\"duration-200 font-medium cursor-not-allowed text-muted hover:text-muted\">Contact</div></a></li></menu></nav></header><main class=\"self-center w-full max-w-screen-md p-4 text-gray-800\"><article class=\"relative\"><header id=\"post-meta\"><h1 class=\"mt-10 mb-4 text-heading1 font-bold leading-normal\" id=\"faster-async-functions-and-promises\">faster-async-functions-and-promises</h1><time dateTime=\"2024-01-21\" aria-label=\"Published on 2024-01-21\">2024-01-21</time> <!-- -->|<!-- --> <time dateTime=\"PT0M\" aria-label=\"Estimated reading time\">0<!-- --> mins</time></header><div id=\"content\" class=\"relative\"><div id=\"table-of-header\" class=\"absolute -right-12 translate-x-full h-full w-52 desktop:block hidden\"><nav class=\"sticky top-24\"><ol><li><a href=\"#a-new-approach-to-async-programming\"><div class=\"text-sm font-light data-[active=&quot;true&quot;]:text-base data-[active=&quot;true&quot;]:font-semibold py-0.5 text-neutral-400 data-[active=&quot;true&quot;]:text-primary duration-200 hover:text-primary pl-4\" data-id=\"#a-new-approach-to-async-programming\">A new approach to async programming</div></a></li><li><a href=\"#from-callbacks-to-promises-to-async-functions\"><div class=\"text-sm font-light data-[active=&quot;true&quot;]:text-base data-[active=&quot;true&quot;]:font-semibold py-0.5 text-neutral-400 data-[active=&quot;true&quot;]:text-primary duration-200 hover:text-primary pl-10\" data-id=\"#from-callbacks-to-promises-to-async-functions\">from callbacks to promises to async functions</div></a></li><li><a href=\"#from-event-listener-calblacks-to-async-lteration\"><div class=\"text-sm font-light data-[active=&quot;true&quot;]:text-base data-[active=&quot;true&quot;]:font-semibold py-0.5 text-neutral-400 data-[active=&quot;true&quot;]:text-primary duration-200 hover:text-primary pl-10\" data-id=\"#from-event-listener-calblacks-to-async-lteration\">From event listener calblacks to async lteration</div></a></li><li><a href=\"#async-performance-improvements\"><div class=\"text-sm font-light data-[active=&quot;true&quot;]:text-base data-[active=&quot;true&quot;]:font-semibold py-0.5 text-neutral-400 data-[active=&quot;true&quot;]:text-primary duration-200 hover:text-primary pl-10\" data-id=\"#async-performance-improvements\">Async performance improvements</div></a></li></ol></nav></div><p class=\"font-light leading-normal mt-4 mb-2\">참고)</p>\n<p class=\"font-light leading-normal mt-4 mb-2\"><a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" href=\"https://v8.dev/blog/fast-async\">https://v8.dev/blog/fast-async</a></p>\n<p class=\"font-light leading-normal mt-4 mb-2\">자바스크립트의 비동기 프로세스는 전통적으로 특별히 빠르지 않은 것으로 유명하다. 설상가상으로, 특히 Node.js 서버와 같은 라이브 자바스크립트 응용 프로그램들을 디버깅하는 것은 특히 비동기 프로그래밍에 있어서 쉬운 일이 아니다. 운 좋게도, 그들은 변화하고 있다. 이 글에서는 V8 (그리고 자바스크립트 엔진에서 어느 정도)에서 비동기 기능과 <code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\">Promise</code>를 최적화한 방법을 탐구하고 비동기 코드에 대한 디버깅 경험을 개선한 방법을 설명한다.</p>\n<section aria-labelledby=\"a-new-approach-to-async-programming\"><h2 class=\"mt-8 mb-3 text-heading2 font-semibold leading-normal\" id=\"a-new-approach-to-async-programming\"><a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#a-new-approach-to-async-programming\"><span class=\"icon icon-link\"></span></a>A new approach to async programming</h2><section aria-labelledby=\"from-callbacks-to-promises-to-async-functions\"><h3 class=\"mt-7 mb-2 text-heading3 font-semibold leading-normal\" id=\"from-callbacks-to-promises-to-async-functions\"><a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#from-callbacks-to-promises-to-async-functions\"><span class=\"icon icon-link\"></span></a>from callbacks to promises to async functions</h3><p class=\"font-light leading-normal mt-4 mb-2\">Promise가 자바스크립트 언어의 일부가 되기 전, callback-기반 API들은 일반적으로 비동기 코드에 특히 Node.js에서 사용되었다.</p><p class=\"font-light leading-normal mt-4 mb-2\">(코드)</p><p class=\"font-light leading-normal mt-4 mb-2\">앞선 방식으로 깊이 nesting된 콜백들을 사용하는 특정 패턴은 코드 가독성을 떨어뜨리고 유지보수를 어렵게 하기 때문에 &quot;callback hell&quot;이라고 불린다.</p><p class=\"font-light leading-normal mt-4 mb-2\">운좋게도, 이제 promises가 자바스크립트 언어에 포함되었기 때문에 같은 코드도 다음과 같이 멋지고 유지보수 편하게 작성될 수 있다.</p><p class=\"font-light leading-normal mt-4 mb-2\">(코드)</p><p class=\"font-light leading-normal mt-4 mb-2\">더 최근엔, 자바스크립트에서 async function을 지원하기 시작했다. 앞선 비동기 코드는 이제 동기 코드와 아주 유사하게 작성될 수 있다.</p><p class=\"font-light leading-normal mt-4 mb-2\">(코드)</p><p class=\"font-light leading-normal mt-4 mb-2\">async 함수를 사용하면, 코드는 더 간결해지고, 동작은 여전히 비동기임에도 제어와 데이터 흐름이 훨씬 쉽게 따라온다. (자바스크립트 실행은 여전히 싱글 스레드에서 동작합을 기억하라, 이는 비동기 함수가 스스로 물리적 스레드를 생성하지 않음을 의미한다.)</p></section><section aria-labelledby=\"from-event-listener-calblacks-to-async-lteration\"><h3 class=\"mt-7 mb-2 text-heading3 font-semibold leading-normal\" id=\"from-event-listener-calblacks-to-async-lteration\"><a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#from-event-listener-calblacks-to-async-lteration\"><span class=\"icon icon-link\"></span></a>From event listener calblacks to async lteration</h3><p class=\"font-light leading-normal mt-4 mb-2\">Node.js에서 특히 자주 볼 수 있는 또 다른 비동기 패러다임은 ReadableStream이다. 여기 예제가 있다.</p><p class=\"font-light leading-normal mt-4 mb-2\">(코드)</p><p class=\"font-light leading-normal mt-4 mb-2\">이 코드는 따라가기 살짝 어려울 수 있다: 들어오는 데이터는 콜백에서만 접근할 수 있는 청크들로 처리되며, 스트림의 종료를 알리는 시그널 또한 콜백 내부에서 발생한다. 함수가 즉시 종료되고 실제 처리는 콜백 내부에서 이루어져야한다는 것을 깨닫지 못하면 버그를 만들어내기 쉽다.</p><p class=\"font-light leading-normal mt-4 mb-2\">다행히도 ES2018에서 부터 async iteration이라 불리는 멋진 기능이 도입되어 이 코드를 단순하게 만들 수 있다.</p><p class=\"font-light leading-normal mt-4 mb-2\">(코드)</p><p class=\"font-light leading-normal mt-4 mb-2\">실제 요청을 처리하는 두 개의 다른 콜백(data와 end 콜백)을 삽입하는 대신, 우리는 모든 것을 하나의 async function안에 넣을 수 있고 새 루프인 <code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\">for await ...of</code> 를 이용해 모든 청크들을 비동기적으로 순회할 수 있다. 우리는 또한 여기에 <code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\">try-catch</code> 를 더해 <code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\">unhandleRejection</code> 문제를 피할 수 있다.</p><p class=\"font-light leading-normal mt-4 mb-2\">우리는 이미 이 새 기능들을 오늘날 실서비스에 도입하고 있다. 비동기 함수는 Node.js 8 (V8 v6.2 / Chrome 62)부터 완전히 지원되고 있고 async iterator와 generator는 Node.js 10 (V8 v6.8 / Chrome 68) 부터 완전히 지원되고 있다.</p></section><section aria-labelledby=\"async-performance-improvements\"><h3 class=\"mt-7 mb-2 text-heading3 font-semibold leading-normal\" id=\"async-performance-improvements\"><a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#async-performance-improvements\"><span class=\"icon icon-link\"></span></a>Async performance improvements</h3><p class=\"font-light leading-normal mt-4 mb-2\"><a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" href=\"https://v8.dev/blog/fast-async#async-performance-improvements\">https://v8.dev/blog/fast-async#async-performance-improvements</a></p><p class=\"font-light leading-normal mt-4 mb-2\">여기서부터</p></section></section><button class=\"__trds __trds button trds-inline-flex trds-justify-center trds-place-items-center trds-whitespace-nowrap trds-rounded-lg trds-text-md trds-font-medium trds-gap-2 trds-transition-colors trds-cursor-pointer disabled:trds-cursor-not-allowed disabled:trds-opacity-50 trds-bg-neutral trds-text-fg-neutral disabled:trds-bg-neutral enabled:hover:trds-bg-neutral-hover enabled:active:trds-bg-neutral-pressed __trds trds-h-11 trds-w-11 trds-px-0 trds-py-0\" type=\"button\" aria-disabled=\"false\" aria-busy=\"false\" aria-label=\"Share this article\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-share\"><path d=\"M4 12v8a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-8\"></path><polyline points=\"16 6 12 2 8 6\"></polyline><line x1=\"12\" x2=\"12\" y1=\"2\" y2=\"15\"></line></svg></button><div data-scope=\"toast\" data-part=\"group\" dir=\"ltr\" tabindex=\"-1\" aria-label=\"bottom Notifications alt+T\" id=\"toast-group:bottom\" data-placement=\"bottom\" data-side=\"bottom\" data-align=\"center\" aria-live=\"polite\" role=\"region\" style=\"position:fixed;pointer-events:none;display:flex;flex-direction:column;--gap:16px;--first-height:0px;z-index:2147483647;align-items:center;bottom:max(env(safe-area-inset-bottom, 0px), 1rem);inset-inline-end:calc(env(safe-area-inset-right, 0px) + 1rem);inset-inline-start:calc(env(safe-area-inset-left, 0px) + 1rem)\"></div></div><section id=\"author\"><div class=\"flex flex-row gap-4 items-center\"><div class=\"__trds trds-animate-shimmer trds-bg-clip-padding-box trds-text-transparent trds-cursor-default trds-pointer-events-none trds-select-none before::trds-invisible after::trds-invisible [&amp;_*]:trds-invisible trds-rounded-lg rounded-full\"><div data-scope=\"avatar\" data-part=\"root\" dir=\"ltr\" id=\"avatar::Rn7obtsra:\" class=\"trds-rounded-full trds-overflow-hidden w-16 h-16\"><img data-scope=\"avatar\" data-part=\"image\" hidden=\"\" dir=\"ltr\" id=\"avatar::Rn7obtsra::image\" data-state=\"hidden\" class=\"trds-bg-muted\"/><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"64\" height=\"64\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-user trds-bg-muted trds-w-full trds-h-full\" data-scope=\"avatar\" data-part=\"fallback\" dir=\"ltr\" id=\"avatar::Rn7obtsra::fallback\" data-state=\"visible\"><path d=\"M19 21v-2a4 4 0 0 0-4-4H9a4 4 0 0 0-4 4v2\"></path><circle cx=\"12\" cy=\"7\" r=\"4\"></circle></svg></div></div><div class=\"text-pretty flex flex-col gap-2\"><div class=\"__trds trds-animate-shimmer trds-bg-clip-padding-box trds-text-transparent trds-cursor-default trds-pointer-events-none trds-select-none before::trds-invisible after::trds-invisible [&amp;_*]:trds-invisible trds-rounded-lg h-fit w-fit\"><strong class=\"inline-block h-6 min-w-36\"> </strong></div><div class=\"__trds trds-animate-shimmer trds-bg-clip-padding-box trds-text-transparent trds-cursor-default trds-pointer-events-none trds-select-none before::trds-invisible after::trds-invisible [&amp;_*]:trds-invisible trds-rounded-lg h-fit w-fit\"><p class=\"whitespace-pre-wrap h-6 min-w-64\"></p></div></div></div></section><section><div class=\"giscus w-full min-w-screen-md\"></div></section></article></main><footer class=\"self-center w-full max-w-screen-md px-4 h-96\"><p>© 2024-<!-- -->2024<!-- --> <!-- -->dev2820<!-- -->. All rights reserved.</p></footer><script src=\"/next-blog/_next/static/chunks/webpack-8f27d743501d147d.js\" async=\"\"></script><script>(self.__next_f=self.__next_f||[]).push([0]);self.__next_f.push([2,null])</script><script>self.__next_f.push([1,\"1:HL[\\\"/next-blog/_next/static/media/3e7b7e3fd4560936-s.p.woff2\\\",\\\"font\\\",{\\\"crossOrigin\\\":\\\"\\\",\\\"type\\\":\\\"font/woff2\\\"}]\\n2:HL[\\\"/next-blog/_next/static/media/ff840cfebfb63b0c-s.p.woff2\\\",\\\"font\\\",{\\\"crossOrigin\\\":\\\"\\\",\\\"type\\\":\\\"font/woff2\\\"}]\\n3:HL[\\\"/next-blog/_next/static/css/16077bc16defb9b9.css\\\",\\\"style\\\"]\\n4:HL[\\\"/next-blog/_next/static/css/203da25389b4eeab.css\\\",\\\"style\\\"]\\n\"])</script><script>self.__next_f.push([1,\"5:I[5726,[],\\\"\\\"]\\n8:I[1699,[],\\\"\\\"]\\na:I[2579,[],\\\"\\\"]\\nb:I[3805,[\\\"805\\\",\\\"static/chunks/805-a8af350d35fb9160.js\\\",\\\"418\\\",\\\"static/chunks/app/posts/%5Bslug%5D/layout-1cf1294e1a2539f4.js\\\"],\\\"\\\"]\\nc:I[9618,[\\\"618\\\",\\\"static/chunks/618-f2bb34773a0d24b2.js\\\",\\\"991\\\",\\\"static/chunks/app/posts/page-e8c6275c8ebfad50.js\\\"],\\\"\\\"]\\nd:I[6210,[\\\"618\\\",\\\"static/chunks/618-f2bb34773a0d24b2.js\\\",\\\"372\\\",\\\"static/chunks/372-b649e69f56e8eb19.js\\\",\\\"185\\\",\\\"static/chunks/app/layout-c7fa40d911107206.js\\\"],\\\"BrandLogo\\\"]\\ne:I[9205,[\\\"618\\\",\\\"static/chunks/618-f2bb34773a0d24b2.js\\\",\\\"372\\\",\\\"static/chunks/372-b649e69f56e8eb19.js\\\",\\\"185\\\",\\\"static/chunks/app/layout-c7fa40d911107206.js\\\"],\\\"GlobalNavigationBar\\\"]\\n10:I[3141,[],\\\"\\\"]\\n9:[\\\"slug\\\",\\\"faster-async-functions-and-promises\\\",\\\"d\\\"]\\n11:[]\\n\"])</script><script>self.__next_f.push([1,\"0:[[[\\\"$\\\",\\\"link\\\",\\\"0\\\",{\\\"rel\\\":\\\"stylesheet\\\",\\\"href\\\":\\\"/next-blog/_next/static/css/16077bc16defb9b9.css\\\",\\\"precedence\\\":\\\"next\\\",\\\"crossOrigin\\\":\\\"$undefined\\\"}]],[\\\"$\\\",\\\"$L5\\\",null,{\\\"buildId\\\":\\\"FkDD4ed24GsUGsJlrpxW5\\\",\\\"assetPrefix\\\":\\\"/next-blog\\\",\\\"initialCanonicalUrl\\\":\\\"/posts/faster-async-functions-and-promises\\\",\\\"initialTree\\\":[\\\"\\\",{\\\"children\\\":[\\\"posts\\\",{\\\"children\\\":[[\\\"slug\\\",\\\"faster-async-functions-and-promises\\\",\\\"d\\\"],{\\\"children\\\":[\\\"__PAGE__?{\\\\\\\"slug\\\\\\\":\\\\\\\"faster-async-functions-and-promises\\\\\\\"}\\\",{}]}]}]},\\\"$undefined\\\",\\\"$undefined\\\",true],\\\"initialSeedData\\\":[\\\"\\\",{\\\"children\\\":[\\\"posts\\\",{\\\"children\\\":[[\\\"slug\\\",\\\"faster-async-functions-and-promises\\\",\\\"d\\\"],{\\\"children\\\":[\\\"__PAGE__\\\",{},[[\\\"$L6\\\",\\\"$L7\\\"],null],null]},[[[\\\"$\\\",\\\"$L8\\\",null,{\\\"parallelRouterKey\\\":\\\"children\\\",\\\"segmentPath\\\":[\\\"children\\\",\\\"posts\\\",\\\"children\\\",\\\"$9\\\",\\\"children\\\"],\\\"error\\\":\\\"$undefined\\\",\\\"errorStyles\\\":\\\"$undefined\\\",\\\"errorScripts\\\":\\\"$undefined\\\",\\\"template\\\":[\\\"$\\\",\\\"$La\\\",null,{}],\\\"templateStyles\\\":\\\"$undefined\\\",\\\"templateScripts\\\":\\\"$undefined\\\",\\\"notFound\\\":\\\"$undefined\\\",\\\"notFoundStyles\\\":\\\"$undefined\\\",\\\"styles\\\":null}],[\\\"$\\\",\\\"$Lb\\\",null,{\\\"src\\\":\\\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/prism.min.js\\\"}],[\\\"$\\\",\\\"$Lb\\\",null,{\\\"src\\\":\\\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-javascript.min.js\\\"}],[\\\"$\\\",\\\"$Lb\\\",null,{\\\"src\\\":\\\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-typescript.min.js\\\"}],[\\\"$\\\",\\\"$Lb\\\",null,{\\\"src\\\":\\\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-jsx.min.js\\\"}],[\\\"$\\\",\\\"$Lb\\\",null,{\\\"src\\\":\\\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-tsx.min.js\\\"}],[\\\"$\\\",\\\"$Lb\\\",null,{\\\"src\\\":\\\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-c.min.js\\\"}],[\\\"$\\\",\\\"$Lb\\\",null,{\\\"src\\\":\\\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/plugins/line-numbers/prism-line-numbers.min.js\\\"}]],null],null]},[\\\"$\\\",\\\"$L8\\\",null,{\\\"parallelRouterKey\\\":\\\"children\\\",\\\"segmentPath\\\":[\\\"children\\\",\\\"posts\\\",\\\"children\\\"],\\\"error\\\":\\\"$undefined\\\",\\\"errorStyles\\\":\\\"$undefined\\\",\\\"errorScripts\\\":\\\"$undefined\\\",\\\"template\\\":[\\\"$\\\",\\\"$La\\\",null,{}],\\\"templateStyles\\\":\\\"$undefined\\\",\\\"templateScripts\\\":\\\"$undefined\\\",\\\"notFound\\\":\\\"$undefined\\\",\\\"notFoundStyles\\\":\\\"$undefined\\\",\\\"styles\\\":[[\\\"$\\\",\\\"link\\\",\\\"0\\\",{\\\"rel\\\":\\\"stylesheet\\\",\\\"href\\\":\\\"/next-blog/_next/static/css/203da25389b4eeab.css\\\",\\\"precedence\\\":\\\"next\\\",\\\"crossOrigin\\\":\\\"$undefined\\\"}]]}],null]},[[\\\"$\\\",\\\"html\\\",null,{\\\"lang\\\":\\\"kr\\\",\\\"className\\\":\\\"__variable_fa65fd __variable_7691e4 scroll-smooth\\\",\\\"children\\\":[\\\"$\\\",\\\"body\\\",null,{\\\"className\\\":\\\"__className_fa65fd flex flex-col text-gray-800\\\",\\\"children\\\":[[\\\"$\\\",\\\"link\\\",null,{\\\"href\\\":\\\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/plugins/line-numbers/prism-line-numbers.min.css\\\",\\\"rel\\\":\\\"stylesheet\\\"}],[\\\"$\\\",\\\"header\\\",null,{\\\"className\\\":\\\"flex flex-row justify-center py-2 items-center self-center w-full max-w-screen-md px-4\\\",\\\"children\\\":[[\\\"$\\\",\\\"$Lc\\\",null,{\\\"href\\\":\\\"/\\\",\\\"children\\\":[\\\"$\\\",\\\"$Ld\\\",null,{\\\"height\\\":48}]}],[\\\"$\\\",\\\"div\\\",null,{\\\"className\\\":\\\"flex-1\\\"}],[\\\"$\\\",\\\"$Le\\\",null,{}]]}],[\\\"$\\\",\\\"main\\\",null,{\\\"className\\\":\\\"self-center w-full max-w-screen-md p-4 text-gray-800\\\",\\\"children\\\":[\\\"$\\\",\\\"$L8\\\",null,{\\\"parallelRouterKey\\\":\\\"children\\\",\\\"segmentPath\\\":[\\\"children\\\"],\\\"error\\\":\\\"$undefined\\\",\\\"errorStyles\\\":\\\"$undefined\\\",\\\"errorScripts\\\":\\\"$undefined\\\",\\\"template\\\":[\\\"$\\\",\\\"$La\\\",null,{}],\\\"templateStyles\\\":\\\"$undefined\\\",\\\"templateScripts\\\":\\\"$undefined\\\",\\\"notFound\\\":[\\\"$\\\",\\\"div\\\",null,{\\\"children\\\":[[\\\"$\\\",\\\"h2\\\",null,{\\\"children\\\":\\\"Not Found\\\"}],[\\\"$\\\",\\\"p\\\",null,{\\\"children\\\":\\\"Could not find requested resource\\\"}],[\\\"$\\\",\\\"$Lc\\\",null,{\\\"href\\\":\\\"/\\\",\\\"children\\\":\\\"Return Home\\\"}]]}],\\\"notFoundStyles\\\":[],\\\"styles\\\":null}]}],[\\\"$\\\",\\\"footer\\\",null,{\\\"className\\\":\\\"self-center w-full max-w-screen-md px-4 h-96\\\",\\\"children\\\":[\\\"$\\\",\\\"p\\\",null,{\\\"children\\\":[\\\"© 2024-\\\",2024,\\\" \\\",\\\"dev2820\\\",\\\". All rights reserved.\\\"]}]}]]}]}],null],null],\\\"couldBeIntercepted\\\":false,\\\"initialHead\\\":[null,\\\"$Lf\\\"],\\\"globalErrorComponent\\\":\\\"$10\\\",\\\"missingSlots\\\":\\\"$W11\\\"}]]\\n\"])</script><script>self.__next_f.push([1,\"12:I[2870,[\\\"587\\\",\\\"static/chunks/952ad60e-7cdac7b6bf36214c.js\\\",\\\"618\\\",\\\"static/chunks/618-f2bb34773a0d24b2.js\\\",\\\"372\\\",\\\"static/chunks/372-b649e69f56e8eb19.js\\\",\\\"805\\\",\\\"static/chunks/805-a8af350d35fb9160.js\\\",\\\"333\\\",\\\"static/chunks/app/posts/%5Bslug%5D/page-e951164d6ad6c144.js\\\"],\\\"TableOfContents\\\"]\\n13:I[6894,[\\\"587\\\",\\\"static/chunks/952ad60e-7cdac7b6bf36214c.js\\\",\\\"618\\\",\\\"static/chunks/618-f2bb34773a0d24b2.js\\\",\\\"372\\\",\\\"static/chunks/372-b649e69f56e8eb19.js\\\",\\\"805\\\",\\\"static/chunks/805-a8af350d35fb9160.js\\\",\\\"333\\\",\\\"static/chunks/app/posts/%5Bslug%5D/page-e951164d6ad6c144.js\\\"],\\\"Anchor\\\"]\\n14:I[4547,[\\\"587\\\",\\\"static/chunks/952ad60e-7cdac7b6bf36214c.js\\\",\\\"618\\\",\\\"static/chunks/618-f2bb34773a0d24b2.js\\\",\\\"372\\\",\\\"static/chunks/372-b649e69f56e8eb19.js\\\",\\\"805\\\",\\\"static/chunks/805-a8af350d35fb9160.js\\\",\\\"333\\\",\\\"static/chunks/app/posts/%5Bslug%5D/page-e951164d6ad6c144.js\\\"],\\\"ShareButton\\\"]\\n15:I[6398,[\\\"587\\\",\\\"static/chunks/952ad60e-7cdac7b6bf36214c.js\\\",\\\"618\\\",\\\"static/chunks/618-f2bb34773a0d24b2.js\\\",\\\"372\\\",\\\"static/chunks/372-b649e69f56e8eb19.js\\\",\\\"805\\\",\\\"static/chunks/805-a8af350d35fb9160.js\\\",\\\"333\\\",\\\"static/chunks/app/posts/%5Bslug%5D/page-e951164d6ad6c144.js\\\"],\\\"AuthorInfo\\\"]\\n\"])</script><script>self.__next_f.push([1,\"7:[\\\"$\\\",\\\"article\\\",null,{\\\"className\\\":\\\"relative\\\",\\\"children\\\":[[\\\"$\\\",\\\"header\\\",null,{\\\"id\\\":\\\"post-meta\\\",\\\"children\\\":[\\\"$undefined\\\",[\\\"$\\\",\\\"h1\\\",null,{\\\"className\\\":\\\"mt-10 mb-4 text-heading1 font-bold leading-normal\\\",\\\"id\\\":\\\"faster-async-functions-and-promises\\\",\\\"children\\\":\\\"faster-async-functions-and-promises\\\"}],[\\\"$\\\",\\\"time\\\",null,{\\\"dateTime\\\":\\\"2024-01-21\\\",\\\"aria-label\\\":\\\"Published on 2024-01-21\\\",\\\"children\\\":\\\"2024-01-21\\\"}],\\\" \\\",\\\"|\\\",\\\" \\\",[\\\"$\\\",\\\"time\\\",null,{\\\"dateTime\\\":\\\"PT0M\\\",\\\"aria-label\\\":\\\"Estimated reading time\\\",\\\"children\\\":[0,\\\" mins\\\"]}]]}],[\\\"$\\\",\\\"div\\\",null,{\\\"id\\\":\\\"content\\\",\\\"className\\\":\\\"relative\\\",\\\"children\\\":[[\\\"$\\\",\\\"div\\\",null,{\\\"id\\\":\\\"table-of-header\\\",\\\"className\\\":\\\"absolute -right-12 translate-x-full h-full w-52 desktop:block hidden\\\",\\\"children\\\":[\\\"$\\\",\\\"$L12\\\",null,{\\\"toc\\\":[{\\\"level\\\":2,\\\"content\\\":\\\"A new approach to async programming\\\",\\\"slug\\\":\\\"#a-new-approach-to-async-programming\\\"},{\\\"level\\\":3,\\\"content\\\":\\\"from callbacks to promises to async functions\\\",\\\"slug\\\":\\\"#from-callbacks-to-promises-to-async-functions\\\"},{\\\"level\\\":3,\\\"content\\\":\\\"From event listener calblacks to async lteration\\\",\\\"slug\\\":\\\"#from-event-listener-calblacks-to-async-lteration\\\"},{\\\"level\\\":3,\\\"content\\\":\\\"Async performance improvements\\\",\\\"slug\\\":\\\"#async-performance-improvements\\\"}],\\\"className\\\":\\\"sticky top-24\\\"}]}],[[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"참고)\\\"}],\\\"\\\\n\\\",[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":[\\\"$\\\",\\\"$L13\\\",null,{\\\"href\\\":\\\"https://v8.dev/blog/fast-async\\\",\\\"children\\\":\\\"https://v8.dev/blog/fast-async\\\"}]}],\\\"\\\\n\\\",[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":[\\\"자바스크립트의 비동기 프로세스는 전통적으로 특별히 빠르지 않은 것으로 유명하다. 설상가상으로, 특히 Node.js 서버와 같은 라이브 자바스크립트 응용 프로그램들을 디버깅하는 것은 특히 비동기 프로그래밍에 있어서 쉬운 일이 아니다. 운 좋게도, 그들은 변화하고 있다. 이 글에서는 V8 (그리고 자바스크립트 엔진에서 어느 정도)에서 비동기 기능과 \\\",[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\\\",\\\"children\\\":\\\"Promise\\\"}],\\\"를 최적화한 방법을 탐구하고 비동기 코드에 대한 디버깅 경험을 개선한 방법을 설명한다.\\\"]}],\\\"\\\\n\\\",[\\\"$\\\",\\\"section\\\",null,{\\\"aria-labelledby\\\":\\\"a-new-approach-to-async-programming\\\",\\\"children\\\":[[\\\"$\\\",\\\"h2\\\",null,{\\\"className\\\":\\\"mt-8 mb-3 text-heading2 font-semibold leading-normal\\\",\\\"id\\\":\\\"a-new-approach-to-async-programming\\\",\\\"children\\\":[[\\\"$\\\",\\\"$L13\\\",null,{\\\"aria-hidden\\\":\\\"true\\\",\\\"tabIndex\\\":\\\"-1\\\",\\\"href\\\":\\\"#a-new-approach-to-async-programming\\\",\\\"children\\\":[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"icon icon-link\\\"}]}],\\\"A new approach to async programming\\\"]}],[\\\"$\\\",\\\"section\\\",null,{\\\"aria-labelledby\\\":\\\"from-callbacks-to-promises-to-async-functions\\\",\\\"children\\\":[[\\\"$\\\",\\\"h3\\\",null,{\\\"className\\\":\\\"mt-7 mb-2 text-heading3 font-semibold leading-normal\\\",\\\"id\\\":\\\"from-callbacks-to-promises-to-async-functions\\\",\\\"children\\\":[[\\\"$\\\",\\\"$L13\\\",null,{\\\"aria-hidden\\\":\\\"true\\\",\\\"tabIndex\\\":\\\"-1\\\",\\\"href\\\":\\\"#from-callbacks-to-promises-to-async-functions\\\",\\\"children\\\":[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"icon icon-link\\\"}]}],\\\"from callbacks to promises to async functions\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"Promise가 자바스크립트 언어의 일부가 되기 전, callback-기반 API들은 일반적으로 비동기 코드에 특히 Node.js에서 사용되었다.\\\"}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"(코드)\\\"}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"앞선 방식으로 깊이 nesting된 콜백들을 사용하는 특정 패턴은 코드 가독성을 떨어뜨리고 유지보수를 어렵게 하기 때문에 \\\\\\\"callback hell\\\\\\\"이라고 불린다.\\\"}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"운좋게도, 이제 promises가 자바스크립트 언어에 포함되었기 때문에 같은 코드도 다음과 같이 멋지고 유지보수 편하게 작성될 수 있다.\\\"}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"(코드)\\\"}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"더 최근엔, 자바스크립트에서 async function을 지원하기 시작했다. 앞선 비동기 코드는 이제 동기 코드와 아주 유사하게 작성될 수 있다.\\\"}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"(코드)\\\"}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"async 함수를 사용하면, 코드는 더 간결해지고, 동작은 여전히 비동기임에도 제어와 데이터 흐름이 훨씬 쉽게 따라온다. (자바스크립트 실행은 여전히 싱글 스레드에서 동작합을 기억하라, 이는 비동기 함수가 스스로 물리적 스레드를 생성하지 않음을 의미한다.)\\\"}]]}],[\\\"$\\\",\\\"section\\\",null,{\\\"aria-labelledby\\\":\\\"from-event-listener-calblacks-to-async-lteration\\\",\\\"children\\\":[[\\\"$\\\",\\\"h3\\\",null,{\\\"className\\\":\\\"mt-7 mb-2 text-heading3 font-semibold leading-normal\\\",\\\"id\\\":\\\"from-event-listener-calblacks-to-async-lteration\\\",\\\"children\\\":[[\\\"$\\\",\\\"$L13\\\",null,{\\\"aria-hidden\\\":\\\"true\\\",\\\"tabIndex\\\":\\\"-1\\\",\\\"href\\\":\\\"#from-event-listener-calblacks-to-async-lteration\\\",\\\"children\\\":[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"icon icon-link\\\"}]}],\\\"From event listener calblacks to async lteration\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"Node.js에서 특히 자주 볼 수 있는 또 다른 비동기 패러다임은 ReadableStream이다. 여기 예제가 있다.\\\"}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"(코드)\\\"}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"이 코드는 따라가기 살짝 어려울 수 있다: 들어오는 데이터는 콜백에서만 접근할 수 있는 청크들로 처리되며, 스트림의 종료를 알리는 시그널 또한 콜백 내부에서 발생한다. 함수가 즉시 종료되고 실제 처리는 콜백 내부에서 이루어져야한다는 것을 깨닫지 못하면 버그를 만들어내기 쉽다.\\\"}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"다행히도 ES2018에서 부터 async iteration이라 불리는 멋진 기능이 도입되어 이 코드를 단순하게 만들 수 있다.\\\"}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"(코드)\\\"}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":[\\\"실제 요청을 처리하는 두 개의 다른 콜백(data와 end 콜백)을 삽입하는 대신, 우리는 모든 것을 하나의 async function안에 넣을 수 있고 새 루프인 \\\",[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\\\",\\\"children\\\":\\\"for await ...of\\\"}],\\\" 를 이용해 모든 청크들을 비동기적으로 순회할 수 있다. 우리는 또한 여기에 \\\",[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\\\",\\\"children\\\":\\\"try-catch\\\"}],\\\" 를 더해 \\\",[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\\\",\\\"children\\\":\\\"unhandleRejection\\\"}],\\\" 문제를 피할 수 있다.\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"우리는 이미 이 새 기능들을 오늘날 실서비스에 도입하고 있다. 비동기 함수는 Node.js 8 (V8 v6.2 / Chrome 62)부터 완전히 지원되고 있고 async iterator와 generator는 Node.js 10 (V8 v6.8 / Chrome 68) 부터 완전히 지원되고 있다.\\\"}]]}],[\\\"$\\\",\\\"section\\\",null,{\\\"aria-labelledby\\\":\\\"async-performance-improvements\\\",\\\"children\\\":[[\\\"$\\\",\\\"h3\\\",null,{\\\"className\\\":\\\"mt-7 mb-2 text-heading3 font-semibold leading-normal\\\",\\\"id\\\":\\\"async-performance-improvements\\\",\\\"children\\\":[[\\\"$\\\",\\\"$L13\\\",null,{\\\"aria-hidden\\\":\\\"true\\\",\\\"tabIndex\\\":\\\"-1\\\",\\\"href\\\":\\\"#async-performance-improvements\\\",\\\"children\\\":[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"icon icon-link\\\"}]}],\\\"Async performance improvements\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":[\\\"$\\\",\\\"$L13\\\",null,{\\\"href\\\":\\\"https://v8.dev/blog/fast-async#async-performance-improvements\\\",\\\"children\\\":\\\"https://v8.dev/blog/fast-async#async-performance-improvements\\\"}]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"여기서부터\\\"}]]}]]}]],[\\\"$\\\",\\\"$L14\\\",null,{\\\"size\\\":\\\"lg\\\",\\\"shareData\\\":{\\\"title\\\":\\\"Terra Dev Blog - faster-async-functions-and-promises\\\",\\\"text\\\":\\\"$undefined\\\",\\\"url\\\":\\\"/next-blog/posts/faster-async-functions-and-promises\\\"},\\\"aria-label\\\":\\\"Share this article\\\"}]]}],[\\\"$\\\",\\\"section\\\",null,{\\\"id\\\":\\\"author\\\",\\\"children\\\":[\\\"$\\\",\\\"$L15\\\",null,{}]}],[\\\"$\\\",\\\"section\\\",null,{\\\"children\\\":[[\\\"$\\\",\\\"$Lb\\\",null,{\\\"src\\\":\\\"https://giscus.app/client.js\\\",\\\"data-repo\\\":\\\"dev2820/blog-posts\\\",\\\"data-repo-id\\\":\\\"R_kgDOLQagPA\\\",\\\"data-category\\\":\\\"General\\\",\\\"data-category-id\\\":\\\"DIC_kwDOLQagPM4CjAtl\\\",\\\"data-mapping\\\":\\\"og:title\\\",\\\"data-strict\\\":\\\"0\\\",\\\"data-reactions-enabled\\\":\\\"1\\\",\\\"data-emit-metadata\\\":\\\"0\\\",\\\"data-input-position\\\":\\\"top\\\",\\\"data-theme\\\":\\\"light\\\",\\\"data-lang\\\":\\\"ko\\\",\\\"data-loading\\\":\\\"lazy\\\",\\\"cross-origin\\\":\\\"anonymous\\\",\\\"async\\\":true}],[\\\"$\\\",\\\"div\\\",null,{\\\"className\\\":\\\"giscus w-full min-w-screen-md\\\"}]]}]]}]\\n\"])</script><script>self.__next_f.push([1,\"f:[[\\\"$\\\",\\\"meta\\\",\\\"0\\\",{\\\"name\\\":\\\"viewport\\\",\\\"content\\\":\\\"width=device-width, initial-scale=1\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"1\\\",{\\\"charSet\\\":\\\"utf-8\\\"}],[\\\"$\\\",\\\"title\\\",\\\"2\\\",{\\\"children\\\":\\\"Terra Dev Blog - faster-async-functions-and-promises\\\"}],[\\\"$\\\",\\\"link\\\",\\\"3\\\",{\\\"rel\\\":\\\"canonical\\\",\\\"href\\\":\\\"https://dev2820.github.io/next-blog/faster-async-functions-and-promises\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"4\\\",{\\\"property\\\":\\\"og:title\\\",\\\"content\\\":\\\"faster-async-functions-and-promises\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"5\\\",{\\\"property\\\":\\\"og:url\\\",\\\"content\\\":\\\"https://dev2820.github.io/next-blog/faster-async-functions-and-promises\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"6\\\",{\\\"property\\\":\\\"og:locale\\\",\\\"content\\\":\\\"ko_KR\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"7\\\",{\\\"property\\\":\\\"og:image\\\",\\\"content\\\":\\\"https://dev2820.github.io/next-blog/next-blog/posts/faster-async-functions-and-promises\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"8\\\",{\\\"property\\\":\\\"og:image:width\\\",\\\"content\\\":\\\"800\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"9\\\",{\\\"property\\\":\\\"og:image:height\\\",\\\"content\\\":\\\"600\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"10\\\",{\\\"property\\\":\\\"og:image:alt\\\",\\\"content\\\":\\\"faster-async-functions-and-promises\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"11\\\",{\\\"property\\\":\\\"og:type\\\",\\\"content\\\":\\\"article\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"12\\\",{\\\"name\\\":\\\"twitter:card\\\",\\\"content\\\":\\\"summary_large_image\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"13\\\",{\\\"name\\\":\\\"twitter:title\\\",\\\"content\\\":\\\"faster-async-functions-and-promises\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"14\\\",{\\\"name\\\":\\\"twitter:image\\\",\\\"content\\\":\\\"https://dev2820.github.io/next-blog/next-blog/posts/faster-async-functions-and-promises\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"15\\\",{\\\"name\\\":\\\"twitter:image:width\\\",\\\"content\\\":\\\"800\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"16\\\",{\\\"name\\\":\\\"twitter:image:height\\\",\\\"content\\\":\\\"600\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"17\\\",{\\\"name\\\":\\\"twitter:image:alt\\\",\\\"content\\\":\\\"faster-async-functions-and-promises\\\"}],[\\\"$\\\",\\\"link\\\",\\\"18\\\",{\\\"rel\\\":\\\"icon\\\",\\\"href\\\":\\\"/next-blog/favicon.ico\\\",\\\"type\\\":\\\"image/x-icon\\\",\\\"sizes\\\":\\\"16x16\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"19\\\",{\\\"name\\\":\\\"next-size-adjust\\\"}]]\\n6:null\\n\"])</script></body></html>",
            "url": "https://dev2820.github.io/next-blogfaster-async-functions-and-promises",
            "title": "faster-async-functions-and-promises",
            "date_modified": "2024-01-21T12:40:51.204Z",
            "author": {
                "name": "dev2820",
                "url": "https://dev2820.github.io/next-blog/about"
            }
        },
        {
            "id": "go-to-statement-considered-harmful-review",
            "content_html": "<!DOCTYPE html><html lang=\"kr\" class=\"__variable_fa65fd __variable_7691e4 scroll-smooth\"><head><meta charSet=\"utf-8\"/><meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"/><link rel=\"preload\" href=\"/next-blog/_next/static/media/3e7b7e3fd4560936-s.p.woff2\" as=\"font\" crossorigin=\"\" type=\"font/woff2\"/><link rel=\"preload\" href=\"/next-blog/_next/static/media/ff840cfebfb63b0c-s.p.woff2\" as=\"font\" crossorigin=\"\" type=\"font/woff2\"/><link rel=\"stylesheet\" href=\"/next-blog/_next/static/css/16077bc16defb9b9.css\" data-precedence=\"next\"/><link rel=\"stylesheet\" href=\"/next-blog/_next/static/css/203da25389b4eeab.css\" data-precedence=\"next\"/><link rel=\"preload\" as=\"script\" fetchPriority=\"low\" href=\"/next-blog/_next/static/chunks/webpack-8f27d743501d147d.js\"/><script src=\"/next-blog/_next/static/chunks/f14ca715-03ac7b40665f0731.js\" async=\"\"></script><script src=\"/next-blog/_next/static/chunks/465-9f8ee17d6a70e147.js\" async=\"\"></script><script src=\"/next-blog/_next/static/chunks/main-app-e31317f2a5bf611e.js\" async=\"\"></script><script src=\"/next-blog/_next/static/chunks/805-a8af350d35fb9160.js\" async=\"\"></script><script src=\"/next-blog/_next/static/chunks/app/posts/%5Bslug%5D/layout-1cf1294e1a2539f4.js\" async=\"\"></script><script src=\"/next-blog/_next/static/chunks/618-f2bb34773a0d24b2.js\" async=\"\"></script><script src=\"/next-blog/_next/static/chunks/app/posts/page-e8c6275c8ebfad50.js\" async=\"\"></script><script src=\"/next-blog/_next/static/chunks/372-b649e69f56e8eb19.js\" async=\"\"></script><script src=\"/next-blog/_next/static/chunks/app/layout-c7fa40d911107206.js\" async=\"\"></script><script src=\"/next-blog/_next/static/chunks/952ad60e-7cdac7b6bf36214c.js\" async=\"\"></script><script src=\"/next-blog/_next/static/chunks/app/posts/%5Bslug%5D/page-e951164d6ad6c144.js\" async=\"\"></script><link rel=\"preload\" href=\"https://giscus.app/client.js\" as=\"script\"/><link rel=\"preload\" href=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/prism.min.js\" as=\"script\"/><link rel=\"preload\" href=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-javascript.min.js\" as=\"script\"/><link rel=\"preload\" href=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-typescript.min.js\" as=\"script\"/><link rel=\"preload\" href=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-jsx.min.js\" as=\"script\"/><link rel=\"preload\" href=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-tsx.min.js\" as=\"script\"/><link rel=\"preload\" href=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-c.min.js\" as=\"script\"/><link rel=\"preload\" href=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/plugins/line-numbers/prism-line-numbers.min.js\" as=\"script\"/><title>Terra Dev Blog - go-to-statement-considered-harmful-review</title><link rel=\"canonical\" href=\"https://dev2820.github.io/next-blog/go-to-statement-considered-harmful-review\"/><meta property=\"og:title\" content=\"go-to-statement-considered-harmful-review\"/><meta property=\"og:url\" content=\"https://dev2820.github.io/next-blog/go-to-statement-considered-harmful-review\"/><meta property=\"og:locale\" content=\"ko_KR\"/><meta property=\"og:image\" content=\"https://dev2820.github.io/next-blog/next-blog/posts/go-to-statement-considered-harmful-review\"/><meta property=\"og:image:width\" content=\"800\"/><meta property=\"og:image:height\" content=\"600\"/><meta property=\"og:image:alt\" content=\"go-to-statement-considered-harmful-review\"/><meta property=\"og:type\" content=\"article\"/><meta name=\"twitter:card\" content=\"summary_large_image\"/><meta name=\"twitter:title\" content=\"go-to-statement-considered-harmful-review\"/><meta name=\"twitter:image\" content=\"https://dev2820.github.io/next-blog/next-blog/posts/go-to-statement-considered-harmful-review\"/><meta name=\"twitter:image:width\" content=\"800\"/><meta name=\"twitter:image:height\" content=\"600\"/><meta name=\"twitter:image:alt\" content=\"go-to-statement-considered-harmful-review\"/><link rel=\"icon\" href=\"/next-blog/favicon.ico\" type=\"image/x-icon\" sizes=\"16x16\"/><meta name=\"next-size-adjust\"/><script src=\"/next-blog/_next/static/chunks/polyfills-78c92fac7aa8fdd8.js\" noModule=\"\"></script></head><body class=\"__className_fa65fd flex flex-col text-gray-800\"><link href=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/plugins/line-numbers/prism-line-numbers.min.css\" rel=\"stylesheet\"/><header class=\"flex flex-row justify-center py-2 items-center self-center w-full max-w-screen-md px-4\"><a href=\"/next-blog\"><img alt=\"Terra&#x27;s Devlog logo\" loading=\"lazy\" width=\"258\" height=\"48\" decoding=\"async\" data-nimg=\"1\" style=\"color:transparent\" src=\"/next-blog/_next/static/media/logo-full.a2c57f51.svg\"/></a><div class=\"flex-1\"></div><nav class=\"\"><menu class=\"flex flex-row gap-8\"><li><a aria-disabled=\"false\" href=\"/next-blog/posts\"><div class=\"cursor-pointer duration-200 font-medium text-primary hover:text-primary\">Posts</div></a></li><li><a aria-disabled=\"true\" href=\"\"><div class=\"duration-200 font-medium cursor-not-allowed text-muted hover:text-muted\">About Me</div></a></li><li><a aria-disabled=\"true\" href=\"\"><div class=\"duration-200 font-medium cursor-not-allowed text-muted hover:text-muted\">Contact</div></a></li></menu></nav></header><main class=\"self-center w-full max-w-screen-md p-4 text-gray-800\"><article class=\"relative\"><header id=\"post-meta\"><h1 class=\"mt-10 mb-4 text-heading1 font-bold leading-normal\" id=\"go-to-statement-considered-harmful-review\">go-to-statement-considered-harmful-review</h1><time dateTime=\"2024-02-17\" aria-label=\"Published on 2024-02-17\">2024-02-17</time> <!-- -->|<!-- --> <time dateTime=\"PT1M\" aria-label=\"Estimated reading time\">1<!-- --> mins</time></header><div id=\"content\" class=\"relative\"><div id=\"table-of-header\" class=\"absolute -right-12 translate-x-full h-full w-52 desktop:block hidden\"><nav class=\"sticky top-24\"><ol><li><a href=\"#리뷰하기-앞서-goto문이란\"><div class=\"text-sm font-light data-[active=&quot;true&quot;]:text-base data-[active=&quot;true&quot;]:font-semibold py-0.5 text-neutral-400 data-[active=&quot;true&quot;]:text-primary duration-200 hover:text-primary pl-4\" data-id=\"#리뷰하기-앞서-goto문이란\">리뷰하기 앞서: Goto문이란</div></a></li><li><a href=\"#goto문은-해롭다고-여겨진다\"><div class=\"text-sm font-light data-[active=&quot;true&quot;]:text-base data-[active=&quot;true&quot;]:font-semibold py-0.5 text-neutral-400 data-[active=&quot;true&quot;]:text-primary duration-200 hover:text-primary pl-4\" data-id=\"#goto문은-해롭다고-여겨진다\">Goto문은 해롭다고 여겨진다</div></a></li><li><a href=\"#기저1-프로그래밍의-목적은-프로그램이-만드는-프로세스에-있다\"><div class=\"text-sm font-light data-[active=&quot;true&quot;]:text-base data-[active=&quot;true&quot;]:font-semibold py-0.5 text-neutral-400 data-[active=&quot;true&quot;]:text-primary duration-200 hover:text-primary pl-10\" data-id=\"#기저1-프로그래밍의-목적은-프로그램이-만드는-프로세스에-있다\">기저1: 프로그래밍의 목적은 프로그램이 만드는 프로세스에 있다</div></a></li><li><a href=\"#기저2-인간은-동적인-프로세스를-파악하는-지능이-정적인-관계를-이해하는-지능보다-상대적으로-낮다\"><div class=\"text-sm font-light data-[active=&quot;true&quot;]:text-base data-[active=&quot;true&quot;]:font-semibold py-0.5 text-neutral-400 data-[active=&quot;true&quot;]:text-primary duration-200 hover:text-primary pl-10\" data-id=\"#기저2-인간은-동적인-프로세스를-파악하는-지능이-정적인-관계를-이해하는-지능보다-상대적으로-낮다\">기저2: 인간은 동적인 프로세스를 파악하는 지능이 정적인 관계를 이해하는 지능보다 상대적으로 낮다.</div></a></li><li><a href=\"#프로세스의-진행도를-알기-위해-필요한-것들\"><div class=\"text-sm font-light data-[active=&quot;true&quot;]:text-base data-[active=&quot;true&quot;]:font-semibold py-0.5 text-neutral-400 data-[active=&quot;true&quot;]:text-primary duration-200 hover:text-primary pl-10\" data-id=\"#프로세스의-진행도를-알기-위해-필요한-것들\">프로세스의 진행도를 알기 위해 필요한 것들</div></a></li><li><a href=\"#프로세스의-진행도는-왜-알아야하죠\"><div class=\"text-sm font-light data-[active=&quot;true&quot;]:text-base data-[active=&quot;true&quot;]:font-semibold py-0.5 text-neutral-400 data-[active=&quot;true&quot;]:text-primary duration-200 hover:text-primary pl-10\" data-id=\"#프로세스의-진행도는-왜-알아야하죠\">프로세스의 진행도는 왜 알아야하죠?</div></a></li><li><a href=\"#goto는-이러한-좌표계를-무너뜨린다\"><div class=\"text-sm font-light data-[active=&quot;true&quot;]:text-base data-[active=&quot;true&quot;]:font-semibold py-0.5 text-neutral-400 data-[active=&quot;true&quot;]:text-primary duration-200 hover:text-primary pl-10\" data-id=\"#goto는-이러한-좌표계를-무너뜨린다\">Goto는 이러한 좌표계를 무너뜨린다</div></a></li><li><a href=\"#결론-그럼에도-불구하고\"><div class=\"text-sm font-light data-[active=&quot;true&quot;]:text-base data-[active=&quot;true&quot;]:font-semibold py-0.5 text-neutral-400 data-[active=&quot;true&quot;]:text-primary duration-200 hover:text-primary pl-10\" data-id=\"#결론-그럼에도-불구하고\">결론: 그럼에도 불구하고</div></a></li><li><a href=\"#요약\"><div class=\"text-sm font-light data-[active=&quot;true&quot;]:text-base data-[active=&quot;true&quot;]:font-semibold py-0.5 text-neutral-400 data-[active=&quot;true&quot;]:text-primary duration-200 hover:text-primary pl-4\" data-id=\"#요약\">요약</div></a></li><li><a href=\"#리뷰-후기\"><div class=\"text-sm font-light data-[active=&quot;true&quot;]:text-base data-[active=&quot;true&quot;]:font-semibold py-0.5 text-neutral-400 data-[active=&quot;true&quot;]:text-primary duration-200 hover:text-primary pl-4\" data-id=\"#리뷰-후기\">리뷰 후기</div></a></li></ol></nav></div><section aria-labelledby=\"go-to-statement-considered-harmful-리뷰\"><h1 class=\"mt-10 mb-4 text-heading1 font-bold leading-normal\" id=\"go-to-statement-considered-harmful-리뷰\"><a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#go-to-statement-considered-harmful-리뷰\"><span class=\"icon icon-link\"></span></a>Go To Statement Considered Harmful 리뷰</h1><p class=\"font-light leading-normal mt-4 mb-2\">이 글은 Goto문을 사용하지 말아야한다고 주장하는 다익스트라의 논문 &quot;<a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" href=\"https://homepages.cwi.nl/~storm/teaching/reader/Dijkstra68.pdf\">Go To statement Considered Harmful</a>&quot;을 읽고 개인적인 감상평을 이야기하는 글입니다.</p><br/><section aria-labelledby=\"리뷰하기-앞서-goto문이란\"><h2 class=\"mt-8 mb-3 text-heading2 font-semibold leading-normal\" id=\"리뷰하기-앞서-goto문이란\"><a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#리뷰하기-앞서-goto문이란\"><span class=\"icon icon-link\"></span></a>리뷰하기 앞서: Goto문이란</h2><pre class=\"rounded-md [&amp;_code]:py-0 [&amp;_code]:px-0 line-numbers language-c\"><code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2 language-c\"><span class=\"code-line\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h&gt;</span></span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">  <span class=\"token keyword\">int</span> number <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>number <span class=\"token operator\">&gt;=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">      <span class=\"token keyword\">goto</span> even<span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">      <span class=\"token keyword\">goto</span> odd<span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">  <span class=\"token punctuation\">}</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">even<span class=\"token operator\">:</span>\n</span><span class=\"code-line\">    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">&quot;짝수&quot;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">odd<span class=\"token operator\">:</span>\n</span><span class=\"code-line\">    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">&quot;홀수&quot;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\"><span class=\"token punctuation\">}</span>\n</span></code></pre><p class=\"font-light leading-normal mt-4 mb-2\">위의 코드와 같이 지정한 레이블로 코드 흐름을 즉시 이동하는 일종의 jump 문법입니다. C를 배워본 사람은 알겠지만, 문법은 있지만 거의 쓰지 말라고 배웁니다.</p></section><section aria-labelledby=\"goto문은-해롭다고-여겨진다\"><h2 class=\"mt-8 mb-3 text-heading2 font-semibold leading-normal\" id=\"goto문은-해롭다고-여겨진다\"><a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#goto문은-해롭다고-여겨진다\"><span class=\"icon icon-link\"></span></a>Goto문은 해롭다고 여겨진다</h2><p class=\"font-light leading-normal mt-4 mb-2\">서두에서 다익스트라는 goto문을 적게 쓸수록 실력 좋은 프로그래머라는 생각이 든다고 밝히며 고차원 개발 언어 (high level langauge) goto문을 제외할 것을 제안합니다.그에 앞서 2가지, 주장이 시작되기 전 필요한 공통된 이해를 설명하는데 각각 다음과 같습니다.</p><br/><section aria-labelledby=\"기저1-프로그래밍의-목적은-프로그램이-만드는-프로세스에-있다\"><h3 class=\"mt-7 mb-2 text-heading3 font-semibold leading-normal\" id=\"기저1-프로그래밍의-목적은-프로그램이-만드는-프로세스에-있다\"><a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#기저1-프로그래밍의-목적은-프로그램이-만드는-프로세스에-있다\"><span class=\"icon icon-link\"></span></a>기저1: 프로그래밍의 목적은 프로그램이 만드는 프로세스에 있다</h3><br/><p class=\"font-light leading-normal mt-4 mb-2\">&quot;프로그래밍의 목적은 프로그램 그 자체가 아닌 프로그램이 만드는 프로세스에 있다.&quot;</p><br/><p class=\"font-light leading-normal mt-4 mb-2\">어찌보면 당연한 이야기입니다. 우리가 프로그램을 만드는 것은 프로그램이 원하는 동작을 하길 바라기 때문입니다. 예를 들어 계산기 프로그램을 만드는 이유는 계산기가 &#x27;계산&#x27;을 하길 기대하기 때문입니다. 논리적으로 문제가 없는 계산기 프로그램을 만들더라도 그것이 계산기가 <code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\">1+1=2</code> 라는 간단한 계산도 제대로 못한다면 우리는 계산기를 만들었다고 할 수 없습니다.</p><br/><p class=\"font-light leading-normal mt-4 mb-2\">또한 프로그래머는 한번 만들어진 프로그램의 동작에 개입할 수 없습니다. 즉, 계산이라는 프로세스는 오직 계산기에 의해서만 이루어진다는 것이죠.</p><br/></section><section aria-labelledby=\"기저2-인간은-동적인-프로세스를-파악하는-지능이-정적인-관계를-이해하는-지능보다-상대적으로-낮다\"><h3 class=\"mt-7 mb-2 text-heading3 font-semibold leading-normal\" id=\"기저2-인간은-동적인-프로세스를-파악하는-지능이-정적인-관계를-이해하는-지능보다-상대적으로-낮다\"><a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#기저2-인간은-동적인-프로세스를-파악하는-지능이-정적인-관계를-이해하는-지능보다-상대적으로-낮다\"><span class=\"icon icon-link\"></span></a>기저2: 인간은 동적인 프로세스를 파악하는 지능이 정적인 관계를 이해하는 지능보다 상대적으로 낮다.</h3><p class=\"font-light leading-normal mt-4 mb-2\">쉽게 이야기해서 정적인 코드를 해석하는 것은 쉽지만, 동적인 프로세스가 어떻게 진행되었는지는 파악하기 어렵다는 이야기입니다.다음의 코드를 봅시다.</p><pre class=\"rounded-md [&amp;_code]:py-0 [&amp;_code]:px-0 line-numbers language-js\"><code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2 language-js\"><span class=\"code-line\"><span class=\"token keyword\">let</span> count <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"token keyword control-flow\">while</span> <span class=\"token punctuation\">(</span>count <span class=\"token operator\">&lt;</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">  <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span>count <span class=\"token operator\">%</span> <span class=\"token number\">13</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">    count <span class=\"token operator\">/=</span> <span class=\"token number\">6</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">  <span class=\"token punctuation\">}</span> <span class=\"token keyword control-flow\">else</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">    count <span class=\"token operator\">+=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">  <span class=\"token punctuation\">}</span>\n</span><span class=\"code-line\"><span class=\"token punctuation\">}</span>\n</span></code></pre><p class=\"font-light leading-normal mt-4 mb-2\">우리는 위 프로그램이 &quot;count가 100보다 커지면 종료된다&quot; 그리고 &quot;count는 13으로 나누어 나머지가 3보다 작으면 6으로 나누고 아니면 5를 더한다&quot; 라는 규칙을 쉽게 파악할 수 있습니다.하지만 count는 프로세스가 진행됨에 따라 변형되고 특정 타이밍에 count의 값이 어떻게 되는지는 파악하기 어렵습니다. 예를 들어 10번째 루프에서 count의 값이 어떻게 되는지 바로 파악이 되시나요?</p><br/><p class=\"font-light leading-normal mt-4 mb-2\">따라서 다익스트라는 정적인 프로그램과 동적인 프로세스 사이의 갭을 최대한 줄여야한다고 주장합니다.</p><br/></section><section aria-labelledby=\"프로세스의-진행도를-알기-위해-필요한-것들\"><h3 class=\"mt-7 mb-2 text-heading3 font-semibold leading-normal\" id=\"프로세스의-진행도를-알기-위해-필요한-것들\"><a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#프로세스의-진행도를-알기-위해-필요한-것들\"><span class=\"icon icon-link\"></span></a>프로세스의 진행도를 알기 위해 필요한 것들</h3><p class=\"font-light leading-normal mt-4 mb-2\">만약 A라는 언어로 작성된 프로그램이 다음과 같이 할당문의 연속으로 구성되어 있다고 합시다.</p><pre class=\"rounded-md [&amp;_code]:py-0 [&amp;_code]:px-0 line-numbers language-js\"><code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2 language-js\"><span class=\"code-line\"><span class=\"token keyword\">const</span> a <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\"><span class=\"token keyword\">const</span> b <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\"><span class=\"token keyword\">const</span> c <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\"><span class=\"token keyword\">let</span> e <span class=\"token operator\">=</span> c<span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">e <span class=\"token operator\">=</span> e <span class=\"token operator\">*</span> a<span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\"><span class=\"token comment\">// ...</span>\n</span></code></pre><p class=\"font-light leading-normal mt-4 mb-2\">위의 코드에서 특정 시점의 프로세스의 상태를 설명할 땐 코드의 한 지점을 가리키면 됩니다. 이를 텍스트 인덱스(textual index)라고 합시다.이해를 위해 조건을 붙이겠습니다.</p><p class=\"font-light leading-normal mt-4 mb-2\">A 언어는 한 줄에 하나의 명령만 실행할 수 있습니다. 즉, <code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\">const a = 1; const b = 2;</code> 와 같이 한 줄에 이어서 코드를 작성할 수 없습니다.</p><br/><p class=\"font-light leading-normal mt-4 mb-2\">이제 텍스트 인덱스는 line number와 일치하게 됩니다. 몇번 줄을 진행하고 있는지 알려주는 것으로 프로세스가 얼만큼 진행되었는지 알 수 있습니다.</p><br/><p class=\"font-light leading-normal mt-4 mb-2\">언어에 if문, if-else문, switch문 같은 분기를 발생시키는 문법을 포함하게 되면 코드 안에서 건너뛰는 부분이 생길지라도 여전히 몇번 줄을 진행하고 있는지 알려주는 것으로 프로세스의 진행도를 알 수 있습니다.</p><pre class=\"rounded-md [&amp;_code]:py-0 [&amp;_code]:px-0 line-numbers language-js\"><code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2 language-js\"><span class=\"code-line\"><span class=\"token keyword\">const</span> a <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\"><span class=\"token keyword\">const</span> b <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\"><span class=\"token keyword\">const</span> c <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\"><span class=\"token keyword\">let</span> e <span class=\"token operator\">=</span> c<span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\"><span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">===</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">  e <span class=\"token operator\">=</span> e <span class=\"token operator\">*</span> a<span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\"><span class=\"token punctuation\">}</span> <span class=\"token keyword control-flow\">else</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">  e <span class=\"token operator\">=</span> e <span class=\"token operator\">*</span> b<span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\"><span class=\"token punctuation\">}</span>\n</span><span class=\"code-line\"><span class=\"token comment\">// if-else가 추가되었고 일부 코드 진행이 생략될 수 있게</span>\n</span><span class=\"code-line\"><span class=\"token comment\">// 되었지만, 프로세스의 진행 상태를 lineNumber를 가리키는 것으로</span>\n</span><span class=\"code-line\"><span class=\"token comment\">// 특정할 수 있는 것은 여전하다.</span>\n</span></code></pre><p class=\"font-light leading-normal mt-4 mb-2\">이제 A언어에 &quot;절차(procedure)&quot;라는 개념을 추가해봅시다. 절차는 일종의 subRutine, function이라고 보면 됩니다.</p><pre class=\"rounded-md [&amp;_code]:py-0 [&amp;_code]:px-0 line-numbers language-js\"><code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2 language-js\"><span class=\"code-line\"><span class=\"token keyword\">function</span> <span class=\"token function\">add3</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">num</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">  <span class=\"token keyword\">const</span> three <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">  <span class=\"token keyword control-flow\">return</span> num <span class=\"token operator\">+</span> three<span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\"><span class=\"token punctuation\">}</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"token keyword\">const</span> a <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\"><span class=\"token keyword\">const</span> b <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\"><span class=\"token keyword\">const</span> c <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\"><span class=\"token keyword\">let</span> d <span class=\"token operator\">=</span> c<span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">d <span class=\"token operator\">=</span> <span class=\"token function\">add3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\"><span class=\"token keyword\">const</span> e <span class=\"token operator\">=</span> <span class=\"token function\">add3</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"token comment\">// 이제 텍스트 인덱스가 2를 가리킨다고 해도</span>\n</span><span class=\"code-line\"><span class=\"token comment\">// 12번 줄의 add3를 호출해서 인덱스 2에 도달했는지,</span>\n</span><span class=\"code-line\"><span class=\"token comment\">// 13번 줄의 add3를 호출해서 인덱스 3에 도달했는지</span>\n</span><span class=\"code-line\"><span class=\"token comment\">// 알 수 없다.</span>\n</span></code></pre><p class=\"font-light leading-normal mt-4 mb-2\">절차가 추가된 언어에선 텍스트 인덱스로는 프로세스의 상태를 설명할 수 없습니다.</p><p class=\"font-light leading-normal mt-4 mb-2\">2번줄을 진행하고 있다고만 말하는 것으로는 12번줄 다음 2번줄로 왔는지, 13번줄 다음 2번줄로 왔는지 알 수 없습니다. 따라서 프로세스의 진행 상태를 나타내려면 텍스트 인덱스가 어떤 절차 안에 들어있는지를 함께 명시해야만 합니다.</p><br/><p class=\"font-light leading-normal mt-4 mb-2\">이제 프로세스의 진행도는 텍스트 인덱스의 배열로 나타낼 수 있습니다. js가 함수 호출 스택을 만드는 것으로 이해하면 됩니다. 앞선 예시로 보면</p><p class=\"font-light leading-normal mt-4 mb-2\"><code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\">[12, 2]</code> : 12번 줄 다음 2번줄로 이어짐</p><p class=\"font-light leading-normal mt-4 mb-2\"><code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\">[12, 3]</code> : 13번 줄 다음 3번줄로 이어짐으로 이해할 수 있습니다.</p><br/><p class=\"font-light leading-normal mt-4 mb-2\">배열의 길이는 함수가 얼마나 깊게 호출되는지에 따라 결정될 것입니다.이제 반복문을 A언어에 추가해봅시다.</p><pre class=\"rounded-md [&amp;_code]:py-0 [&amp;_code]:px-0 line-numbers language-js\"><code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2 language-js\"><span class=\"code-line\"><span class=\"token keyword\">function</span> <span class=\"token function\">add3</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">num</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">  <span class=\"token keyword\">const</span> three <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">  <span class=\"token keyword control-flow\">return</span> num <span class=\"token operator\">+</span> three<span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\"><span class=\"token punctuation\">}</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"token keyword\">const</span> a <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\"><span class=\"token keyword\">const</span> b <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\"><span class=\"token keyword\">const</span> c <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\"><span class=\"token keyword\">let</span> d <span class=\"token operator\">=</span> c<span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">d <span class=\"token operator\">=</span> <span class=\"token function\">add3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\"><span class=\"token keyword\">const</span> e <span class=\"token operator\">=</span> <span class=\"token function\">add3</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"token keyword control-flow\">while</span> <span class=\"token punctuation\">(</span>d <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">  d<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\"><span class=\"token punctuation\">}</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"token keyword control-flow\">while</span> <span class=\"token punctuation\">(</span>e <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">  e<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">  <span class=\"token function\">add3</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\"><span class=\"token punctuation\">}</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\"><span class=\"token comment\">// 이제 얼만큼 반복되었는지도 알아야 프로세스의 진행도를 알 수 있다.</span>\n</span></code></pre><p class=\"font-light leading-normal mt-4 mb-2\">이제 프로세스의 맥락을 이해하려면 반복문의 반복 횟수까지 알아야합니다.반복 횟수를 나타내기 위해 &quot;동적 인덱스(dynamic index)&quot;라는 개념을 추가합시다.</p><p class=\"font-light leading-normal mt-4 mb-2\">반복문 안에서 함수를 호출할수도 있으니, 텍스트 색인 배열과 동적 인덱스를 알아야 프로세스의 진행도를 알 수 있습니다.</p><p class=\"font-light leading-normal mt-4 mb-2\"><code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\">[21, 2], 1</code> : 21번 줄을 1번째 진행중이었고 함수를 통해 2번 줄을 진행중임</p><p class=\"font-light leading-normal mt-4 mb-2\"><code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\">[15], 2</code> : 15번 줄을 2번째 진행중이었음</p><br/></section><section aria-labelledby=\"프로세스의-진행도는-왜-알아야하죠\"><h3 class=\"mt-7 mb-2 text-heading3 font-semibold leading-normal\" id=\"프로세스의-진행도는-왜-알아야하죠\"><a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#프로세스의-진행도는-왜-알아야하죠\"><span class=\"icon icon-link\"></span></a>프로세스의 진행도는 왜 알아야하죠?</h3><p class=\"font-light leading-normal mt-4 mb-2\">앞서 언급한 텍스트 인덱스의 배열, 동적 인덱스를 통해 프로세스의 진행 과정을 나타내는데 성공했습니다.왜 우리가 이런 인덱스를 동원해 프로세스의 특정 진행 지점을 알아야할까요?</p><br/><p class=\"font-light leading-normal mt-4 mb-2\">그 이유는 <strong class=\"font-medium\">우리가 변수의 값을 프로세스의 진행을 통해서만 해석할 수 있기 때문</strong>입니다.방의 인원수를 나타내는 변수 n이 있고 0부터 시작한다고 해봅시다.</p><pre class=\"rounded-md [&amp;_code]:py-0 [&amp;_code]:px-0 line-numbers language-js\"><code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2 language-js\"><span class=\"code-line\"><span class=\"token comment\">// n은 방의 인원수를 나타낸다.</span>\n</span><span class=\"code-line\"><span class=\"token keyword\">let</span> n <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n</span></code></pre><p class=\"font-light leading-normal mt-4 mb-2\">이제 우리는 방에 사람이 들어올때마다 n을 증가시켜 방의 인원수를 나타낼 수 있습니다.</p><pre class=\"rounded-md [&amp;_code]:py-0 [&amp;_code]:px-0 line-numbers language-js\"><code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2 language-js\"><span class=\"code-line\"><span class=\"token keyword\">let</span> n <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\"><span class=\"token keyword control-flow\">while</span> <span class=\"token punctuation\">(</span>untilPeopleIncome<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">  n<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\"><span class=\"token punctuation\">}</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">n<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 방의 인원수</span>\n</span></code></pre></section><section aria-labelledby=\"goto는-이러한-좌표계를-무너뜨린다\"><h3 class=\"mt-7 mb-2 text-heading3 font-semibold leading-normal\" id=\"goto는-이러한-좌표계를-무너뜨린다\"><a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#goto는-이러한-좌표계를-무너뜨린다\"><span class=\"icon icon-link\"></span></a>Goto는 이러한 좌표계를 무너뜨린다</h3><p class=\"font-light leading-normal mt-4 mb-2\">goto를 이용해 3번줄로 이동해버리면 n의 의미가 깨집니다. n은 이제 방의 인원수보다 큰 수 일수도 있습니다.</p><pre class=\"rounded-md [&amp;_code]:py-0 [&amp;_code]:px-0 line-numbers language-js\"><code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2 language-js\"><span class=\"code-line\"><span class=\"token keyword\">let</span> n <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\"><span class=\"token keyword control-flow\">while</span><span class=\"token punctuation\">(</span>untilPeopleIncome<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">  n<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\"><span class=\"token punctuation\">}</span>\n</span><span class=\"code-line\"><span class=\"token keyword control-flow\">if</span><span class=\"token punctuation\">(</span>someCondition<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">  goto <span class=\"token number\">3</span>\n</span><span class=\"code-line\"><span class=\"token punctuation\">}</span>\n</span><span class=\"code-line\">n<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 방의 인원수와 같다고 할 수 있을까?</span>\n</span></code></pre><p class=\"font-light leading-normal mt-4 mb-2\">goto문을 무분별하게 사용하다보면 이렇게 텍스트 인덱스, 동적 인덱스로 나타낼 수 있는 프로세스의 진행도를 무의미하게 만듦니다. 텍스트 인덱스, 동적 인덱스가 고유하더라도 그에 해당하는 프로세스의 진행도의 해석이 더 이상 유의미하지 않기 때문입니다.</p></section><section aria-labelledby=\"결론-그럼에도-불구하고\"><h3 class=\"mt-7 mb-2 text-heading3 font-semibold leading-normal\" id=\"결론-그럼에도-불구하고\"><a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#결론-그럼에도-불구하고\"><span class=\"icon icon-link\"></span></a>결론: 그럼에도 불구하고</h3><p class=\"font-light leading-normal mt-4 mb-2\">다익스트라는 goto문은 너무 원시적이라 프로그램을 망치기 딱 좋다고 말하지만, abortion문 (js의 <code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\">throw</code>) 같이 프로세스의 흐름을 건너뛰는 것 자체를 부정하지는 않습니다. 하지만 이런 문법이 프로세스를 해석하는 것을 방해해선 안된다고 합니다.</p></section></section><section aria-labelledby=\"요약\"><h2 class=\"mt-8 mb-3 text-heading2 font-semibold leading-normal\" id=\"요약\"><a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#요약\"><span class=\"icon icon-link\"></span></a>요약</h2><ol class=\"list-decimal my-4\">\n<li class=\"text-paragraph font-light leading-normal py-1 ml-6\">우리는 상태값을 해석하려면 프로세스의 진행도를 알아야 한다.</li>\n<li class=\"text-paragraph font-light leading-normal py-1 ml-6\">근데 goto를 무분별하게 쓰면 프로세스의 진행도를 알아도 상태값을 해석하기 어려워진다.</li>\n<li class=\"text-paragraph font-light leading-normal py-1 ml-6\">그러니까 goto 쓰지마라</li>\n<li class=\"text-paragraph font-light leading-normal py-1 ml-6\">그래도 throw같은 코드를 쓰지 말라는 것은 아니다. 상태 해석에만 문제가 없으면 상관 없다.</li>\n</ol></section><section aria-labelledby=\"리뷰-후기\"><h2 class=\"mt-8 mb-3 text-heading2 font-semibold leading-normal\" id=\"리뷰-후기\"><a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#리뷰-후기\"><span class=\"icon icon-link\"></span></a>리뷰 후기</h2><p class=\"font-light leading-normal mt-4 mb-2\">이제는 거의 사라져서 볼 수 없는 goto 문법이지만, 여전히 goto의 제한된 버전인 <code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\">throw</code> 같은 문법들이 현대 개발 언어에 남아있다는 점이 논문을 읽는데 재미있는 포인트들이었습니다.</p><p class=\"font-light leading-normal mt-4 mb-2\">논문에서 언급하지는 않지만, <code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\">throw</code> 같은 abortion 문도 막아야한다고 주장하지 않은 것은 에러가 발생했을 때만 점프가 일어나 해석을 방해하지 않기 때문이라고 생각합니다.</p><p class=\"font-light leading-normal mt-4 mb-2\">앞으로는 코드를 작성할 때 프로세스의 흐름 파악과 해석을 어렵게 하고 있지 않은지 좀 더 주의깊게 봐야할 것 같습니다.</p><br/><p class=\"font-light leading-normal mt-4 mb-2\">리뷰에 적지는 않았지만, 흥미로운 점이 하나 더 있었습니다. 논문 내에서 재귀로 반복문을 없앨 수 있지만, 성능상 이유로 반복문은 있는게 좋은 것 같다고 하는 점, 그리고 정적인 코드와 동적인 프로세스 사이의 갭을 줄여야한다고 하는 것도 그렇고 이미 좋은 코드는 선언적이라는 함수형 패러다임에 대한 인사이트를 어느정도 가지고 있다는 점입니다.</p><br/></section></section><button class=\"__trds __trds button trds-inline-flex trds-justify-center trds-place-items-center trds-whitespace-nowrap trds-rounded-lg trds-text-md trds-font-medium trds-gap-2 trds-transition-colors trds-cursor-pointer disabled:trds-cursor-not-allowed disabled:trds-opacity-50 trds-bg-neutral trds-text-fg-neutral disabled:trds-bg-neutral enabled:hover:trds-bg-neutral-hover enabled:active:trds-bg-neutral-pressed __trds trds-h-11 trds-w-11 trds-px-0 trds-py-0\" type=\"button\" aria-disabled=\"false\" aria-busy=\"false\" aria-label=\"Share this article\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-share\"><path d=\"M4 12v8a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-8\"></path><polyline points=\"16 6 12 2 8 6\"></polyline><line x1=\"12\" x2=\"12\" y1=\"2\" y2=\"15\"></line></svg></button><div data-scope=\"toast\" data-part=\"group\" dir=\"ltr\" tabindex=\"-1\" aria-label=\"bottom Notifications alt+T\" id=\"toast-group:bottom\" data-placement=\"bottom\" data-side=\"bottom\" data-align=\"center\" aria-live=\"polite\" role=\"region\" style=\"position:fixed;pointer-events:none;display:flex;flex-direction:column;--gap:16px;--first-height:0px;z-index:2147483647;align-items:center;bottom:max(env(safe-area-inset-bottom, 0px), 1rem);inset-inline-end:calc(env(safe-area-inset-right, 0px) + 1rem);inset-inline-start:calc(env(safe-area-inset-left, 0px) + 1rem)\"></div></div><section id=\"author\"><div class=\"flex flex-row gap-4 items-center\"><div class=\"__trds trds-animate-shimmer trds-bg-clip-padding-box trds-text-transparent trds-cursor-default trds-pointer-events-none trds-select-none before::trds-invisible after::trds-invisible [&amp;_*]:trds-invisible trds-rounded-lg rounded-full\"><div data-scope=\"avatar\" data-part=\"root\" dir=\"ltr\" id=\"avatar::Rn7obtsra:\" class=\"trds-rounded-full trds-overflow-hidden w-16 h-16\"><img data-scope=\"avatar\" data-part=\"image\" hidden=\"\" dir=\"ltr\" id=\"avatar::Rn7obtsra::image\" data-state=\"hidden\" class=\"trds-bg-muted\"/><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"64\" height=\"64\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-user trds-bg-muted trds-w-full trds-h-full\" data-scope=\"avatar\" data-part=\"fallback\" dir=\"ltr\" id=\"avatar::Rn7obtsra::fallback\" data-state=\"visible\"><path d=\"M19 21v-2a4 4 0 0 0-4-4H9a4 4 0 0 0-4 4v2\"></path><circle cx=\"12\" cy=\"7\" r=\"4\"></circle></svg></div></div><div class=\"text-pretty flex flex-col gap-2\"><div class=\"__trds trds-animate-shimmer trds-bg-clip-padding-box trds-text-transparent trds-cursor-default trds-pointer-events-none trds-select-none before::trds-invisible after::trds-invisible [&amp;_*]:trds-invisible trds-rounded-lg h-fit w-fit\"><strong class=\"inline-block h-6 min-w-36\"> </strong></div><div class=\"__trds trds-animate-shimmer trds-bg-clip-padding-box trds-text-transparent trds-cursor-default trds-pointer-events-none trds-select-none before::trds-invisible after::trds-invisible [&amp;_*]:trds-invisible trds-rounded-lg h-fit w-fit\"><p class=\"whitespace-pre-wrap h-6 min-w-64\"></p></div></div></div></section><section><div class=\"giscus w-full min-w-screen-md\"></div></section></article></main><footer class=\"self-center w-full max-w-screen-md px-4 h-96\"><p>© 2024-<!-- -->2024<!-- --> <!-- -->dev2820<!-- -->. All rights reserved.</p></footer><script src=\"/next-blog/_next/static/chunks/webpack-8f27d743501d147d.js\" async=\"\"></script><script>(self.__next_f=self.__next_f||[]).push([0]);self.__next_f.push([2,null])</script><script>self.__next_f.push([1,\"1:HL[\\\"/next-blog/_next/static/media/3e7b7e3fd4560936-s.p.woff2\\\",\\\"font\\\",{\\\"crossOrigin\\\":\\\"\\\",\\\"type\\\":\\\"font/woff2\\\"}]\\n2:HL[\\\"/next-blog/_next/static/media/ff840cfebfb63b0c-s.p.woff2\\\",\\\"font\\\",{\\\"crossOrigin\\\":\\\"\\\",\\\"type\\\":\\\"font/woff2\\\"}]\\n3:HL[\\\"/next-blog/_next/static/css/16077bc16defb9b9.css\\\",\\\"style\\\"]\\n4:HL[\\\"/next-blog/_next/static/css/203da25389b4eeab.css\\\",\\\"style\\\"]\\n\"])</script><script>self.__next_f.push([1,\"5:I[5726,[],\\\"\\\"]\\n8:I[1699,[],\\\"\\\"]\\na:I[2579,[],\\\"\\\"]\\nb:I[3805,[\\\"805\\\",\\\"static/chunks/805-a8af350d35fb9160.js\\\",\\\"418\\\",\\\"static/chunks/app/posts/%5Bslug%5D/layout-1cf1294e1a2539f4.js\\\"],\\\"\\\"]\\nc:I[9618,[\\\"618\\\",\\\"static/chunks/618-f2bb34773a0d24b2.js\\\",\\\"991\\\",\\\"static/chunks/app/posts/page-e8c6275c8ebfad50.js\\\"],\\\"\\\"]\\nd:I[6210,[\\\"618\\\",\\\"static/chunks/618-f2bb34773a0d24b2.js\\\",\\\"372\\\",\\\"static/chunks/372-b649e69f56e8eb19.js\\\",\\\"185\\\",\\\"static/chunks/app/layout-c7fa40d911107206.js\\\"],\\\"BrandLogo\\\"]\\ne:I[9205,[\\\"618\\\",\\\"static/chunks/618-f2bb34773a0d24b2.js\\\",\\\"372\\\",\\\"static/chunks/372-b649e69f56e8eb19.js\\\",\\\"185\\\",\\\"static/chunks/app/layout-c7fa40d911107206.js\\\"],\\\"GlobalNavigationBar\\\"]\\n10:I[3141,[],\\\"\\\"]\\n9:[\\\"slug\\\",\\\"go-to-statement-considered-harmful-review\\\",\\\"d\\\"]\\n11:[]\\n\"])</script><script>self.__next_f.push([1,\"0:[[[\\\"$\\\",\\\"link\\\",\\\"0\\\",{\\\"rel\\\":\\\"stylesheet\\\",\\\"href\\\":\\\"/next-blog/_next/static/css/16077bc16defb9b9.css\\\",\\\"precedence\\\":\\\"next\\\",\\\"crossOrigin\\\":\\\"$undefined\\\"}]],[\\\"$\\\",\\\"$L5\\\",null,{\\\"buildId\\\":\\\"FkDD4ed24GsUGsJlrpxW5\\\",\\\"assetPrefix\\\":\\\"/next-blog\\\",\\\"initialCanonicalUrl\\\":\\\"/posts/go-to-statement-considered-harmful-review\\\",\\\"initialTree\\\":[\\\"\\\",{\\\"children\\\":[\\\"posts\\\",{\\\"children\\\":[[\\\"slug\\\",\\\"go-to-statement-considered-harmful-review\\\",\\\"d\\\"],{\\\"children\\\":[\\\"__PAGE__?{\\\\\\\"slug\\\\\\\":\\\\\\\"go-to-statement-considered-harmful-review\\\\\\\"}\\\",{}]}]}]},\\\"$undefined\\\",\\\"$undefined\\\",true],\\\"initialSeedData\\\":[\\\"\\\",{\\\"children\\\":[\\\"posts\\\",{\\\"children\\\":[[\\\"slug\\\",\\\"go-to-statement-considered-harmful-review\\\",\\\"d\\\"],{\\\"children\\\":[\\\"__PAGE__\\\",{},[[\\\"$L6\\\",\\\"$L7\\\"],null],null]},[[[\\\"$\\\",\\\"$L8\\\",null,{\\\"parallelRouterKey\\\":\\\"children\\\",\\\"segmentPath\\\":[\\\"children\\\",\\\"posts\\\",\\\"children\\\",\\\"$9\\\",\\\"children\\\"],\\\"error\\\":\\\"$undefined\\\",\\\"errorStyles\\\":\\\"$undefined\\\",\\\"errorScripts\\\":\\\"$undefined\\\",\\\"template\\\":[\\\"$\\\",\\\"$La\\\",null,{}],\\\"templateStyles\\\":\\\"$undefined\\\",\\\"templateScripts\\\":\\\"$undefined\\\",\\\"notFound\\\":\\\"$undefined\\\",\\\"notFoundStyles\\\":\\\"$undefined\\\",\\\"styles\\\":null}],[\\\"$\\\",\\\"$Lb\\\",null,{\\\"src\\\":\\\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/prism.min.js\\\"}],[\\\"$\\\",\\\"$Lb\\\",null,{\\\"src\\\":\\\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-javascript.min.js\\\"}],[\\\"$\\\",\\\"$Lb\\\",null,{\\\"src\\\":\\\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-typescript.min.js\\\"}],[\\\"$\\\",\\\"$Lb\\\",null,{\\\"src\\\":\\\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-jsx.min.js\\\"}],[\\\"$\\\",\\\"$Lb\\\",null,{\\\"src\\\":\\\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-tsx.min.js\\\"}],[\\\"$\\\",\\\"$Lb\\\",null,{\\\"src\\\":\\\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-c.min.js\\\"}],[\\\"$\\\",\\\"$Lb\\\",null,{\\\"src\\\":\\\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/plugins/line-numbers/prism-line-numbers.min.js\\\"}]],null],null]},[\\\"$\\\",\\\"$L8\\\",null,{\\\"parallelRouterKey\\\":\\\"children\\\",\\\"segmentPath\\\":[\\\"children\\\",\\\"posts\\\",\\\"children\\\"],\\\"error\\\":\\\"$undefined\\\",\\\"errorStyles\\\":\\\"$undefined\\\",\\\"errorScripts\\\":\\\"$undefined\\\",\\\"template\\\":[\\\"$\\\",\\\"$La\\\",null,{}],\\\"templateStyles\\\":\\\"$undefined\\\",\\\"templateScripts\\\":\\\"$undefined\\\",\\\"notFound\\\":\\\"$undefined\\\",\\\"notFoundStyles\\\":\\\"$undefined\\\",\\\"styles\\\":[[\\\"$\\\",\\\"link\\\",\\\"0\\\",{\\\"rel\\\":\\\"stylesheet\\\",\\\"href\\\":\\\"/next-blog/_next/static/css/203da25389b4eeab.css\\\",\\\"precedence\\\":\\\"next\\\",\\\"crossOrigin\\\":\\\"$undefined\\\"}]]}],null]},[[\\\"$\\\",\\\"html\\\",null,{\\\"lang\\\":\\\"kr\\\",\\\"className\\\":\\\"__variable_fa65fd __variable_7691e4 scroll-smooth\\\",\\\"children\\\":[\\\"$\\\",\\\"body\\\",null,{\\\"className\\\":\\\"__className_fa65fd flex flex-col text-gray-800\\\",\\\"children\\\":[[\\\"$\\\",\\\"link\\\",null,{\\\"href\\\":\\\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/plugins/line-numbers/prism-line-numbers.min.css\\\",\\\"rel\\\":\\\"stylesheet\\\"}],[\\\"$\\\",\\\"header\\\",null,{\\\"className\\\":\\\"flex flex-row justify-center py-2 items-center self-center w-full max-w-screen-md px-4\\\",\\\"children\\\":[[\\\"$\\\",\\\"$Lc\\\",null,{\\\"href\\\":\\\"/\\\",\\\"children\\\":[\\\"$\\\",\\\"$Ld\\\",null,{\\\"height\\\":48}]}],[\\\"$\\\",\\\"div\\\",null,{\\\"className\\\":\\\"flex-1\\\"}],[\\\"$\\\",\\\"$Le\\\",null,{}]]}],[\\\"$\\\",\\\"main\\\",null,{\\\"className\\\":\\\"self-center w-full max-w-screen-md p-4 text-gray-800\\\",\\\"children\\\":[\\\"$\\\",\\\"$L8\\\",null,{\\\"parallelRouterKey\\\":\\\"children\\\",\\\"segmentPath\\\":[\\\"children\\\"],\\\"error\\\":\\\"$undefined\\\",\\\"errorStyles\\\":\\\"$undefined\\\",\\\"errorScripts\\\":\\\"$undefined\\\",\\\"template\\\":[\\\"$\\\",\\\"$La\\\",null,{}],\\\"templateStyles\\\":\\\"$undefined\\\",\\\"templateScripts\\\":\\\"$undefined\\\",\\\"notFound\\\":[\\\"$\\\",\\\"div\\\",null,{\\\"children\\\":[[\\\"$\\\",\\\"h2\\\",null,{\\\"children\\\":\\\"Not Found\\\"}],[\\\"$\\\",\\\"p\\\",null,{\\\"children\\\":\\\"Could not find requested resource\\\"}],[\\\"$\\\",\\\"$Lc\\\",null,{\\\"href\\\":\\\"/\\\",\\\"children\\\":\\\"Return Home\\\"}]]}],\\\"notFoundStyles\\\":[],\\\"styles\\\":null}]}],[\\\"$\\\",\\\"footer\\\",null,{\\\"className\\\":\\\"self-center w-full max-w-screen-md px-4 h-96\\\",\\\"children\\\":[\\\"$\\\",\\\"p\\\",null,{\\\"children\\\":[\\\"© 2024-\\\",2024,\\\" \\\",\\\"dev2820\\\",\\\". All rights reserved.\\\"]}]}]]}]}],null],null],\\\"couldBeIntercepted\\\":false,\\\"initialHead\\\":[null,\\\"$Lf\\\"],\\\"globalErrorComponent\\\":\\\"$10\\\",\\\"missingSlots\\\":\\\"$W11\\\"}]]\\n\"])</script><script>self.__next_f.push([1,\"12:I[2870,[\\\"587\\\",\\\"static/chunks/952ad60e-7cdac7b6bf36214c.js\\\",\\\"618\\\",\\\"static/chunks/618-f2bb34773a0d24b2.js\\\",\\\"372\\\",\\\"static/chunks/372-b649e69f56e8eb19.js\\\",\\\"805\\\",\\\"static/chunks/805-a8af350d35fb9160.js\\\",\\\"333\\\",\\\"static/chunks/app/posts/%5Bslug%5D/page-e951164d6ad6c144.js\\\"],\\\"TableOfContents\\\"]\\n13:I[6894,[\\\"587\\\",\\\"static/chunks/952ad60e-7cdac7b6bf36214c.js\\\",\\\"618\\\",\\\"static/chunks/618-f2bb34773a0d24b2.js\\\",\\\"372\\\",\\\"static/chunks/372-b649e69f56e8eb19.js\\\",\\\"805\\\",\\\"static/chunks/805-a8af350d35fb9160.js\\\",\\\"333\\\",\\\"static/chunks/app/posts/%5Bslug%5D/page-e951164d6ad6c144.js\\\"],\\\"Anchor\\\"]\\n14:I[4547,[\\\"587\\\",\\\"static/chunks/952ad60e-7cdac7b6bf36214c.js\\\",\\\"618\\\",\\\"static/chunks/618-f2bb34773a0d24b2.js\\\",\\\"372\\\",\\\"static/chunks/372-b649e69f56e8eb19.js\\\",\\\"805\\\",\\\"static/chunks/805-a8af350d35fb9160.js\\\",\\\"333\\\",\\\"static/chunks/app/posts/%5Bslug%5D/page-e951164d6ad6c144.js\\\"],\\\"ShareButton\\\"]\\n15:I[6398,[\\\"587\\\",\\\"static/chunks/952ad60e-7cdac7b6bf36214c.js\\\",\\\"618\\\",\\\"static/chunks/618-f2bb34773a0d24b2.js\\\",\\\"372\\\",\\\"static/chunks/372-b649e69f56e8eb19.js\\\",\\\"805\\\",\\\"static/chunks/805-a8af350d35fb9160.js\\\",\\\"333\\\",\\\"static/chunks/app/posts/%5Bslug%5D/page-e951164d6ad6c144.js\\\"],\\\"AuthorInfo\\\"]\\n\"])</script><script>self.__next_f.push([1,\"7:[\\\"$\\\",\\\"article\\\",null,{\\\"className\\\":\\\"relative\\\",\\\"children\\\":[[\\\"$\\\",\\\"header\\\",null,{\\\"id\\\":\\\"post-meta\\\",\\\"children\\\":[\\\"$undefined\\\",[\\\"$\\\",\\\"h1\\\",null,{\\\"className\\\":\\\"mt-10 mb-4 text-heading1 font-bold leading-normal\\\",\\\"id\\\":\\\"go-to-statement-considered-harmful-review\\\",\\\"children\\\":\\\"go-to-statement-considered-harmful-review\\\"}],[\\\"$\\\",\\\"time\\\",null,{\\\"dateTime\\\":\\\"2024-02-17\\\",\\\"aria-label\\\":\\\"Published on 2024-02-17\\\",\\\"children\\\":\\\"2024-02-17\\\"}],\\\" \\\",\\\"|\\\",\\\" \\\",[\\\"$\\\",\\\"time\\\",null,{\\\"dateTime\\\":\\\"PT1M\\\",\\\"aria-label\\\":\\\"Estimated reading time\\\",\\\"children\\\":[1,\\\" mins\\\"]}]]}],[\\\"$\\\",\\\"div\\\",null,{\\\"id\\\":\\\"content\\\",\\\"className\\\":\\\"relative\\\",\\\"children\\\":[[\\\"$\\\",\\\"div\\\",null,{\\\"id\\\":\\\"table-of-header\\\",\\\"className\\\":\\\"absolute -right-12 translate-x-full h-full w-52 desktop:block hidden\\\",\\\"children\\\":[\\\"$\\\",\\\"$L12\\\",null,{\\\"toc\\\":[{\\\"level\\\":2,\\\"content\\\":\\\"리뷰하기 앞서: Goto문이란\\\",\\\"slug\\\":\\\"#리뷰하기-앞서-goto문이란\\\"},{\\\"level\\\":2,\\\"content\\\":\\\"Goto문은 해롭다고 여겨진다\\\",\\\"slug\\\":\\\"#goto문은-해롭다고-여겨진다\\\"},{\\\"level\\\":3,\\\"content\\\":\\\"기저1: 프로그래밍의 목적은 프로그램이 만드는 프로세스에 있다\\\",\\\"slug\\\":\\\"#기저1-프로그래밍의-목적은-프로그램이-만드는-프로세스에-있다\\\"},{\\\"level\\\":3,\\\"content\\\":\\\"기저2: 인간은 동적인 프로세스를 파악하는 지능이 정적인 관계를 이해하는 지능보다 상대적으로 낮다.\\\",\\\"slug\\\":\\\"#기저2-인간은-동적인-프로세스를-파악하는-지능이-정적인-관계를-이해하는-지능보다-상대적으로-낮다\\\"},{\\\"level\\\":3,\\\"content\\\":\\\"프로세스의 진행도를 알기 위해 필요한 것들\\\",\\\"slug\\\":\\\"#프로세스의-진행도를-알기-위해-필요한-것들\\\"},{\\\"level\\\":3,\\\"content\\\":\\\"프로세스의 진행도는 왜 알아야하죠?\\\",\\\"slug\\\":\\\"#프로세스의-진행도는-왜-알아야하죠\\\"},{\\\"level\\\":3,\\\"content\\\":\\\"Goto는 이러한 좌표계를 무너뜨린다\\\",\\\"slug\\\":\\\"#goto는-이러한-좌표계를-무너뜨린다\\\"},{\\\"level\\\":3,\\\"content\\\":\\\"결론: 그럼에도 불구하고\\\",\\\"slug\\\":\\\"#결론-그럼에도-불구하고\\\"},{\\\"level\\\":2,\\\"content\\\":\\\"요약\\\",\\\"slug\\\":\\\"#요약\\\"},{\\\"level\\\":2,\\\"content\\\":\\\"리뷰 후기\\\",\\\"slug\\\":\\\"#리뷰-후기\\\"}],\\\"className\\\":\\\"sticky top-24\\\"}]}],[\\\"$\\\",\\\"section\\\",null,{\\\"aria-labelledby\\\":\\\"go-to-statement-considered-harmful-리뷰\\\",\\\"children\\\":[[\\\"$\\\",\\\"h1\\\",null,{\\\"className\\\":\\\"mt-10 mb-4 text-heading1 font-bold leading-normal\\\",\\\"id\\\":\\\"go-to-statement-considered-harmful-리뷰\\\",\\\"children\\\":[[\\\"$\\\",\\\"$L13\\\",null,{\\\"aria-hidden\\\":\\\"true\\\",\\\"tabIndex\\\":\\\"-1\\\",\\\"href\\\":\\\"#go-to-statement-considered-harmful-리뷰\\\",\\\"children\\\":[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"icon icon-link\\\"}]}],\\\"Go To Statement Considered Harmful 리뷰\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":[\\\"이 글은 Goto문을 사용하지 말아야한다고 주장하는 다익스트라의 논문 \\\\\\\"\\\",[\\\"$\\\",\\\"$L13\\\",null,{\\\"href\\\":\\\"https://homepages.cwi.nl/~storm/teaching/reader/Dijkstra68.pdf\\\",\\\"children\\\":\\\"Go To statement Considered Harmful\\\"}],\\\"\\\\\\\"을 읽고 개인적인 감상평을 이야기하는 글입니다.\\\"]}],[\\\"$\\\",\\\"br\\\",null,{}],[\\\"$\\\",\\\"section\\\",null,{\\\"aria-labelledby\\\":\\\"리뷰하기-앞서-goto문이란\\\",\\\"children\\\":[[\\\"$\\\",\\\"h2\\\",null,{\\\"className\\\":\\\"mt-8 mb-3 text-heading2 font-semibold leading-normal\\\",\\\"id\\\":\\\"리뷰하기-앞서-goto문이란\\\",\\\"children\\\":[[\\\"$\\\",\\\"$L13\\\",null,{\\\"aria-hidden\\\":\\\"true\\\",\\\"tabIndex\\\":\\\"-1\\\",\\\"href\\\":\\\"#리뷰하기-앞서-goto문이란\\\",\\\"children\\\":[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"icon icon-link\\\"}]}],\\\"리뷰하기 앞서: Goto문이란\\\"]}],[\\\"$\\\",\\\"pre\\\",null,{\\\"className\\\":\\\"rounded-md [\\u0026_code]:py-0 [\\u0026_code]:px-0 line-numbers language-c\\\",\\\"children\\\":[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2 language-c\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token macro property\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token directive-hash\\\",\\\"children\\\":\\\"#\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token directive keyword\\\",\\\"children\\\":\\\"include\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token string\\\",\\\"children\\\":\\\"\\u003cstdio.h\\u003e\\\"}]]}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword\\\",\\\"children\\\":\\\"int\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token function\\\",\\\"children\\\":\\\"main\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"{\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword\\\",\\\"children\\\":\\\"int\\\"}],\\\" number \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"5\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword\\\",\\\"children\\\":\\\"if\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"number \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"\\u003e=\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"0\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"{\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"      \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword\\\",\\\"children\\\":\\\"goto\\\"}],\\\" even\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"}\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword\\\",\\\"children\\\":\\\"else\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"{\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"      \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword\\\",\\\"children\\\":\\\"goto\\\"}],\\\" odd\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"}\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"even\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\":\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"    \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token function\\\",\\\"children\\\":\\\"printf\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token string\\\",\\\"children\\\":\\\"\\\\\\\"짝수\\\\\\\"\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"odd\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\":\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"    \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token function\\\",\\\"children\\\":\\\"printf\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token string\\\",\\\"children\\\":\\\"\\\\\\\"홀수\\\\\\\"\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword\\\",\\\"children\\\":\\\"return\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"0\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"}\\\"}],\\\"\\\\n\\\"]}]]}]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"위의 코드와 같이 지정한 레이블로 코드 흐름을 즉시 이동하는 일종의 jump 문법입니다. C를 배워본 사람은 알겠지만, 문법은 있지만 거의 쓰지 말라고 배웁니다.\\\"}]]}],[\\\"$\\\",\\\"section\\\",null,{\\\"aria-labelledby\\\":\\\"goto문은-해롭다고-여겨진다\\\",\\\"children\\\":[[\\\"$\\\",\\\"h2\\\",null,{\\\"className\\\":\\\"mt-8 mb-3 text-heading2 font-semibold leading-normal\\\",\\\"id\\\":\\\"goto문은-해롭다고-여겨진다\\\",\\\"children\\\":[[\\\"$\\\",\\\"$L13\\\",null,{\\\"aria-hidden\\\":\\\"true\\\",\\\"tabIndex\\\":\\\"-1\\\",\\\"href\\\":\\\"#goto문은-해롭다고-여겨진다\\\",\\\"children\\\":[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"icon icon-link\\\"}]}],\\\"Goto문은 해롭다고 여겨진다\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"서두에서 다익스트라는 goto문을 적게 쓸수록 실력 좋은 프로그래머라는 생각이 든다고 밝히며 고차원 개발 언어 (high level langauge) goto문을 제외할 것을 제안합니다.그에 앞서 2가지, 주장이 시작되기 전 필요한 공통된 이해를 설명하는데 각각 다음과 같습니다.\\\"}],[\\\"$\\\",\\\"br\\\",null,{}],[\\\"$\\\",\\\"section\\\",null,{\\\"aria-labelledby\\\":\\\"기저1-프로그래밍의-목적은-프로그램이-만드는-프로세스에-있다\\\",\\\"children\\\":[[\\\"$\\\",\\\"h3\\\",null,{\\\"className\\\":\\\"mt-7 mb-2 text-heading3 font-semibold leading-normal\\\",\\\"id\\\":\\\"기저1-프로그래밍의-목적은-프로그램이-만드는-프로세스에-있다\\\",\\\"children\\\":[[\\\"$\\\",\\\"$L13\\\",null,{\\\"aria-hidden\\\":\\\"true\\\",\\\"tabIndex\\\":\\\"-1\\\",\\\"href\\\":\\\"#기저1-프로그래밍의-목적은-프로그램이-만드는-프로세스에-있다\\\",\\\"children\\\":[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"icon icon-link\\\"}]}],\\\"기저1: 프로그래밍의 목적은 프로그램이 만드는 프로세스에 있다\\\"]}],[\\\"$\\\",\\\"br\\\",null,{}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"\\\\\\\"프로그래밍의 목적은 프로그램 그 자체가 아닌 프로그램이 만드는 프로세스에 있다.\\\\\\\"\\\"}],[\\\"$\\\",\\\"br\\\",null,{}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":[\\\"어찌보면 당연한 이야기입니다. 우리가 프로그램을 만드는 것은 프로그램이 원하는 동작을 하길 바라기 때문입니다. 예를 들어 계산기 프로그램을 만드는 이유는 계산기가 '계산'을 하길 기대하기 때문입니다. 논리적으로 문제가 없는 계산기 프로그램을 만들더라도 그것이 계산기가 \\\",[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\\\",\\\"children\\\":\\\"1+1=2\\\"}],\\\" 라는 간단한 계산도 제대로 못한다면 우리는 계산기를 만들었다고 할 수 없습니다.\\\"]}],[\\\"$\\\",\\\"br\\\",null,{}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"또한 프로그래머는 한번 만들어진 프로그램의 동작에 개입할 수 없습니다. 즉, 계산이라는 프로세스는 오직 계산기에 의해서만 이루어진다는 것이죠.\\\"}],[\\\"$\\\",\\\"br\\\",null,{}]]}],[\\\"$\\\",\\\"section\\\",null,{\\\"aria-labelledby\\\":\\\"기저2-인간은-동적인-프로세스를-파악하는-지능이-정적인-관계를-이해하는-지능보다-상대적으로-낮다\\\",\\\"children\\\":[[\\\"$\\\",\\\"h3\\\",null,{\\\"className\\\":\\\"mt-7 mb-2 text-heading3 font-semibold leading-normal\\\",\\\"id\\\":\\\"기저2-인간은-동적인-프로세스를-파악하는-지능이-정적인-관계를-이해하는-지능보다-상대적으로-낮다\\\",\\\"children\\\":[[\\\"$\\\",\\\"$L13\\\",null,{\\\"aria-hidden\\\":\\\"true\\\",\\\"tabIndex\\\":\\\"-1\\\",\\\"href\\\":\\\"#기저2-인간은-동적인-프로세스를-파악하는-지능이-정적인-관계를-이해하는-지능보다-상대적으로-낮다\\\",\\\"children\\\":[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"icon icon-link\\\"}]}],\\\"기저2: 인간은 동적인 프로세스를 파악하는 지능이 정적인 관계를 이해하는 지능보다 상대적으로 낮다.\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"쉽게 이야기해서 정적인 코드를 해석하는 것은 쉽지만, 동적인 프로세스가 어떻게 진행되었는지는 파악하기 어렵다는 이야기입니다.다음의 코드를 봅시다.\\\"}],[\\\"$\\\",\\\"pre\\\",null,{\\\"className\\\":\\\"rounded-md [\\u0026_code]:py-0 [\\u0026_code]:px-0 line-numbers language-js\\\",\\\"children\\\":[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2 language-js\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword\\\",\\\"children\\\":\\\"let\\\"}],\\\" count \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"0\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword control-flow\\\",\\\"children\\\":\\\"while\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"count \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"\\u003c\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"100\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"{\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword control-flow\\\",\\\"children\\\":\\\"if\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"count \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"%\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"13\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"\\u003c\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"3\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"{\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"    count \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"/=\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"6\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"}\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword control-flow\\\",\\\"children\\\":\\\"else\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"{\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"    count \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"+=\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"5\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"}\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"}\\\"}],\\\"\\\\n\\\"]}]]}]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"우리는 위 프로그램이 \\\\\\\"count가 100보다 커지면 종료된다\\\\\\\" 그리고 \\\\\\\"count는 13으로 나누어 나머지가 3보다 작으면 6으로 나누고 아니면 5를 더한다\\\\\\\" 라는 규칙을 쉽게 파악할 수 있습니다.하지만 count는 프로세스가 진행됨에 따라 변형되고 특정 타이밍에 count의 값이 어떻게 되는지는 파악하기 어렵습니다. 예를 들어 10번째 루프에서 count의 값이 어떻게 되는지 바로 파악이 되시나요?\\\"}],[\\\"$\\\",\\\"br\\\",null,{}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"따라서 다익스트라는 정적인 프로그램과 동적인 프로세스 사이의 갭을 최대한 줄여야한다고 주장합니다.\\\"}],[\\\"$\\\",\\\"br\\\",null,{}]]}],[\\\"$\\\",\\\"section\\\",null,{\\\"aria-labelledby\\\":\\\"프로세스의-진행도를-알기-위해-필요한-것들\\\",\\\"children\\\":[[\\\"$\\\",\\\"h3\\\",null,{\\\"className\\\":\\\"mt-7 mb-2 text-heading3 font-semibold leading-normal\\\",\\\"id\\\":\\\"프로세스의-진행도를-알기-위해-필요한-것들\\\",\\\"children\\\":[[\\\"$\\\",\\\"$L13\\\",null,{\\\"aria-hidden\\\":\\\"true\\\",\\\"tabIndex\\\":\\\"-1\\\",\\\"href\\\":\\\"#프로세스의-진행도를-알기-위해-필요한-것들\\\",\\\"children\\\":[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"icon icon-link\\\"}]}],\\\"프로세스의 진행도를 알기 위해 필요한 것들\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"만약 A라는 언어로 작성된 프로그램이 다음과 같이 할당문의 연속으로 구성되어 있다고 합시다.\\\"}],[\\\"$\\\",\\\"pre\\\",null,{\\\"className\\\":\\\"rounded-md [\\u0026_code]:py-0 [\\u0026_code]:px-0 line-numbers language-js\\\",\\\"children\\\":[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2 language-js\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword\\\",\\\"children\\\":\\\"const\\\"}],\\\" a \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"1\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword\\\",\\\"children\\\":\\\"const\\\"}],\\\" b \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"2\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword\\\",\\\"children\\\":\\\"const\\\"}],\\\" c \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"3\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword\\\",\\\"children\\\":\\\"let\\\"}],\\\" e \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" c\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"e \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" e \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"*\\\"}],\\\" a\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token comment\\\",\\\"children\\\":\\\"// ...\\\"}],\\\"\\\\n\\\"]}]]}]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"위의 코드에서 특정 시점의 프로세스의 상태를 설명할 땐 코드의 한 지점을 가리키면 됩니다. 이를 텍스트 인덱스(textual index)라고 합시다.이해를 위해 조건을 붙이겠습니다.\\\"}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":[\\\"A 언어는 한 줄에 하나의 명령만 실행할 수 있습니다. 즉, \\\",[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\\\",\\\"children\\\":\\\"const a = 1; const b = 2;\\\"}],\\\" 와 같이 한 줄에 이어서 코드를 작성할 수 없습니다.\\\"]}],[\\\"$\\\",\\\"br\\\",null,{}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"이제 텍스트 인덱스는 line number와 일치하게 됩니다. 몇번 줄을 진행하고 있는지 알려주는 것으로 프로세스가 얼만큼 진행되었는지 알 수 있습니다.\\\"}],[\\\"$\\\",\\\"br\\\",null,{}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"언어에 if문, if-else문, switch문 같은 분기를 발생시키는 문법을 포함하게 되면 코드 안에서 건너뛰는 부분이 생길지라도 여전히 몇번 줄을 진행하고 있는지 알려주는 것으로 프로세스의 진행도를 알 수 있습니다.\\\"}],[\\\"$\\\",\\\"pre\\\",null,{\\\"className\\\":\\\"rounded-md [\\u0026_code]:py-0 [\\u0026_code]:px-0 line-numbers language-js\\\",\\\"children\\\":[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2 language-js\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword\\\",\\\"children\\\":\\\"const\\\"}],\\\" a \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"1\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword\\\",\\\"children\\\":\\\"const\\\"}],\\\" b \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"2\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword\\\",\\\"children\\\":\\\"const\\\"}],\\\" c \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"3\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword\\\",\\\"children\\\":\\\"let\\\"}],\\\" e \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" c\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword control-flow\\\",\\\"children\\\":\\\"if\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"a \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"===\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"3\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"{\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  e \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" e \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"*\\\"}],\\\" a\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"}\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword control-flow\\\",\\\"children\\\":\\\"else\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"{\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  e \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" e \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"*\\\"}],\\\" b\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"}\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token comment\\\",\\\"children\\\":\\\"// if-else가 추가되었고 일부 코드 진행이 생략될 수 있게\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token comment\\\",\\\"children\\\":\\\"// 되었지만, 프로세스의 진행 상태를 lineNumber를 가리키는 것으로\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token comment\\\",\\\"children\\\":\\\"// 특정할 수 있는 것은 여전하다.\\\"}],\\\"\\\\n\\\"]}]]}]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"이제 A언어에 \\\\\\\"절차(procedure)\\\\\\\"라는 개념을 추가해봅시다. 절차는 일종의 subRutine, function이라고 보면 됩니다.\\\"}],[\\\"$\\\",\\\"pre\\\",null,{\\\"className\\\":\\\"rounded-md [\\u0026_code]:py-0 [\\u0026_code]:px-0 line-numbers language-js\\\",\\\"children\\\":[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2 language-js\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword\\\",\\\"children\\\":\\\"function\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token function\\\",\\\"children\\\":\\\"add3\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token parameter\\\",\\\"children\\\":\\\"num\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"{\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword\\\",\\\"children\\\":\\\"const\\\"}],\\\" three \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"3\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword control-flow\\\",\\\"children\\\":\\\"return\\\"}],\\\" num \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"+\\\"}],\\\" three\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"}\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword\\\",\\\"children\\\":\\\"const\\\"}],\\\" a \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"1\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword\\\",\\\"children\\\":\\\"const\\\"}],\\\" b \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"2\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword\\\",\\\"children\\\":\\\"const\\\"}],\\\" c \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"3\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword\\\",\\\"children\\\":\\\"let\\\"}],\\\" d \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" c\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"d \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token function\\\",\\\"children\\\":\\\"add3\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"0\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword\\\",\\\"children\\\":\\\"const\\\"}],\\\" e \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token function\\\",\\\"children\\\":\\\"add3\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"d\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token comment\\\",\\\"children\\\":\\\"// 이제 텍스트 인덱스가 2를 가리킨다고 해도\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token comment\\\",\\\"children\\\":\\\"// 12번 줄의 add3를 호출해서 인덱스 2에 도달했는지,\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token comment\\\",\\\"children\\\":\\\"// 13번 줄의 add3를 호출해서 인덱스 3에 도달했는지\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token comment\\\",\\\"children\\\":\\\"// 알 수 없다.\\\"}],\\\"\\\\n\\\"]}]]}]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"절차가 추가된 언어에선 텍스트 인덱스로는 프로세스의 상태를 설명할 수 없습니다.\\\"}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"2번줄을 진행하고 있다고만 말하는 것으로는 12번줄 다음 2번줄로 왔는지, 13번줄 다음 2번줄로 왔는지 알 수 없습니다. 따라서 프로세스의 진행 상태를 나타내려면 텍스트 인덱스가 어떤 절차 안에 들어있는지를 함께 명시해야만 합니다.\\\"}],[\\\"$\\\",\\\"br\\\",null,{}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"이제 프로세스의 진행도는 텍스트 인덱스의 배열로 나타낼 수 있습니다. js가 함수 호출 스택을 만드는 것으로 이해하면 됩니다. 앞선 예시로 보면\\\"}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":[[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\\\",\\\"children\\\":\\\"[12, 2]\\\"}],\\\" : 12번 줄 다음 2번줄로 이어짐\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":[[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\\\",\\\"children\\\":\\\"[12, 3]\\\"}],\\\" : 13번 줄 다음 3번줄로 이어짐으로 이해할 수 있습니다.\\\"]}],[\\\"$\\\",\\\"br\\\",null,{}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"배열의 길이는 함수가 얼마나 깊게 호출되는지에 따라 결정될 것입니다.이제 반복문을 A언어에 추가해봅시다.\\\"}],[\\\"$\\\",\\\"pre\\\",null,{\\\"className\\\":\\\"rounded-md [\\u0026_code]:py-0 [\\u0026_code]:px-0 line-numbers language-js\\\",\\\"children\\\":[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2 language-js\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword\\\",\\\"children\\\":\\\"function\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token function\\\",\\\"children\\\":\\\"add3\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token parameter\\\",\\\"children\\\":\\\"num\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"{\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword\\\",\\\"children\\\":\\\"const\\\"}],\\\" three \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"3\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword control-flow\\\",\\\"children\\\":\\\"return\\\"}],\\\" num \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"+\\\"}],\\\" three\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"}\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword\\\",\\\"children\\\":\\\"const\\\"}],\\\" a \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"1\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword\\\",\\\"children\\\":\\\"const\\\"}],\\\" b \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"2\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword\\\",\\\"children\\\":\\\"const\\\"}],\\\" c \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"3\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword\\\",\\\"children\\\":\\\"let\\\"}],\\\" d \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" c\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"d \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token function\\\",\\\"children\\\":\\\"add3\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"0\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword\\\",\\\"children\\\":\\\"const\\\"}],\\\" e \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token function\\\",\\\"children\\\":\\\"add3\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"d\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword control-flow\\\",\\\"children\\\":\\\"while\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"d \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"\\u003e\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"0\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"{\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  d\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"--\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"}\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword control-flow\\\",\\\"children\\\":\\\"while\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"e \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"\\u003e\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"0\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"{\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  e\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"--\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token function\\\",\\\"children\\\":\\\"add3\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"10\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"}\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token comment\\\",\\\"children\\\":\\\"// 이제 얼만큼 반복되었는지도 알아야 프로세스의 진행도를 알 수 있다.\\\"}],\\\"\\\\n\\\"]}]]}]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"이제 프로세스의 맥락을 이해하려면 반복문의 반복 횟수까지 알아야합니다.반복 횟수를 나타내기 위해 \\\\\\\"동적 인덱스(dynamic index)\\\\\\\"라는 개념을 추가합시다.\\\"}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"반복문 안에서 함수를 호출할수도 있으니, 텍스트 색인 배열과 동적 인덱스를 알아야 프로세스의 진행도를 알 수 있습니다.\\\"}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":[[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\\\",\\\"children\\\":\\\"[21, 2], 1\\\"}],\\\" : 21번 줄을 1번째 진행중이었고 함수를 통해 2번 줄을 진행중임\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":[[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\\\",\\\"children\\\":\\\"[15], 2\\\"}],\\\" : 15번 줄을 2번째 진행중이었음\\\"]}],[\\\"$\\\",\\\"br\\\",null,{}]]}],[\\\"$\\\",\\\"section\\\",null,{\\\"aria-labelledby\\\":\\\"프로세스의-진행도는-왜-알아야하죠\\\",\\\"children\\\":[[\\\"$\\\",\\\"h3\\\",null,{\\\"className\\\":\\\"mt-7 mb-2 text-heading3 font-semibold leading-normal\\\",\\\"id\\\":\\\"프로세스의-진행도는-왜-알아야하죠\\\",\\\"children\\\":[[\\\"$\\\",\\\"$L13\\\",null,{\\\"aria-hidden\\\":\\\"true\\\",\\\"tabIndex\\\":\\\"-1\\\",\\\"href\\\":\\\"#프로세스의-진행도는-왜-알아야하죠\\\",\\\"children\\\":[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"icon icon-link\\\"}]}],\\\"프로세스의 진행도는 왜 알아야하죠?\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"앞서 언급한 텍스트 인덱스의 배열, 동적 인덱스를 통해 프로세스의 진행 과정을 나타내는데 성공했습니다.왜 우리가 이런 인덱스를 동원해 프로세스의 특정 진행 지점을 알아야할까요?\\\"}],[\\\"$\\\",\\\"br\\\",null,{}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":[\\\"그 이유는 \\\",[\\\"$\\\",\\\"strong\\\",null,{\\\"className\\\":\\\"font-medium\\\",\\\"children\\\":\\\"우리가 변수의 값을 프로세스의 진행을 통해서만 해석할 수 있기 때문\\\"}],\\\"입니다.방의 인원수를 나타내는 변수 n이 있고 0부터 시작한다고 해봅시다.\\\"]}],[\\\"$\\\",\\\"pre\\\",null,{\\\"className\\\":\\\"rounded-md [\\u0026_code]:py-0 [\\u0026_code]:px-0 line-numbers language-js\\\",\\\"children\\\":[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2 language-js\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token comment\\\",\\\"children\\\":\\\"// n은 방의 인원수를 나타낸다.\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword\\\",\\\"children\\\":\\\"let\\\"}],\\\" n \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"0\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}]]}]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"이제 우리는 방에 사람이 들어올때마다 n을 증가시켜 방의 인원수를 나타낼 수 있습니다.\\\"}],[\\\"$\\\",\\\"pre\\\",null,{\\\"className\\\":\\\"rounded-md [\\u0026_code]:py-0 [\\u0026_code]:px-0 line-numbers language-js\\\",\\\"children\\\":[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2 language-js\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword\\\",\\\"children\\\":\\\"let\\\"}],\\\" n \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"0\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword control-flow\\\",\\\"children\\\":\\\"while\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"untilPeopleIncome\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"{\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  n\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"++\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"}\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"n\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token comment\\\",\\\"children\\\":\\\"// 방의 인원수\\\"}],\\\"\\\\n\\\"]}]]}]}]]}],[\\\"$\\\",\\\"section\\\",null,{\\\"aria-labelledby\\\":\\\"goto는-이러한-좌표계를-무너뜨린다\\\",\\\"children\\\":[[\\\"$\\\",\\\"h3\\\",null,{\\\"className\\\":\\\"mt-7 mb-2 text-heading3 font-semibold leading-normal\\\",\\\"id\\\":\\\"goto는-이러한-좌표계를-무너뜨린다\\\",\\\"children\\\":[[\\\"$\\\",\\\"$L13\\\",null,{\\\"aria-hidden\\\":\\\"true\\\",\\\"tabIndex\\\":\\\"-1\\\",\\\"href\\\":\\\"#goto는-이러한-좌표계를-무너뜨린다\\\",\\\"children\\\":[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"icon icon-link\\\"}]}],\\\"Goto는 이러한 좌표계를 무너뜨린다\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"goto를 이용해 3번줄로 이동해버리면 n의 의미가 깨집니다. n은 이제 방의 인원수보다 큰 수 일수도 있습니다.\\\"}],[\\\"$\\\",\\\"pre\\\",null,{\\\"className\\\":\\\"rounded-md [\\u0026_code]:py-0 [\\u0026_code]:px-0 line-numbers language-js\\\",\\\"children\\\":[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2 language-js\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword\\\",\\\"children\\\":\\\"let\\\"}],\\\" n \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"0\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword control-flow\\\",\\\"children\\\":\\\"while\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"untilPeopleIncome\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"{\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  n\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"++\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"}\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword control-flow\\\",\\\"children\\\":\\\"if\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"someCondition\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"{\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  goto \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"3\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"}\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"n\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token comment\\\",\\\"children\\\":\\\"// 방의 인원수와 같다고 할 수 있을까?\\\"}],\\\"\\\\n\\\"]}]]}]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"goto문을 무분별하게 사용하다보면 이렇게 텍스트 인덱스, 동적 인덱스로 나타낼 수 있는 프로세스의 진행도를 무의미하게 만듦니다. 텍스트 인덱스, 동적 인덱스가 고유하더라도 그에 해당하는 프로세스의 진행도의 해석이 더 이상 유의미하지 않기 때문입니다.\\\"}]]}],[\\\"$\\\",\\\"section\\\",null,{\\\"aria-labelledby\\\":\\\"결론-그럼에도-불구하고\\\",\\\"children\\\":[[\\\"$\\\",\\\"h3\\\",null,{\\\"className\\\":\\\"mt-7 mb-2 text-heading3 font-semibold leading-normal\\\",\\\"id\\\":\\\"결론-그럼에도-불구하고\\\",\\\"children\\\":[[\\\"$\\\",\\\"$L13\\\",null,{\\\"aria-hidden\\\":\\\"true\\\",\\\"tabIndex\\\":\\\"-1\\\",\\\"href\\\":\\\"#결론-그럼에도-불구하고\\\",\\\"children\\\":[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"icon icon-link\\\"}]}],\\\"결론: 그럼에도 불구하고\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":[\\\"다익스트라는 goto문은 너무 원시적이라 프로그램을 망치기 딱 좋다고 말하지만, abortion문 (js의 \\\",[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\\\",\\\"children\\\":\\\"throw\\\"}],\\\") 같이 프로세스의 흐름을 건너뛰는 것 자체를 부정하지는 않습니다. 하지만 이런 문법이 프로세스를 해석하는 것을 방해해선 안된다고 합니다.\\\"]}]]}]]}],[\\\"$\\\",\\\"section\\\",null,{\\\"aria-labelledby\\\":\\\"요약\\\",\\\"children\\\":[[\\\"$\\\",\\\"h2\\\",null,{\\\"className\\\":\\\"mt-8 mb-3 text-heading2 font-semibold leading-normal\\\",\\\"id\\\":\\\"요약\\\",\\\"children\\\":[[\\\"$\\\",\\\"$L13\\\",null,{\\\"aria-hidden\\\":\\\"true\\\",\\\"tabIndex\\\":\\\"-1\\\",\\\"href\\\":\\\"#요약\\\",\\\"children\\\":[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"icon icon-link\\\"}]}],\\\"요약\\\"]}],[\\\"$\\\",\\\"ol\\\",null,{\\\"className\\\":\\\"list-decimal my-4\\\",\\\"children\\\":[\\\"\\\\n\\\",[\\\"$\\\",\\\"li\\\",null,{\\\"className\\\":\\\"text-paragraph font-light leading-normal py-1 ml-6\\\",\\\"children\\\":\\\"우리는 상태값을 해석하려면 프로세스의 진행도를 알아야 한다.\\\"}],\\\"\\\\n\\\",[\\\"$\\\",\\\"li\\\",null,{\\\"className\\\":\\\"text-paragraph font-light leading-normal py-1 ml-6\\\",\\\"children\\\":\\\"근데 goto를 무분별하게 쓰면 프로세스의 진행도를 알아도 상태값을 해석하기 어려워진다.\\\"}],\\\"\\\\n\\\",[\\\"$\\\",\\\"li\\\",null,{\\\"className\\\":\\\"text-paragraph font-light leading-normal py-1 ml-6\\\",\\\"children\\\":\\\"그러니까 goto 쓰지마라\\\"}],\\\"\\\\n\\\",[\\\"$\\\",\\\"li\\\",null,{\\\"className\\\":\\\"text-paragraph font-light leading-normal py-1 ml-6\\\",\\\"children\\\":\\\"그래도 throw같은 코드를 쓰지 말라는 것은 아니다. 상태 해석에만 문제가 없으면 상관 없다.\\\"}],\\\"\\\\n\\\"]}]]}],[\\\"$\\\",\\\"section\\\",null,{\\\"aria-labelledby\\\":\\\"리뷰-후기\\\",\\\"children\\\":[[\\\"$\\\",\\\"h2\\\",null,{\\\"className\\\":\\\"mt-8 mb-3 text-heading2 font-semibold leading-normal\\\",\\\"id\\\":\\\"리뷰-후기\\\",\\\"children\\\":[[\\\"$\\\",\\\"$L13\\\",null,{\\\"aria-hidden\\\":\\\"true\\\",\\\"tabIndex\\\":\\\"-1\\\",\\\"href\\\":\\\"#리뷰-후기\\\",\\\"children\\\":[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"icon icon-link\\\"}]}],\\\"리뷰 후기\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":[\\\"이제는 거의 사라져서 볼 수 없는 goto 문법이지만, 여전히 goto의 제한된 버전인 \\\",[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\\\",\\\"children\\\":\\\"throw\\\"}],\\\" 같은 문법들이 현대 개발 언어에 남아있다는 점이 논문을 읽는데 재미있는 포인트들이었습니다.\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":[\\\"논문에서 언급하지는 않지만, \\\",[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\\\",\\\"children\\\":\\\"throw\\\"}],\\\" 같은 abortion 문도 막아야한다고 주장하지 않은 것은 에러가 발생했을 때만 점프가 일어나 해석을 방해하지 않기 때문이라고 생각합니다.\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"앞으로는 코드를 작성할 때 프로세스의 흐름 파악과 해석을 어렵게 하고 있지 않은지 좀 더 주의깊게 봐야할 것 같습니다.\\\"}],[\\\"$\\\",\\\"br\\\",null,{}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"리뷰에 적지는 않았지만, 흥미로운 점이 하나 더 있었습니다. 논문 내에서 재귀로 반복문을 없앨 수 있지만, 성능상 이유로 반복문은 있는게 좋은 것 같다고 하는 점, 그리고 정적인 코드와 동적인 프로세스 사이의 갭을 줄여야한다고 하는 것도 그렇고 이미 좋은 코드는 선언적이라는 함수형 패러다임에 대한 인사이트를 어느정도 가지고 있다는 점입니다.\\\"}],[\\\"$\\\",\\\"br\\\",null,{}]]}]]}],[\\\"$\\\",\\\"$L14\\\",null,{\\\"size\\\":\\\"lg\\\",\\\"shareData\\\":{\\\"title\\\":\\\"Terra Dev Blog - go-to-statement-considered-harmful-review\\\",\\\"text\\\":\\\"$undefined\\\",\\\"url\\\":\\\"/next-blog/posts/go-to-statement-considered-harmful-review\\\"},\\\"aria-label\\\":\\\"Share this article\\\"}]]}],[\\\"$\\\",\\\"section\\\",null,{\\\"id\\\":\\\"author\\\",\\\"children\\\":[\\\"$\\\",\\\"$L15\\\",null,{}]}],[\\\"$\\\",\\\"section\\\",null,{\\\"children\\\":[[\\\"$\\\",\\\"$Lb\\\",null,{\\\"src\\\":\\\"https://giscus.app/client.js\\\",\\\"data-repo\\\":\\\"dev2820/blog-posts\\\",\\\"data-repo-id\\\":\\\"R_kgDOLQagPA\\\",\\\"data-category\\\":\\\"General\\\",\\\"data-category-id\\\":\\\"DIC_kwDOLQagPM4CjAtl\\\",\\\"data-mapping\\\":\\\"og:title\\\",\\\"data-strict\\\":\\\"0\\\",\\\"data-reactions-enabled\\\":\\\"1\\\",\\\"data-emit-metadata\\\":\\\"0\\\",\\\"data-input-position\\\":\\\"top\\\",\\\"data-theme\\\":\\\"light\\\",\\\"data-lang\\\":\\\"ko\\\",\\\"data-loading\\\":\\\"lazy\\\",\\\"cross-origin\\\":\\\"anonymous\\\",\\\"async\\\":true}],[\\\"$\\\",\\\"div\\\",null,{\\\"className\\\":\\\"giscus w-full min-w-screen-md\\\"}]]}]]}]\\n\"])</script><script>self.__next_f.push([1,\"f:[[\\\"$\\\",\\\"meta\\\",\\\"0\\\",{\\\"name\\\":\\\"viewport\\\",\\\"content\\\":\\\"width=device-width, initial-scale=1\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"1\\\",{\\\"charSet\\\":\\\"utf-8\\\"}],[\\\"$\\\",\\\"title\\\",\\\"2\\\",{\\\"children\\\":\\\"Terra Dev Blog - go-to-statement-considered-harmful-review\\\"}],[\\\"$\\\",\\\"link\\\",\\\"3\\\",{\\\"rel\\\":\\\"canonical\\\",\\\"href\\\":\\\"https://dev2820.github.io/next-blog/go-to-statement-considered-harmful-review\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"4\\\",{\\\"property\\\":\\\"og:title\\\",\\\"content\\\":\\\"go-to-statement-considered-harmful-review\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"5\\\",{\\\"property\\\":\\\"og:url\\\",\\\"content\\\":\\\"https://dev2820.github.io/next-blog/go-to-statement-considered-harmful-review\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"6\\\",{\\\"property\\\":\\\"og:locale\\\",\\\"content\\\":\\\"ko_KR\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"7\\\",{\\\"property\\\":\\\"og:image\\\",\\\"content\\\":\\\"https://dev2820.github.io/next-blog/next-blog/posts/go-to-statement-considered-harmful-review\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"8\\\",{\\\"property\\\":\\\"og:image:width\\\",\\\"content\\\":\\\"800\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"9\\\",{\\\"property\\\":\\\"og:image:height\\\",\\\"content\\\":\\\"600\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"10\\\",{\\\"property\\\":\\\"og:image:alt\\\",\\\"content\\\":\\\"go-to-statement-considered-harmful-review\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"11\\\",{\\\"property\\\":\\\"og:type\\\",\\\"content\\\":\\\"article\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"12\\\",{\\\"name\\\":\\\"twitter:card\\\",\\\"content\\\":\\\"summary_large_image\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"13\\\",{\\\"name\\\":\\\"twitter:title\\\",\\\"content\\\":\\\"go-to-statement-considered-harmful-review\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"14\\\",{\\\"name\\\":\\\"twitter:image\\\",\\\"content\\\":\\\"https://dev2820.github.io/next-blog/next-blog/posts/go-to-statement-considered-harmful-review\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"15\\\",{\\\"name\\\":\\\"twitter:image:width\\\",\\\"content\\\":\\\"800\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"16\\\",{\\\"name\\\":\\\"twitter:image:height\\\",\\\"content\\\":\\\"600\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"17\\\",{\\\"name\\\":\\\"twitter:image:alt\\\",\\\"content\\\":\\\"go-to-statement-considered-harmful-review\\\"}],[\\\"$\\\",\\\"link\\\",\\\"18\\\",{\\\"rel\\\":\\\"icon\\\",\\\"href\\\":\\\"/next-blog/favicon.ico\\\",\\\"type\\\":\\\"image/x-icon\\\",\\\"sizes\\\":\\\"16x16\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"19\\\",{\\\"name\\\":\\\"next-size-adjust\\\"}]]\\n6:null\\n\"])</script></body></html>",
            "url": "https://dev2820.github.io/next-bloggo-to-statement-considered-harmful-review",
            "title": "go-to-statement-considered-harmful-review",
            "date_modified": "2024-02-17T07:57:03.274Z",
            "author": {
                "name": "dev2820",
                "url": "https://dev2820.github.io/next-blog/about"
            }
        },
        {
            "id": "how-does-v8-array-sort-work",
            "content_html": "<!DOCTYPE html><html lang=\"kr\" class=\"__variable_fa65fd __variable_7691e4 scroll-smooth\"><head><meta charSet=\"utf-8\"/><meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"/><link rel=\"preload\" href=\"/next-blog/_next/static/media/3e7b7e3fd4560936-s.p.woff2\" as=\"font\" crossorigin=\"\" type=\"font/woff2\"/><link rel=\"preload\" href=\"/next-blog/_next/static/media/ff840cfebfb63b0c-s.p.woff2\" as=\"font\" crossorigin=\"\" type=\"font/woff2\"/><link rel=\"stylesheet\" href=\"/next-blog/_next/static/css/16077bc16defb9b9.css\" data-precedence=\"next\"/><link rel=\"stylesheet\" href=\"/next-blog/_next/static/css/203da25389b4eeab.css\" data-precedence=\"next\"/><link rel=\"preload\" as=\"script\" fetchPriority=\"low\" href=\"/next-blog/_next/static/chunks/webpack-8f27d743501d147d.js\"/><script src=\"/next-blog/_next/static/chunks/f14ca715-03ac7b40665f0731.js\" async=\"\"></script><script src=\"/next-blog/_next/static/chunks/465-9f8ee17d6a70e147.js\" async=\"\"></script><script src=\"/next-blog/_next/static/chunks/main-app-e31317f2a5bf611e.js\" async=\"\"></script><script src=\"/next-blog/_next/static/chunks/805-a8af350d35fb9160.js\" async=\"\"></script><script src=\"/next-blog/_next/static/chunks/app/posts/%5Bslug%5D/layout-1cf1294e1a2539f4.js\" async=\"\"></script><script src=\"/next-blog/_next/static/chunks/618-f2bb34773a0d24b2.js\" async=\"\"></script><script src=\"/next-blog/_next/static/chunks/app/posts/page-e8c6275c8ebfad50.js\" async=\"\"></script><script src=\"/next-blog/_next/static/chunks/372-b649e69f56e8eb19.js\" async=\"\"></script><script src=\"/next-blog/_next/static/chunks/app/layout-c7fa40d911107206.js\" async=\"\"></script><script src=\"/next-blog/_next/static/chunks/952ad60e-7cdac7b6bf36214c.js\" async=\"\"></script><script src=\"/next-blog/_next/static/chunks/app/posts/%5Bslug%5D/page-e951164d6ad6c144.js\" async=\"\"></script><link rel=\"preload\" href=\"https://giscus.app/client.js\" as=\"script\"/><link rel=\"preload\" href=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/prism.min.js\" as=\"script\"/><link rel=\"preload\" href=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-javascript.min.js\" as=\"script\"/><link rel=\"preload\" href=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-typescript.min.js\" as=\"script\"/><link rel=\"preload\" href=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-jsx.min.js\" as=\"script\"/><link rel=\"preload\" href=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-tsx.min.js\" as=\"script\"/><link rel=\"preload\" href=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-c.min.js\" as=\"script\"/><link rel=\"preload\" href=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/plugins/line-numbers/prism-line-numbers.min.js\" as=\"script\"/><title>Terra Dev Blog - V8의 `Array.sort`는 어떻게 동작하는가?</title><link rel=\"canonical\" href=\"https://dev2820.github.io/next-blog/how-does-v8-array-sort-work\"/><meta property=\"og:title\" content=\"V8의 `Array.sort`는 어떻게 동작하는가?\"/><meta property=\"og:url\" content=\"https://dev2820.github.io/next-blog/how-does-v8-array-sort-work\"/><meta property=\"og:locale\" content=\"ko_KR\"/><meta property=\"og:image\" content=\"https://dev2820.github.io/next-blog/next-blog/posts/how-does-v8-array-sort-work/images/fibonacci.jpg\"/><meta property=\"og:image:width\" content=\"800\"/><meta property=\"og:image:height\" content=\"600\"/><meta property=\"og:image:alt\" content=\"V8의 `Array.sort`는 어떻게 동작하는가?\"/><meta property=\"og:type\" content=\"article\"/><meta name=\"twitter:card\" content=\"summary_large_image\"/><meta name=\"twitter:title\" content=\"V8의 `Array.sort`는 어떻게 동작하는가?\"/><meta name=\"twitter:image\" content=\"https://dev2820.github.io/next-blog/next-blog/posts/how-does-v8-array-sort-work/images/fibonacci.jpg\"/><meta name=\"twitter:image:width\" content=\"800\"/><meta name=\"twitter:image:height\" content=\"600\"/><meta name=\"twitter:image:alt\" content=\"V8의 `Array.sort`는 어떻게 동작하는가?\"/><link rel=\"icon\" href=\"/next-blog/favicon.ico\" type=\"image/x-icon\" sizes=\"16x16\"/><meta name=\"next-size-adjust\"/><script src=\"/next-blog/_next/static/chunks/polyfills-78c92fac7aa8fdd8.js\" noModule=\"\"></script></head><body class=\"__className_fa65fd flex flex-col text-gray-800\"><link href=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/plugins/line-numbers/prism-line-numbers.min.css\" rel=\"stylesheet\"/><header class=\"flex flex-row justify-center py-2 items-center self-center w-full max-w-screen-md px-4\"><a href=\"/next-blog\"><img alt=\"Terra&#x27;s Devlog logo\" loading=\"lazy\" width=\"258\" height=\"48\" decoding=\"async\" data-nimg=\"1\" style=\"color:transparent\" src=\"/next-blog/_next/static/media/logo-full.a2c57f51.svg\"/></a><div class=\"flex-1\"></div><nav class=\"\"><menu class=\"flex flex-row gap-8\"><li><a aria-disabled=\"false\" href=\"/next-blog/posts\"><div class=\"cursor-pointer duration-200 font-medium text-primary hover:text-primary\">Posts</div></a></li><li><a aria-disabled=\"true\" href=\"\"><div class=\"duration-200 font-medium cursor-not-allowed text-muted hover:text-muted\">About Me</div></a></li><li><a aria-disabled=\"true\" href=\"\"><div class=\"duration-200 font-medium cursor-not-allowed text-muted hover:text-muted\">Contact</div></a></li></menu></nav></header><main class=\"self-center w-full max-w-screen-md p-4 text-gray-800\"><article class=\"relative\"><header id=\"post-meta\"><img alt=\"hero image\" loading=\"lazy\" width=\"500\" height=\"300\" decoding=\"async\" data-nimg=\"1\" class=\"max-w-full w-full rounded-md\" style=\"color:transparent\" src=\"/next-blog/posts/how-does-v8-array-sort-work/images/fibonacci.jpg\"/><h1 class=\"mt-10 mb-4 text-heading1 font-bold leading-normal\" id=\"V8의 `Array.sort`는 어떻게 동작하는가?\">V8의 `Array.sort`는 어떻게 동작하는가?</h1><time dateTime=\"2024-04-23\" aria-label=\"Published on 2024-04-23\">2024-04-23</time> <!-- -->|<!-- --> <time dateTime=\"PT4M\" aria-label=\"Estimated reading time\">4<!-- --> mins</time></header><div id=\"content\" class=\"relative\"><div id=\"table-of-header\" class=\"absolute -right-12 translate-x-full h-full w-52 desktop:block hidden\"><nav class=\"sticky top-24\"><ol><li><a href=\"#v8은-정렬-이전과-이후에-무엇을-하는가\"><div class=\"text-sm font-light data-[active=&quot;true&quot;]:text-base data-[active=&quot;true&quot;]:font-semibold py-0.5 text-neutral-400 data-[active=&quot;true&quot;]:text-primary duration-200 hover:text-primary pl-4\" data-id=\"#v8은-정렬-이전과-이후에-무엇을-하는가\">V8은 정렬 이전과 이후에 무엇을 하는가</div></a></li><li><a href=\"#전처리-과정\"><div class=\"text-sm font-light data-[active=&quot;true&quot;]:text-base data-[active=&quot;true&quot;]:font-semibold py-0.5 text-neutral-400 data-[active=&quot;true&quot;]:text-primary duration-200 hover:text-primary pl-10\" data-id=\"#전처리-과정\">전처리 과정</div></a></li><li><a href=\"#후처리-과정\"><div class=\"text-sm font-light data-[active=&quot;true&quot;]:text-base data-[active=&quot;true&quot;]:font-semibold py-0.5 text-neutral-400 data-[active=&quot;true&quot;]:text-primary duration-200 hover:text-primary pl-10\" data-id=\"#후처리-과정\">후처리 과정</div></a></li><li><a href=\"#과거의-정렬-방식-quicksort\"><div class=\"text-sm font-light data-[active=&quot;true&quot;]:text-base data-[active=&quot;true&quot;]:font-semibold py-0.5 text-neutral-400 data-[active=&quot;true&quot;]:text-primary duration-200 hover:text-primary pl-4\" data-id=\"#과거의-정렬-방식-quicksort\">과거의 정렬 방식 (QuickSort)</div></a></li><li><a href=\"#현재의-정렬-방식-timsort\"><div class=\"text-sm font-light data-[active=&quot;true&quot;]:text-base data-[active=&quot;true&quot;]:font-semibold py-0.5 text-neutral-400 data-[active=&quot;true&quot;]:text-primary duration-200 hover:text-primary pl-4\" data-id=\"#현재의-정렬-방식-timsort\">현재의 정렬 방식 (Timsort)</div></a></li><li><a href=\"#run이란-무엇인가\"><div class=\"text-sm font-light data-[active=&quot;true&quot;]:text-base data-[active=&quot;true&quot;]:font-semibold py-0.5 text-neutral-400 data-[active=&quot;true&quot;]:text-primary duration-200 hover:text-primary pl-10\" data-id=\"#run이란-무엇인가\">run이란 무엇인가?</div></a></li><li><a href=\"#알고리즘-simple\"><div class=\"text-sm font-light data-[active=&quot;true&quot;]:text-base data-[active=&quot;true&quot;]:font-semibold py-0.5 text-neutral-400 data-[active=&quot;true&quot;]:text-primary duration-200 hover:text-primary pl-10\" data-id=\"#알고리즘-simple\">알고리즘 (simple)</div></a></li><li><a href=\"#minrun의-크기를-결정하는-방식\"><div class=\"text-sm font-light data-[active=&quot;true&quot;]:text-base data-[active=&quot;true&quot;]:font-semibold py-0.5 text-neutral-400 data-[active=&quot;true&quot;]:text-primary duration-200 hover:text-primary pl-10\" data-id=\"#minrun의-크기를-결정하는-방식\">minrun의 크기를 결정하는 방식</div></a></li><li><a href=\"#insertion-sort를-이용하는-이유\"><div class=\"text-sm font-light data-[active=&quot;true&quot;]:text-base data-[active=&quot;true&quot;]:font-semibold py-0.5 text-neutral-400 data-[active=&quot;true&quot;]:text-primary duration-200 hover:text-primary pl-10\" data-id=\"#insertion-sort를-이용하는-이유\">Insertion sort를 이용하는 이유</div></a></li><li><a href=\"#minrun를-기준으로-run-만들기\"><div class=\"text-sm font-light data-[active=&quot;true&quot;]:text-base data-[active=&quot;true&quot;]:font-semibold py-0.5 text-neutral-400 data-[active=&quot;true&quot;]:text-primary duration-200 hover:text-primary pl-10\" data-id=\"#minrun를-기준으로-run-만들기\">minrun를 기준으로 run 만들기</div></a></li><li><a href=\"#run을-병합하기\"><div class=\"text-sm font-light data-[active=&quot;true&quot;]:text-base data-[active=&quot;true&quot;]:font-semibold py-0.5 text-neutral-400 data-[active=&quot;true&quot;]:text-primary duration-200 hover:text-primary pl-10\" data-id=\"#run을-병합하기\">run을 병합하기</div></a></li><li><a href=\"#run-병합-최적화하기---메모리-최적화\"><div class=\"text-sm font-light data-[active=&quot;true&quot;]:text-base data-[active=&quot;true&quot;]:font-semibold py-0.5 text-neutral-400 data-[active=&quot;true&quot;]:text-primary duration-200 hover:text-primary pl-10\" data-id=\"#run-병합-최적화하기---메모리-최적화\">run 병합 최적화하기 - 메모리 최적화</div></a></li><li><a href=\"#run-병합-최적화하기---검사할-필요가-없는-지점-찾기\"><div class=\"text-sm font-light data-[active=&quot;true&quot;]:text-base data-[active=&quot;true&quot;]:font-semibold py-0.5 text-neutral-400 data-[active=&quot;true&quot;]:text-primary duration-200 hover:text-primary pl-10\" data-id=\"#run-병합-최적화하기---검사할-필요가-없는-지점-찾기\">run 병합 최적화하기 - 검사할 필요가 없는 지점 찾기</div></a></li><li><a href=\"#run-병합-최적화하기---galloping-모드\"><div class=\"text-sm font-light data-[active=&quot;true&quot;]:text-base data-[active=&quot;true&quot;]:font-semibold py-0.5 text-neutral-400 data-[active=&quot;true&quot;]:text-primary duration-200 hover:text-primary pl-10\" data-id=\"#run-병합-최적화하기---galloping-모드\">run 병합 최적화하기 - Galloping 모드</div></a></li><li><a href=\"#알고리즘-detail\"><div class=\"text-sm font-light data-[active=&quot;true&quot;]:text-base data-[active=&quot;true&quot;]:font-semibold py-0.5 text-neutral-400 data-[active=&quot;true&quot;]:text-primary duration-200 hover:text-primary pl-10\" data-id=\"#알고리즘-detail\">알고리즘 (detail)</div></a></li><li><a href=\"#timsort의-시간복잡도\"><div class=\"text-sm font-light data-[active=&quot;true&quot;]:text-base data-[active=&quot;true&quot;]:font-semibold py-0.5 text-neutral-400 data-[active=&quot;true&quot;]:text-primary duration-200 hover:text-primary pl-10\" data-id=\"#timsort의-시간복잡도\">Timsort의 시간복잡도</div></a></li><li><a href=\"#v8의-torque\"><div class=\"text-sm font-light data-[active=&quot;true&quot;]:text-base data-[active=&quot;true&quot;]:font-semibold py-0.5 text-neutral-400 data-[active=&quot;true&quot;]:text-primary duration-200 hover:text-primary pl-4\" data-id=\"#v8의-torque\">V8의 Torque</div></a></li><li><a href=\"#참고\"><div class=\"text-sm font-light data-[active=&quot;true&quot;]:text-base data-[active=&quot;true&quot;]:font-semibold py-0.5 text-neutral-400 data-[active=&quot;true&quot;]:text-primary duration-200 hover:text-primary pl-4\" data-id=\"#참고\">참고</div></a></li></ol></nav></div><section aria-labelledby=\"v8은-정렬-이전과-이후에-무엇을-하는가\"><h2 class=\"mt-8 mb-3 text-heading2 font-semibold leading-normal\" id=\"v8은-정렬-이전과-이후에-무엇을-하는가\"><a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#v8은-정렬-이전과-이후에-무엇을-하는가\"><span class=\"icon icon-link\"></span></a>V8은 정렬 이전과 이후에 무엇을 하는가</h2><p class=\"font-light leading-normal mt-4 mb-2\">V8은 한 개의 전처리 과정과 한 개의 후처리 과정을 거친다. 기본적인 아이디어는 다음과 같다.</p><blockquote class=\"my-4 border-l-4 border-primary p-6 bg-gray-100 text-gray-700 [&amp;_*:first-child]:mt-0 [&amp;_*:last-child]:mb-0\">\n<p class=\"font-light leading-normal mt-4 mb-2\">모든 <code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\">undefined</code> 값들을 임시 list에 모은 뒤, <code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\">undefined</code>가 아닌 값들을 정렬하고 <code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\">undefined</code>를 뒤에 붙인다.</p>\n</blockquote><section aria-labelledby=\"전처리-과정\"><h3 class=\"mt-7 mb-2 text-heading3 font-semibold leading-normal\" id=\"전처리-과정\"><a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#전처리-과정\"><span class=\"icon icon-link\"></span></a>전처리 과정</h3><p class=\"font-light leading-normal mt-4 mb-2\">먼저 배열의 값들을 다음과 같이 분류한다.</p><ol class=\"list-decimal my-4\">\n<li class=\"text-paragraph font-light leading-normal py-1 ml-6\">모든 <code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\">undefined</code>가 아닌 값들(비교 함수에 따라 정렬될 값)</li>\n<li class=\"text-paragraph font-light leading-normal py-1 ml-6\">모든 <code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\">undefined</code>값들</li>\n<li class=\"text-paragraph font-light leading-normal py-1 ml-6\">모든 빈칸, 즉 존재하지 않는 속성들</li>\n</ol><p class=\"font-light leading-normal mt-4 mb-2\">실제 정렬 알고리즘은 첫 번째 분류(undefined가 아닌 값)에만 적용되면 된다. 이를 위해서 V8은 다음과 같이 동작하는 전처리 과정을 가진다.</p><ol class=\"list-decimal my-4\">\n<li class=\"text-paragraph font-light leading-normal py-1 ml-6\">배열을 순회하며<!-- -->\n<ol class=\"list-decimal my-4\">\n<li class=\"text-paragraph font-light leading-normal py-1 ml-6\">만약 원소가 hole이다. -&gt; 아무것도 하지 않는다.</li>\n<li class=\"text-paragraph font-light leading-normal py-1 ml-6\">만약 원소가 <code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\">undefined</code>이다. -&gt; <code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\">numberOfUndefineds</code>의 값을 1 증가시킨다.</li>\n<li class=\"text-paragraph font-light leading-normal py-1 ml-6\">둘 다 아니라면 원소를 elements라는 임시 배열에 추가한다.</li>\n</ol>\n</li>\n</ol><p class=\"font-light leading-normal mt-4 mb-2\">이 작업이 이루어지면, 모든 <code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\">undefined</code>가 아닌 값들은 <code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\">elements</code>라는 임시 배열에 담기게 된다. <code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\">undefined</code>들은 개수만 알면 된다. 자바스크립트 sort의 명세에 따르면 <code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\">undefined</code> 들이 맨 끝에 정렬되어야한다. <code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\">undefined</code> 값들은 실제로 유저가 제공한 비교 함수에 전달되지 않을 것이기 때문에 <code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\">undefined</code>가 등장한 횟수만 새면 된다.</p><p class=\"font-light leading-normal mt-4 mb-2\">다음으로 <code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\">elements</code> 배열을 실제로 정렬한다. 글의 후반부 TimSort 섹션에서 자세한 내용을 다룬다.</p></section><section aria-labelledby=\"후처리-과정\"><h3 class=\"mt-7 mb-2 text-heading3 font-semibold leading-normal\" id=\"후처리-과정\"><a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#후처리-과정\"><span class=\"icon icon-link\"></span></a>후처리 과정</h3><p class=\"font-light leading-normal mt-4 mb-2\">전처리를 거치고 얻은 정렬된 값들을 원본 배열 혹은 객체에 덮어써야 한다. 후처리 과정은 다시 세 단계로 구성된다.</p><ol class=\"list-decimal my-4\">\n<li class=\"text-paragraph font-light leading-normal py-1 ml-6\">원본 객체의 앞부터 <code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\">elements</code> 배열로 덮어쓴다.</li>\n<li class=\"text-paragraph font-light leading-normal py-1 ml-6\">그 뒤를 <code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\">numberOfUndefineds</code> 값만큼 <code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\">undefined</code>로 채운다.</li>\n<li class=\"text-paragraph font-light leading-normal py-1 ml-6\">나머지 값들은 삭제한다.</li>\n</ol><p class=\"font-light leading-normal mt-4 mb-2\">3번 과정은 정렬하려는 원본 객체에 hole이 포함된 경우에 필요하다. 3번을 하지 않으면 배열에 중복된 값이 생길 수 있다.</p></section></section>\n<section aria-labelledby=\"과거의-정렬-방식-quicksort\"><h2 class=\"mt-8 mb-3 text-heading2 font-semibold leading-normal\" id=\"과거의-정렬-방식-quicksort\"><a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#과거의-정렬-방식-quicksort\"><span class=\"icon icon-link\"></span></a>과거의 정렬 방식 (QuickSort)</h2><p class=\"font-light leading-normal mt-4 mb-2\"><code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\">Array.prototype.sort</code> 와 <code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\">TypedArray.prototype.sort</code> 는 자바스크립트로 구현된 Quicksort 구현체에 의존했었다. 정렬 알고리즘 다소 단순하다: 기본적으로는 Quicksort를 하지만, 길이가 짧은 배열(length &lt; 10)에 대해서는 삽입 정렬을 사용한다. Quicksort 재귀 중 하위 배열의 길이가 10에 도달하면 삽입 정렬로 대체된다. 작은 배열에 대해서는 삽입 정렬이 더 효율적인데, 이는 Quicksort가 분할 이후 재귀적으로 두 번 호출되기 때문이다. 각 재귀 호출은 스택 프레임을 생성하고(그리고 제거하는) 오버헤드가 있다.</p><p class=\"font-light leading-normal mt-4 mb-2\">Quicksort에서 적절한 pivot을 선택하는 것은 성능에 큰 영향을 준다. V8은 2가지 전략을 채택했다.</p><ul class=\"list-disc my-4\">\n<li class=\"text-paragraph font-light leading-normal py-1 ml-6\">피봇은 정렬될 배열의 첫 번째, 마지막 그리고 third-element 중 중앙값으로 선택되었다. 작은 배열의 경우 third-element는 단순히 배열의 중간 요소로 선정했다.</li>\n<li class=\"text-paragraph font-light leading-normal py-1 ml-6\">큰 배열에선 표본을 추출하고, 표본을 정렬한 뒤, 정렬된 표본의 중앙값을 위 계산의 third-element로 사용했다.</li>\n</ul><p class=\"font-light leading-normal mt-4 mb-2\">퀵소트의 이점 중 하나는 in-place 정렬을 한다(혹은 그렇게 구현할 수 있다)는 것이다. 메모리 오버헤드는 큰 배열을 정렬할 때 표본을 저장하기 위한 작은 배열 할당과 log(n)의 스택 영역 할당뿐이다. 단점은 안정정렬이 아니라는 점과 QuickSort는 최악의 상황에 O(n^2)의 성능을 보인다는 점이다. 즉, 안정적이지 않았다.</p></section>\n<section aria-labelledby=\"현재의-정렬-방식-timsort\"><h2 class=\"mt-8 mb-3 text-heading2 font-semibold leading-normal\" id=\"현재의-정렬-방식-timsort\"><a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#현재의-정렬-방식-timsort\"><span class=\"icon icon-link\"></span></a>현재의 정렬 방식 (Timsort)</h2><p class=\"font-light leading-normal mt-4 mb-2\">2002년 파이썬에 탑재하기 위해 Tim Peter가 개발한 <strong class=\"font-medium\">Timsort</strong>는 Merge sort와 Insertion sort를 기반으로 다양한 최적화 기법을 적용한 정렬이다. 현재는 Python, V8, Swift, Java SE 7 등 다양한 언어에서 채택되었다.</p><p class=\"font-light leading-normal mt-4 mb-2\">기본적인 아이디어는 다음과 같다.</p><blockquote class=\"my-4 border-l-4 border-primary p-6 bg-gray-100 text-gray-700 [&amp;_*:first-child]:mt-0 [&amp;_*:last-child]:mb-0\">\n<p class=\"font-light leading-normal mt-4 mb-2\">연속적으로 정렬된 부분을 &quot;run&quot;이라고 하자.</p>\n<p class=\"font-light leading-normal mt-4 mb-2\">대부분의 현실 세계 데이터에는 이미 자연적으로 생긴 run들이 포함되어 있다.\n이 run들을 이용하면 비교와 swap 비용을 줄일 수 있다.</p>\n<p class=\"font-light leading-normal mt-4 mb-2\">따라서 이 run들을 최대한 활용해 보자!</p>\n</blockquote><section aria-labelledby=\"run이란-무엇인가\"><h3 class=\"mt-7 mb-2 text-heading3 font-semibold leading-normal\" id=\"run이란-무엇인가\"><a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#run이란-무엇인가\"><span class=\"icon icon-link\"></span></a>run이란 무엇인가?</h3><p class=\"font-light leading-normal mt-4 mb-2\">run은 배열 내에 자연적으로 발생한 연속 정렬된 부분 수열이다.</p><p class=\"font-light leading-normal mt-4 mb-2\"><img alt=\"random_array\" loading=\"lazy\" width=\"704\" height=\"300\" decoding=\"async\" data-nimg=\"1\" class=\"object-cover rounded-md mx-auto my-12 w-full max-w-[704px]\" style=\"color:transparent\" src=\"/next-blog/posts/how-does-v8-array-sort-work/images/random_array.jpg\"/><em class=\"[img+&amp;]:block [img+&amp;]:text-center [img+&amp;]:text-gray-400 [img+&amp;]:font-thin [img+&amp;]:not-italic [img+&amp;]:text-sm [img+&amp;]:-translate-y-10\">랜덤한 배열</em></p><p class=\"font-light leading-normal mt-4 mb-2\">위와 같이 10개 원소를 가진 배열이 있다고 하자.\n<img alt=\"run_example\" loading=\"lazy\" width=\"704\" height=\"300\" decoding=\"async\" data-nimg=\"1\" class=\"object-cover rounded-md mx-auto my-12 w-full max-w-[704px]\" style=\"color:transparent\" src=\"/next-blog/posts/how-does-v8-array-sort-work/images/run_example.jpg\"/></p><p class=\"font-light leading-normal mt-4 mb-2\">위의 배열에서 run을 찾으면 (7,4) (9,3) (8,6,2) (10,1) (5)이 있다.</p><p class=\"font-light leading-normal mt-4 mb-2\">run은 마지막 원소가 run이 되는 경우를 제외하고는 항상 길이가 2보다 길다.</p><p class=\"font-light leading-normal mt-4 mb-2\">run은 증가하는 경우와 감소하는 경우 둘 다 상관없다. 배열을 증가하도록 정렬할 때 감소하는 run은 단순히 뒤집기만 하면 증가하는 run으로 만들 수 있기 때문이다.\nrun을 뒤집을 때는 양 끝값을 서로 swap하며 중앙으로 수렴하는 방식을 이용한다. 이때 stable을 지키기 위해 두 값을 비교해 한쪽이 엄격하게 작은 경우에만 swap한다.</p><pre class=\"rounded-md [&amp;_code]:py-0 [&amp;_code]:px-0 line-numbers language-js\"><code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2 language-js\"><span class=\"code-line\">funciton <span class=\"token function\">reverseRun</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">arr</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">  <span class=\"token keyword\">const</span> middle <span class=\"token operator\">=</span> <span class=\"token known-class-name class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">floor</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">.</span><span class=\"token property-access\">length</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">  <span class=\"token keyword control-flow\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>middle<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">    <span class=\"token keyword control-flow\">if</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> arr<span class=\"token punctuation\">[</span>arr<span class=\"token punctuation\">.</span><span class=\"token property-access\">length</span><span class=\"token operator\">-</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">      <span class=\"token comment\">// arr는 어느 방향으로든 정렬이 되어있기 때문에 swap할 두 값의 값이 같다면</span>\n</span><span class=\"code-line\">      <span class=\"token comment\">// 더 이상 swap을 할 필요가 없다.</span>\n</span><span class=\"code-line\">      <span class=\"token keyword control-flow\">break</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">    <span class=\"token punctuation\">}</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">    <span class=\"token keyword\">const</span> temp <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">    arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">[</span>arr<span class=\"token punctuation\">.</span><span class=\"token property-access\">length</span><span class=\"token operator\">-</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">    arr<span class=\"token punctuation\">[</span>arr<span class=\"token punctuation\">.</span><span class=\"token property-access\">length</span><span class=\"token operator\">-</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> temp<span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">  <span class=\"token punctuation\">}</span>\n</span><span class=\"code-line\"><span class=\"token punctuation\">}</span>\n</span></code></pre></section><section aria-labelledby=\"알고리즘-simple\"><h3 class=\"mt-7 mb-2 text-heading3 font-semibold leading-normal\" id=\"알고리즘-simple\"><a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#알고리즘-simple\"><span class=\"icon icon-link\"></span></a>알고리즘 (simple)</h3><p class=\"font-light leading-normal mt-4 mb-2\">알고리즘의 순서는 다음과 같다.</p><ol class=\"list-decimal my-4\">\n<li class=\"text-paragraph font-light leading-normal py-1 ml-6\">minrun의 길이를 결정한다.</li>\n<li class=\"text-paragraph font-light leading-normal py-1 ml-6\">배열을 minrun을 기준으로 잘라 run을 만든다.</li>\n<li class=\"text-paragraph font-light leading-normal py-1 ml-6\">run을 병합한다. (1개의 배열이 될 때까지 반복한다)</li>\n</ol></section><section aria-labelledby=\"minrun의-크기를-결정하는-방식\"><h3 class=\"mt-7 mb-2 text-heading3 font-semibold leading-normal\" id=\"minrun의-크기를-결정하는-방식\"><a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#minrun의-크기를-결정하는-방식\"><span class=\"icon icon-link\"></span></a>minrun의 크기를 결정하는 방식</h3><p class=\"font-light leading-normal mt-4 mb-2\">run의 크기는 배열의 길이에 따라 유동적으로 결정된다.</p><p class=\"font-light leading-normal mt-4 mb-2\">배열의 원소 수를 N이라고 하자. minrun이 될 수 있는 최대 값을 MAX_MINRUN이라고 하겠다.\nN &lt; MAX_MINRUN이라면 minrun값은 N이 된다. 즉, run을 나누지 않는다. 대신 배열을 binary insertion sort한다. 앞서 언급했듯, 작은 배열에선 삽입정렬이 더 효율적이기 때문이다.</p><p class=\"font-light leading-normal mt-4 mb-2\">Merge Sort에선 Merge(병합)해야하는 배열의 수가 2의 거듭제곱 (2^x)일때 가장 효율적이다.\n그럴 수 없다면 2의 거듭제곱보다 조금 적을 때 효과적이다. 가장 최악은 2의 거듭제곱보다 조금 더 많은 경우이다.</p><p class=\"font-light leading-normal mt-4 mb-2\">따라서 run의 수가 2의 거듭제곱이 될 수 있게 minrun의 길이를 결정하는 것이 좋다.</p><p class=\"font-light leading-normal mt-4 mb-2\">예를 들어보자, N=2112, run의 길이는 32라고 하자.\nrun의 개수는 2112/32 = 66개가 나온다.</p><p class=\"font-light leading-normal mt-4 mb-2\">66개의 run들을 병합하는 과정을 보자. 각 병합에는 최악의 경우 <code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\">2 * (run의 길이) - 1</code> 번의 비교가 일어난다. 최악의 경우를 따져보자.</p><ol class=\"list-decimal my-4\">\n<li class=\"text-paragraph font-light leading-normal py-1 ml-6\">32길이의 run을 33번 병합해야 한다. 63 * 33번의 비교가 발생했다. (64길이 33개의 run이 남았다)</li>\n<li class=\"text-paragraph font-light leading-normal py-1 ml-6\">64길이의 run을 16번 병합해야 한다. 127 * 16번의 비교가 발생했다. (128길이 16개, 64길이 1개의 run이 남았다)</li>\n<li class=\"text-paragraph font-light leading-normal py-1 ml-6\">128길이의 run과 64길이의 run을 병합한다. 128 + 64 - 1번의 비교가 발생했다. (128길이 15개, 192길이 1개의 run이 남았다)</li>\n<li class=\"text-paragraph font-light leading-normal py-1 ml-6\">128길이의 run을 7번 병합해야 한다. 255 * 7번의 비교가 발생했다. (256길이 7개, 192길이 1개, 128길이 1개의 run이 남았다)</li>\n<li class=\"text-paragraph font-light leading-normal py-1 ml-6\">192길이의 run 1개와 128길이의 run을 병합한다. 192 + 128 - 1번의 비교가 발생했다. (256길이 7개, 320길이 1개의 run이 남았다)</li>\n<li class=\"text-paragraph font-light leading-normal py-1 ml-6\">256길이의 run을 3번 병합해야 한다. 511 * 3번의 비교가 발생했다. (512길이 3개, 320길이 1개, 256길이 1개의 run이 남았다)</li>\n<li class=\"text-paragraph font-light leading-normal py-1 ml-6\">320길이의 run 1개와 256길이의 run을 병합한다. 320 + 256 - 1번의 비교가 발생했다. (512길이 3개, 576길이 1개의 run이 남았다)</li>\n<li class=\"text-paragraph font-light leading-normal py-1 ml-6\">512길이의 run을 1번 병합해야 한다. 1023번의 비교가 발생했다. (1024길이 1개, 576길이 1개, 512길이 1개의 run이 남았다)</li>\n<li class=\"text-paragraph font-light leading-normal py-1 ml-6\">576길이의 run 1개와 512길이의 run을 병합한다. 1088번의 비교가 발생했다. (1088길이 1개, 1024길이 1개의 run이 남았다)</li>\n<li class=\"text-paragraph font-light leading-normal py-1 ml-6\">1088길이의 run 1개와 1024길이의 run을 병합한다. 2111번의 비교가 발생했다. (병합 완료)</li>\n</ol><p class=\"font-light leading-normal mt-4 mb-2\">모두 <strong class=\"font-medium\">12736</strong>번의 비교가 발생한다.</p><p class=\"font-light leading-normal mt-4 mb-2\">하지만 run의 길이가 33이라면 어떨까?\nrun의 개수는 2112/33 = 64개가 나온다.</p><p class=\"font-light leading-normal mt-4 mb-2\">같은 방식으로 병합을 진행해 보자.</p><ol class=\"list-decimal my-4\">\n<li class=\"text-paragraph font-light leading-normal py-1 ml-6\">33길이의 run을 32번 병합해야 한다. 65 * 32번의 비교가 발생했다.</li>\n<li class=\"text-paragraph font-light leading-normal py-1 ml-6\">66길이의 run을 16번 병합해야 한다. 131 * 16번의 비교가 발생했다.</li>\n<li class=\"text-paragraph font-light leading-normal py-1 ml-6\">132길이의 run을 8번 병합해야 한다. 263 * 8번의 비교가 발생했다.</li>\n<li class=\"text-paragraph font-light leading-normal py-1 ml-6\">264길이의 run을 4번 병합해야 한다. 527 * 4번의 비교가 발생했다.</li>\n<li class=\"text-paragraph font-light leading-normal py-1 ml-6\">528길이의 run을 2번 병합해야 한다. 1055 * 2번의 비교가 발생했다.</li>\n<li class=\"text-paragraph font-light leading-normal py-1 ml-6\">1056길이의 run을 1번 병합해야 한다. 2111 * 1번의 비교가 발생했다.</li>\n</ol><p class=\"font-light leading-normal mt-4 mb-2\">모두 <strong class=\"font-medium\">12609</strong>번의 비교가 발생한다.</p><p class=\"font-light leading-normal mt-4 mb-2\">즉, run의 길이가 길어지더라도 run의 개수가 2의 거듭제곱과 일치하면 더 적은 비교가 발생한다.\nrun의 개수가 2의 거듭제곱보다 조금 많을 때 최악의 경우가 발생한다.</p><blockquote class=\"my-4 border-l-4 border-primary p-6 bg-gray-100 text-gray-700 [&amp;_*:first-child]:mt-0 [&amp;_*:last-child]:mb-0\">\n<p class=\"font-light leading-normal mt-4 mb-2\">run의 개수가 2의 거듭제곱과 같다면 효율적이다.\nrun의 개수가 2의 거듭제곱보다 조금 클 때 비효율적이다.</p>\n</blockquote><p class=\"font-light leading-normal mt-4 mb-2\">따라서 N / minrun이 2의 거듭제곱이 되는 minrun을 선택하고, 그런 minrun을 선택할 수 없다면 2의 거듭제곱에 가깝지만 엄격하게 2의 거듭제곱보다 작아지도록 <code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\">MAX_MINRUN / 2 ~ MAX_MINRUN</code> 사이의 값 중에서 minrun을 선택한다.\n예를 들어 MAX_MINRUN이 64라면 32 ~ 64중에 minrun을 선택한다.</p><p class=\"font-light leading-normal mt-4 mb-2\">Timsort에선 실제로 MAX_MINRUN을 64로 잡는다. MAX_MINRUN이 8이면 함수 호출이 너무 많아 오버헤드가 더 크고 256이면 binary insertion sort가 느려 마찬가지로 영향을 주는 것을 확인했고, 최종적으로 32를 최적이라 생각했지만, 2112길이의 배열 예시처럼 2의 거듭제곱을 만들 수 있도록 32보다 큰 값을 허용하는 것이 좋다고 판단했기 때문이다.</p></section><section aria-labelledby=\"insertion-sort를-이용하는-이유\"><h3 class=\"mt-7 mb-2 text-heading3 font-semibold leading-normal\" id=\"insertion-sort를-이용하는-이유\"><a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#insertion-sort를-이용하는-이유\"><span class=\"icon icon-link\"></span></a>Insertion sort를 이용하는 이유</h3><p class=\"font-light leading-normal mt-4 mb-2\">Insertion sort(삽입 정렬)는 언뜻 보면 n^2의 시간복잡도를 가져 느리다고 생각할 수 있다. 하지만 앞서 Quicksort에서 설명했듯, 작은 길이 배열에 대해선 2번의 재귀 호출이 일어나는 Merge Sort보다 참조 지역성 원리의 수혜를 아주 잘 누리는 Insertion sort가 더 효율적이다.</p><p class=\"font-light leading-normal mt-4 mb-2\">특히 배열이 이미 어느 정도 정렬되어 있으면 Insertion Sort는 더욱 효과적으로 된다. Insertion Sort는 최선의 경우 O(n)만큼의 복잡도를 갖기 때문이다.</p><p class=\"font-light leading-normal mt-4 mb-2\">여기에 Binary Insertion sort를 사용하면 원소가 삽입될 위치를 O(nlogn)만에 찾도록 더 최적화할 수 있다.</p></section><section aria-labelledby=\"minrun를-기준으로-run-만들기\"><h3 class=\"mt-7 mb-2 text-heading3 font-semibold leading-normal\" id=\"minrun를-기준으로-run-만들기\"><a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#minrun를-기준으로-run-만들기\"><span class=\"icon icon-link\"></span></a>minrun를 기준으로 run 만들기</h3><p class=\"font-light leading-normal mt-4 mb-2\">주어진 배열의 길이로부터 minrun을 결정했다. 이제 minrun에 맞춰 배열을 자른다.\n앞서 minrun은 32~64 사이의 값을 사용한다고 했지만, 이해를 위해 minrun의 값을 4로 잡자.</p><p class=\"font-light leading-normal mt-4 mb-2\"><img alt=\"find minrun 1\" loading=\"lazy\" width=\"704\" height=\"300\" decoding=\"async\" data-nimg=\"1\" class=\"object-cover rounded-md mx-auto my-12 w-full max-w-[704px]\" style=\"color:transparent\" src=\"/next-blog/posts/how-does-v8-array-sort-work/images/find_minrun1.jpg\"/></p><p class=\"font-light leading-normal mt-4 mb-2\">먼저 감소하는 부분수열 (7,4)를 찾았다. 하지만 minrun의 길이 4보다 짧기 때문에 뒤의 2개 수를 더 포함해 Binary Insertion Sort를 수행한다.</p><p class=\"font-light leading-normal mt-4 mb-2\"><img alt=\"find minrun 2\" loading=\"lazy\" width=\"704\" height=\"300\" decoding=\"async\" data-nimg=\"1\" class=\"object-cover rounded-md mx-auto my-12 w-full max-w-[704px]\" style=\"color:transparent\" src=\"/next-blog/posts/how-does-v8-array-sort-work/images/find_minrun2.jpg\"/></p><p class=\"font-light leading-normal mt-4 mb-2\">이로써 minrun을 만족하는 첫 번째 run을 만들었다.\n다음 run을 만들어보자.</p><p class=\"font-light leading-normal mt-4 mb-2\"><img alt=\"find minrun 3\" loading=\"lazy\" width=\"704\" height=\"300\" decoding=\"async\" data-nimg=\"1\" class=\"object-cover rounded-md mx-auto my-12 w-full max-w-[704px]\" style=\"color:transparent\" src=\"/next-blog/posts/how-does-v8-array-sort-work/images/find_minrun3.jpg\"/></p><p class=\"font-light leading-normal mt-4 mb-2\">마찬가지로 감소하는 길이 3인 부분 수열 (8,6,2)를 찾았다. 마지막 원소를 추가해 Binary Insertion Sort를 수행한다.</p><p class=\"font-light leading-normal mt-4 mb-2\"><img alt=\"find minrun 4\" loading=\"lazy\" width=\"704\" height=\"300\" decoding=\"async\" data-nimg=\"1\" class=\"object-cover rounded-md mx-auto my-12 w-full max-w-[704px]\" style=\"color:transparent\" src=\"/next-blog/posts/how-does-v8-array-sort-work/images/find_minrun4.jpg\"/></p><p class=\"font-light leading-normal mt-4 mb-2\">2번째로 생성한 run은 minrun 길이는 만족했지만, run은 길수록 좋다. 따라서 뒤에 붙은 원소들을 포함해도 감소/증가하는 부분 수열임을 만족한다면 생성한 run에 추가한다.</p><p class=\"font-light leading-normal mt-4 mb-2\">앞선 run에선 (10)을 포함할 수 없었다. 감소하는 run이었기 때문이다.\n이번 run에선 뒤의 원소 (1)을 붙여도 여전히 감소하는 부분 수열을 만족하기 때문에 (1)을 run에 추가한다.</p><p class=\"font-light leading-normal mt-4 mb-2\"><img alt=\"find minrun 5\" loading=\"lazy\" width=\"704\" height=\"300\" decoding=\"async\" data-nimg=\"1\" class=\"object-cover rounded-md mx-auto my-12 w-full max-w-[704px]\" style=\"color:transparent\" src=\"/next-blog/posts/how-does-v8-array-sort-work/images/find_minrun5.jpg\"/></p><p class=\"font-light leading-normal mt-4 mb-2\">마지막 원소는 합칠 수 있는 원소가 더 이상 없기 때문에 그 자체로 run이 된다.</p><p class=\"font-light leading-normal mt-4 mb-2\"><img alt=\"find minrun 6\" loading=\"lazy\" width=\"704\" height=\"300\" decoding=\"async\" data-nimg=\"1\" class=\"object-cover rounded-md mx-auto my-12 w-full max-w-[704px]\" style=\"color:transparent\" src=\"/next-blog/posts/how-does-v8-array-sort-work/images/find_minrun6.jpg\"/></p><p class=\"font-light leading-normal mt-4 mb-2\">이렇게 해서 배열은 마지막 run을 제외하고 minrun과 같거나 더 긴 run들로 구성되었다.\n이제 이들을 merge하면 된다.</p><p class=\"font-light leading-normal mt-4 mb-2\">여기서 잠깐, 눈치 챘는지 모르겠지만, TimSort는 일반적인 MergeSort와 달리 재귀가 아닌 반복문을 이용해 구현한다. run을 생성하는 과정은 반복문이 이용된다. 이 덕분에 call stack overflow가 발생하지 않는 점도 최적화 포인트이다.</p></section><section aria-labelledby=\"run을-병합하기\"><h3 class=\"mt-7 mb-2 text-heading3 font-semibold leading-normal\" id=\"run을-병합하기\"><a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#run을-병합하기\"><span class=\"icon icon-link\"></span></a>run을 병합하기</h3><p class=\"font-light leading-normal mt-4 mb-2\">Merge Sort는 병합할 때 비슷한 길이의 두 배열을 Merge하는 것이 더 효율적이다.</p><p class=\"font-light leading-normal mt-4 mb-2\">길이 m,h인 두 배열을 Merge할 때 최악의 경우 두 배열을 모두 순회하며 비교해야하기 때문에 m+h-1 만큼의 비용이 든다.</p><p class=\"font-light leading-normal mt-4 mb-2\"><img alt=\"merge compare\" loading=\"lazy\" width=\"704\" height=\"300\" decoding=\"async\" data-nimg=\"1\" class=\"object-cover rounded-md mx-auto my-12 w-full max-w-[704px]\" style=\"color:transparent\" src=\"/next-blog/posts/how-does-v8-array-sort-work/images/merge_compare.jpg\"/></p><p class=\"font-light leading-normal mt-4 mb-2\">5개의 원소를 병합하는 과정을 거칠 때를 예로 들어 보자. 앞의 배열부터 순서대로 병합을 진행한다고 하자. 이렇게 되면 큰 배열과 작은 배열을 연속적으로 병합하는 형태가 될 것이다.\n이때 5개의 원소를 모두 병합하는데 들어가는 비용은 1 + 2 + 3 + 4 = 10이다.</p><p class=\"font-light leading-normal mt-4 mb-2\">반면 작은 길이 배열을 먼저 병합하는 경우 모든 원소를 병합하는 비용은 1 + 1 + 2 + 4 = 8이다.</p><blockquote class=\"my-4 border-l-4 border-primary p-6 bg-gray-100 text-gray-700 [&amp;_*:first-child]:mt-0 [&amp;_*:last-child]:mb-0\">\n<p class=\"font-light leading-normal mt-4 mb-2\">비슷한 길이의 두 배열을 Merge하는 것이 더 효율적이다.</p>\n</blockquote><p class=\"font-light leading-normal mt-4 mb-2\">따라서 Timsort도 비슷한 길이의 배열을 merge할 수 있도록 다음의 방식으로 run들을 병합한다.</p><p class=\"font-light leading-normal mt-4 mb-2\"><img alt=\"merge_criteria\" loading=\"lazy\" width=\"704\" height=\"300\" decoding=\"async\" data-nimg=\"1\" class=\"object-cover rounded-md mx-auto my-12 w-full max-w-[704px]\" style=\"color:transparent\" src=\"/next-blog/posts/how-does-v8-array-sort-work/images/merge_criteria.jpg\"/></p><p class=\"font-light leading-normal mt-4 mb-2\">run을 생성할 때마다 Stack에 추가한다.</p><ol class=\"list-decimal my-4\">\n<li class=\"text-paragraph font-light leading-normal py-1 ml-6\">스택의 상위 3개 run을 확인한다. 각각 A, B, C라고 하겠다.</li>\n<li class=\"text-paragraph font-light leading-normal py-1 ml-6\">각 run의 길이는 |A|,|B|,|C|라고 하겠다.</li>\n<li class=\"text-paragraph font-light leading-normal py-1 ml-6\">다음의 조건을 만족하지 않으면 B를 A와 C 중 짧은 쪽과 병합한다.<!-- -->\n<ol class=\"list-decimal my-4\">\n<li class=\"text-paragraph font-light leading-normal py-1 ml-6\">|B|가 |A|보다 길다.</li>\n<li class=\"text-paragraph font-light leading-normal py-1 ml-6\">|C|가 |A| + |B| 보다 길다.</li>\n</ol>\n</li>\n<li class=\"text-paragraph font-light leading-normal py-1 ml-6\">조건을 만족할 때까지 2를 반복한다.</li>\n</ol><p class=\"font-light leading-normal mt-4 mb-2\">이렇게 하면 결과적으로 다음과 같은 Stack을 얻을 수 있다.</p><p class=\"font-light leading-normal mt-4 mb-2\"><img alt=\"fibonacci runstack\" loading=\"lazy\" width=\"704\" height=\"300\" decoding=\"async\" data-nimg=\"1\" class=\"object-cover rounded-md mx-auto my-12 w-full max-w-[704px]\" style=\"color:transparent\" src=\"/next-blog/posts/how-does-v8-array-sort-work/images/fibonacci.jpg\"/></p><ul class=\"list-disc my-4\">\n<li class=\"text-paragraph font-light leading-normal py-1 ml-6\">A + B &lt; C</li>\n<li class=\"text-paragraph font-light leading-normal py-1 ml-6\">B + C &lt; D</li>\n<li class=\"text-paragraph font-light leading-normal py-1 ml-6\">C + D &lt; E</li>\n</ul><p class=\"font-light leading-normal mt-4 mb-2\">이 스택은 마치 피보나치의 수처럼 생겼다.</p><p class=\"font-light leading-normal mt-4 mb-2\">이 스택을 위에서부터 순서대로 병합을 하면 비슷한 길이의 run들을 병합할 수 있다.\n또한 스택에 원소들을 적게 유지할 수 있다. 피보나치의 수를 1부터 38까지 전부 더하면 1억을 좀 넘는 값이 나온다. 즉, 이러한 형태의 스택은 1억 개가 넘는 원소를 스택에 38개의 원소로 담고 있을 수 있다.</p></section><section aria-labelledby=\"run-병합-최적화하기---메모리-최적화\"><h3 class=\"mt-7 mb-2 text-heading3 font-semibold leading-normal\" id=\"run-병합-최적화하기---메모리-최적화\"><a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#run-병합-최적화하기---메모리-최적화\"><span class=\"icon icon-link\"></span></a>run 병합 최적화하기 - 메모리 최적화</h3><p class=\"font-light leading-normal mt-4 mb-2\">길이가 m,h인 두 run M,H를 병합할 때 우리는 (m+h)*2만큼의 메모리가 필요하다는 것을 알고 있다.\n하지만 실은 간단한 최적화를 통해 2m + h (m &lt; h)만큼의 메모리를 사용하도록 개선할 수 있다.</p><p class=\"font-light leading-normal mt-4 mb-2\"><img alt=\"merge optimization\" loading=\"lazy\" width=\"704\" height=\"300\" decoding=\"async\" data-nimg=\"1\" class=\"object-cover rounded-md mx-auto my-12 w-full max-w-[704px]\" style=\"color:transparent\" src=\"/next-blog/posts/how-does-v8-array-sort-work/images/merge_optimization.jpg\"/></p><p class=\"font-light leading-normal mt-4 mb-2\">위와 같은 run H와 M이 있다고 하자. (m &lt; h)</p><p class=\"font-light leading-normal mt-4 mb-2\">H 앞에 M을 복사해 붙여 넣는다.</p><p class=\"font-light leading-normal mt-4 mb-2\"><img alt=\"merge optimization 2\" loading=\"lazy\" width=\"704\" height=\"300\" decoding=\"async\" data-nimg=\"1\" class=\"object-cover rounded-md mx-auto my-12 w-full max-w-[704px]\" style=\"color:transparent\" src=\"/next-blog/posts/how-does-v8-array-sort-work/images/merge_optimization2.jpg\"/></p><p class=\"font-light leading-normal mt-4 mb-2\">이제 M의 시작 지점을 i, H의 시작 지점을 j로 두고 각 i와 j를 증가시키며 M의 복사본 + H 배열에 덮어쓰는 식으로 merge를 수행하면 된다.\ni와 j 이전 인덱스는 확인할 필요가 없기 때문에 이러한 전략이 가능하다.</p></section><section aria-labelledby=\"run-병합-최적화하기---검사할-필요가-없는-지점-찾기\"><h3 class=\"mt-7 mb-2 text-heading3 font-semibold leading-normal\" id=\"run-병합-최적화하기---검사할-필요가-없는-지점-찾기\"><a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#run-병합-최적화하기---검사할-필요가-없는-지점-찾기\"><span class=\"icon icon-link\"></span></a>run 병합 최적화하기 - 검사할 필요가 없는 지점 찾기</h3><p class=\"font-light leading-normal mt-4 mb-2\"><img alt=\"merge optimization 3\" loading=\"lazy\" width=\"704\" height=\"300\" decoding=\"async\" data-nimg=\"1\" class=\"object-cover rounded-md mx-auto my-12 w-full max-w-[704px]\" style=\"color:transparent\" src=\"/next-blog/posts/how-does-v8-array-sort-work/images/merge_optimization3.jpg\"/></p><p class=\"font-light leading-normal mt-4 mb-2\">M의 최댓값(즉 M의 마지막 원소)과 최솟값(M의 첫 번째 원소)가 H안의 어디에 위치하는지 확인하면 그 이후는 병합을 수행하지 않아도 된다.\n위 이미지에서 M의 최댓값은 6이며 H[3] = 7보다 작다. 따라서 j가 k(=3)위치에 도착했다면 M[i] ~ M[M.length-1]까지의 값과 H[j] ~ H[H.length-1]값은 비교 없이 배열에 추가해 주면 된다.</p><p class=\"font-light leading-normal mt-4 mb-2\">M의 최댓값, 최솟값이 H 안에서 어디 위치하는지는 Binary Search로 찾으면 된다.</p></section><section aria-labelledby=\"run-병합-최적화하기---galloping-모드\"><h3 class=\"mt-7 mb-2 text-heading3 font-semibold leading-normal\" id=\"run-병합-최적화하기---galloping-모드\"><a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#run-병합-최적화하기---galloping-모드\"><span class=\"icon icon-link\"></span></a>run 병합 최적화하기 - Galloping 모드</h3><p class=\"font-light leading-normal mt-4 mb-2\"><img alt=\"galloping1\" loading=\"lazy\" width=\"704\" height=\"300\" decoding=\"async\" data-nimg=\"1\" class=\"object-cover rounded-md mx-auto my-12 w-full max-w-[704px]\" style=\"color:transparent\" src=\"/next-blog/posts/how-does-v8-array-sort-work/images/galloping1.jpg\"/></p><p class=\"font-light leading-normal mt-4 mb-2\">앞선 예시에서 H를 좀 더 확장해 j와 k 사이에 많은 원소들이 있다고 치자. M[i] 원소를 삽입하기 전까지 H[j]에서부터 6을 발견할 때까지 j와 k 사이를 순회해야한다.\n&quot;1개씩 모두 순회하지 않고 중간중간을 생략해 보자!&quot;가 Galloping의 아이디어이다.</p><p class=\"font-light leading-normal mt-4 mb-2\">비교할 위치를 2^n씩 건너뛰며 검사한다. 예를 들어 처음 H[1]과 M[1]을 비교했다면 그 다음은 H[2], H[4], H[8]... 형식으로 비교할 index를 증가시킨다.\n만약 H[8]과 비교해도 M[1]이 더 크다면 H[1] ~ H[8]은 M[1]보다 작은 값이니 H[1] ~ H[8]을 비교없이 merge하면 된다. 만약 M[1]이 H[16]보다 작다면 다시 H[8]로 돌아가 index를 1씩 증가시키며 원소를 비교한다.</p><p class=\"font-light leading-normal mt-4 mb-2\">Galloping은 꽤 효율적으로 보이지만, Galloping이 비효율적인 구간도 있다.\n일반적으로 H[0] ~ H[i]까지의 값이 M[0]보다 작을 때 선형적으로 i를 찾게되면 <code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\">i+1</code>번의 비교가 발생하지만, Galloping을 이용하면 <code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\">2 * floor(log(i)) + 2</code> 번의 비교가 필요하다.</p><p class=\"font-light leading-normal mt-4 mb-2\">따라서 i가 6보다 크거나 같아지는 순간부터 Galloping이 효율적이게 된다. 따라서 선형 비교를 할지 Galloping을 할지 적절한 전략을 세우는 것이 필요하다. (선형비교가 3번 이상 일어나면 Galloping모드로 치환하는 등)</p></section><section aria-labelledby=\"알고리즘-detail\"><h3 class=\"mt-7 mb-2 text-heading3 font-semibold leading-normal\" id=\"알고리즘-detail\"><a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#알고리즘-detail\"><span class=\"icon icon-link\"></span></a>알고리즘 (detail)</h3><p class=\"font-light leading-normal mt-4 mb-2\">다시 알고리즘을 세분화하여 다시 작성해 보자.</p><ol class=\"list-decimal my-4\">\n<li class=\"text-paragraph font-light leading-normal py-1 ml-6\">minrun을 찾는다. (<a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" href=\"https://github.com/python/cpython/blob/main/Objects/listsort.txt\">listsort.txt</a>의 313줄 참고)</li>\n<li class=\"text-paragraph font-light leading-normal py-1 ml-6\">배열의 앞부분부터 run을 생성한다.<!-- -->\n<ol class=\"list-decimal my-4\">\n<li class=\"text-paragraph font-light leading-normal py-1 ml-6\">minrun만큼 잘라 binary insertion sort를 수행한다. (처음 두 원소가 증가하는 방향이면 increase 정렬을, 감소하는 방향이면 decrease정렬을 수행한다)</li>\n<li class=\"text-paragraph font-light leading-normal py-1 ml-6\">그 뒤에 오는 원소들을 run에 합쳐도 증가/감소하는 방향을 유지할 수 있다면 run에 붙인다.</li>\n</ol>\n</li>\n<li class=\"text-paragraph font-light leading-normal py-1 ml-6\">생성한 run을 stack에 추가한다.<!-- -->\n<ol class=\"list-decimal my-4\">\n<li class=\"text-paragraph font-light leading-normal py-1 ml-6\">stack의 길이가 3보다 크다면, 스택 상위 3개의 원소(A,B,C)를 다음 조건에 맞는지 확인한다.</li>\n</ol>\n<ul class=\"list-disc my-4\">\n<li class=\"text-paragraph font-light leading-normal py-1 ml-6\">|B| &gt; |A|</li>\n<li class=\"text-paragraph font-light leading-normal py-1 ml-6\">[C| &gt; |A| + |B|</li>\n</ul>\n<ol class=\"list-decimal my-4\" start=\"2\">\n<li class=\"text-paragraph font-light leading-normal py-1 ml-6\">조건에 부합하지 않으면 B를 A와 C중 작은 쪽과 병합(merge)한다. 이를 조건에 부합할 때까지 반복한다.</li>\n</ol>\n</li>\n<li class=\"text-paragraph font-light leading-normal py-1 ml-6\">2번으로 돌아가 다음 run을 생성한다.</li>\n<li class=\"text-paragraph font-light leading-normal py-1 ml-6\">모든 run 생성을 마치고 Stack에 run이 모두 채워졌다면 스택의 맨 위 원소부터 병합을 수행한다.</li>\n</ol></section><section aria-labelledby=\"timsort의-시간복잡도\"><h3 class=\"mt-7 mb-2 text-heading3 font-semibold leading-normal\" id=\"timsort의-시간복잡도\"><a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#timsort의-시간복잡도\"><span class=\"icon icon-link\"></span></a>Timsort의 시간복잡도</h3><p class=\"font-light leading-normal mt-4 mb-2\">Insertion Sort의 최선 시간복잡도는 O(n), run을 생성한 결과 run이 1개만 나온 경우 (즉, 이미 정렬된 경우) O(n)의 시간복잡도를 가진다.\n따라서 Timsort의 최선 시간복잡도는 O(n)이다.</p><p class=\"font-light leading-normal mt-4 mb-2\">나머지는 사실상 Merge Sort가 진행되는 것과 같기 때문에 최악 시간복잡도와 평균 시간복잡도는 O(nlogn)이다.</p></section></section>\n<section aria-labelledby=\"v8의-torque\"><h2 class=\"mt-8 mb-3 text-heading2 font-semibold leading-normal\" id=\"v8의-torque\"><a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#v8의-torque\"><span class=\"icon icon-link\"></span></a>V8의 Torque</h2><p class=\"font-light leading-normal mt-4 mb-2\">이 부분은 간단하게만 언급하려고 한다. V8은 Torque라는 V8용 언어를 지원하며, 이 언어를 통해 V8의 JIT 수행에서 미리 컴파일 된 코드를 제공하도록 만들 수 있다.\nV8은 Torque로 기존 js로 작성된 Array#sort를 다시 작성했으며, 이를 통해 속도를 더욱 끌어올렸다. 구체적인 설명은 <a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" href=\"https://v8.dev/blog/array-sort#introducing-v8-torque\">Introducing V8 Torque</a>를 참고하면 된다.</p></section>\n<section aria-labelledby=\"참고\"><h2 class=\"mt-8 mb-3 text-heading2 font-semibold leading-normal\" id=\"참고\"><a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#참고\"><span class=\"icon icon-link\"></span></a>참고</h2><p class=\"font-light leading-normal mt-4 mb-2\"><a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" href=\"https://v8.dev/blog/array-sort\">V8 Blog - array-sort</a>\n<a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" href=\"https://en.wikipedia.org/wiki/Timsort\">위키피디아 - Timsort</a>\n<a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" href=\"https://github.com/python/cpython/blob/main/Objects/listsort.txt\">cpython - Timsort</a>\n<a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" href=\"https://d2.naver.com/helloworld/0315536\">D2 - Timsort에 대해 알아보자</a></p></section><button class=\"__trds __trds button trds-inline-flex trds-justify-center trds-place-items-center trds-whitespace-nowrap trds-rounded-lg trds-text-md trds-font-medium trds-gap-2 trds-transition-colors trds-cursor-pointer disabled:trds-cursor-not-allowed disabled:trds-opacity-50 trds-bg-neutral trds-text-fg-neutral disabled:trds-bg-neutral enabled:hover:trds-bg-neutral-hover enabled:active:trds-bg-neutral-pressed __trds trds-h-11 trds-w-11 trds-px-0 trds-py-0\" type=\"button\" aria-disabled=\"false\" aria-busy=\"false\" aria-label=\"Share this article\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-share\"><path d=\"M4 12v8a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-8\"></path><polyline points=\"16 6 12 2 8 6\"></polyline><line x1=\"12\" x2=\"12\" y1=\"2\" y2=\"15\"></line></svg></button><div data-scope=\"toast\" data-part=\"group\" dir=\"ltr\" tabindex=\"-1\" aria-label=\"bottom Notifications alt+T\" id=\"toast-group:bottom\" data-placement=\"bottom\" data-side=\"bottom\" data-align=\"center\" aria-live=\"polite\" role=\"region\" style=\"position:fixed;pointer-events:none;display:flex;flex-direction:column;--gap:16px;--first-height:0px;z-index:2147483647;align-items:center;bottom:max(env(safe-area-inset-bottom, 0px), 1rem);inset-inline-end:calc(env(safe-area-inset-right, 0px) + 1rem);inset-inline-start:calc(env(safe-area-inset-left, 0px) + 1rem)\"></div></div><section id=\"author\"><div class=\"flex flex-row gap-4 items-center\"><div class=\"__trds trds-animate-shimmer trds-bg-clip-padding-box trds-text-transparent trds-cursor-default trds-pointer-events-none trds-select-none before::trds-invisible after::trds-invisible [&amp;_*]:trds-invisible trds-rounded-lg rounded-full\"><div data-scope=\"avatar\" data-part=\"root\" dir=\"ltr\" id=\"avatar::Rn7obtsra:\" class=\"trds-rounded-full trds-overflow-hidden w-16 h-16\"><img data-scope=\"avatar\" data-part=\"image\" hidden=\"\" dir=\"ltr\" id=\"avatar::Rn7obtsra::image\" data-state=\"hidden\" class=\"trds-bg-muted\"/><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"64\" height=\"64\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-user trds-bg-muted trds-w-full trds-h-full\" data-scope=\"avatar\" data-part=\"fallback\" dir=\"ltr\" id=\"avatar::Rn7obtsra::fallback\" data-state=\"visible\"><path d=\"M19 21v-2a4 4 0 0 0-4-4H9a4 4 0 0 0-4 4v2\"></path><circle cx=\"12\" cy=\"7\" r=\"4\"></circle></svg></div></div><div class=\"text-pretty flex flex-col gap-2\"><div class=\"__trds trds-animate-shimmer trds-bg-clip-padding-box trds-text-transparent trds-cursor-default trds-pointer-events-none trds-select-none before::trds-invisible after::trds-invisible [&amp;_*]:trds-invisible trds-rounded-lg h-fit w-fit\"><strong class=\"inline-block h-6 min-w-36\"> </strong></div><div class=\"__trds trds-animate-shimmer trds-bg-clip-padding-box trds-text-transparent trds-cursor-default trds-pointer-events-none trds-select-none before::trds-invisible after::trds-invisible [&amp;_*]:trds-invisible trds-rounded-lg h-fit w-fit\"><p class=\"whitespace-pre-wrap h-6 min-w-64\"></p></div></div></div></section><section><div class=\"giscus w-full min-w-screen-md\"></div></section></article></main><footer class=\"self-center w-full max-w-screen-md px-4 h-96\"><p>© 2024-<!-- -->2024<!-- --> <!-- -->dev2820<!-- -->. All rights reserved.</p></footer><script src=\"/next-blog/_next/static/chunks/webpack-8f27d743501d147d.js\" async=\"\"></script><script>(self.__next_f=self.__next_f||[]).push([0]);self.__next_f.push([2,null])</script><script>self.__next_f.push([1,\"1:HL[\\\"/next-blog/_next/static/media/3e7b7e3fd4560936-s.p.woff2\\\",\\\"font\\\",{\\\"crossOrigin\\\":\\\"\\\",\\\"type\\\":\\\"font/woff2\\\"}]\\n2:HL[\\\"/next-blog/_next/static/media/ff840cfebfb63b0c-s.p.woff2\\\",\\\"font\\\",{\\\"crossOrigin\\\":\\\"\\\",\\\"type\\\":\\\"font/woff2\\\"}]\\n3:HL[\\\"/next-blog/_next/static/css/16077bc16defb9b9.css\\\",\\\"style\\\"]\\n4:HL[\\\"/next-blog/_next/static/css/203da25389b4eeab.css\\\",\\\"style\\\"]\\n\"])</script><script>self.__next_f.push([1,\"5:I[5726,[],\\\"\\\"]\\n8:I[1699,[],\\\"\\\"]\\na:I[2579,[],\\\"\\\"]\\nb:I[3805,[\\\"805\\\",\\\"static/chunks/805-a8af350d35fb9160.js\\\",\\\"418\\\",\\\"static/chunks/app/posts/%5Bslug%5D/layout-1cf1294e1a2539f4.js\\\"],\\\"\\\"]\\nc:I[9618,[\\\"618\\\",\\\"static/chunks/618-f2bb34773a0d24b2.js\\\",\\\"991\\\",\\\"static/chunks/app/posts/page-e8c6275c8ebfad50.js\\\"],\\\"\\\"]\\nd:I[6210,[\\\"618\\\",\\\"static/chunks/618-f2bb34773a0d24b2.js\\\",\\\"372\\\",\\\"static/chunks/372-b649e69f56e8eb19.js\\\",\\\"185\\\",\\\"static/chunks/app/layout-c7fa40d911107206.js\\\"],\\\"BrandLogo\\\"]\\ne:I[9205,[\\\"618\\\",\\\"static/chunks/618-f2bb34773a0d24b2.js\\\",\\\"372\\\",\\\"static/chunks/372-b649e69f56e8eb19.js\\\",\\\"185\\\",\\\"static/chunks/app/layout-c7fa40d911107206.js\\\"],\\\"GlobalNavigationBar\\\"]\\n10:I[3141,[],\\\"\\\"]\\n9:[\\\"slug\\\",\\\"how-does-v8-array-sort-work\\\",\\\"d\\\"]\\n11:[]\\n\"])</script><script>self.__next_f.push([1,\"0:[[[\\\"$\\\",\\\"link\\\",\\\"0\\\",{\\\"rel\\\":\\\"stylesheet\\\",\\\"href\\\":\\\"/next-blog/_next/static/css/16077bc16defb9b9.css\\\",\\\"precedence\\\":\\\"next\\\",\\\"crossOrigin\\\":\\\"$undefined\\\"}]],[\\\"$\\\",\\\"$L5\\\",null,{\\\"buildId\\\":\\\"FkDD4ed24GsUGsJlrpxW5\\\",\\\"assetPrefix\\\":\\\"/next-blog\\\",\\\"initialCanonicalUrl\\\":\\\"/posts/how-does-v8-array-sort-work\\\",\\\"initialTree\\\":[\\\"\\\",{\\\"children\\\":[\\\"posts\\\",{\\\"children\\\":[[\\\"slug\\\",\\\"how-does-v8-array-sort-work\\\",\\\"d\\\"],{\\\"children\\\":[\\\"__PAGE__?{\\\\\\\"slug\\\\\\\":\\\\\\\"how-does-v8-array-sort-work\\\\\\\"}\\\",{}]}]}]},\\\"$undefined\\\",\\\"$undefined\\\",true],\\\"initialSeedData\\\":[\\\"\\\",{\\\"children\\\":[\\\"posts\\\",{\\\"children\\\":[[\\\"slug\\\",\\\"how-does-v8-array-sort-work\\\",\\\"d\\\"],{\\\"children\\\":[\\\"__PAGE__\\\",{},[[\\\"$L6\\\",\\\"$L7\\\"],null],null]},[[[\\\"$\\\",\\\"$L8\\\",null,{\\\"parallelRouterKey\\\":\\\"children\\\",\\\"segmentPath\\\":[\\\"children\\\",\\\"posts\\\",\\\"children\\\",\\\"$9\\\",\\\"children\\\"],\\\"error\\\":\\\"$undefined\\\",\\\"errorStyles\\\":\\\"$undefined\\\",\\\"errorScripts\\\":\\\"$undefined\\\",\\\"template\\\":[\\\"$\\\",\\\"$La\\\",null,{}],\\\"templateStyles\\\":\\\"$undefined\\\",\\\"templateScripts\\\":\\\"$undefined\\\",\\\"notFound\\\":\\\"$undefined\\\",\\\"notFoundStyles\\\":\\\"$undefined\\\",\\\"styles\\\":null}],[\\\"$\\\",\\\"$Lb\\\",null,{\\\"src\\\":\\\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/prism.min.js\\\"}],[\\\"$\\\",\\\"$Lb\\\",null,{\\\"src\\\":\\\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-javascript.min.js\\\"}],[\\\"$\\\",\\\"$Lb\\\",null,{\\\"src\\\":\\\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-typescript.min.js\\\"}],[\\\"$\\\",\\\"$Lb\\\",null,{\\\"src\\\":\\\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-jsx.min.js\\\"}],[\\\"$\\\",\\\"$Lb\\\",null,{\\\"src\\\":\\\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-tsx.min.js\\\"}],[\\\"$\\\",\\\"$Lb\\\",null,{\\\"src\\\":\\\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-c.min.js\\\"}],[\\\"$\\\",\\\"$Lb\\\",null,{\\\"src\\\":\\\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/plugins/line-numbers/prism-line-numbers.min.js\\\"}]],null],null]},[\\\"$\\\",\\\"$L8\\\",null,{\\\"parallelRouterKey\\\":\\\"children\\\",\\\"segmentPath\\\":[\\\"children\\\",\\\"posts\\\",\\\"children\\\"],\\\"error\\\":\\\"$undefined\\\",\\\"errorStyles\\\":\\\"$undefined\\\",\\\"errorScripts\\\":\\\"$undefined\\\",\\\"template\\\":[\\\"$\\\",\\\"$La\\\",null,{}],\\\"templateStyles\\\":\\\"$undefined\\\",\\\"templateScripts\\\":\\\"$undefined\\\",\\\"notFound\\\":\\\"$undefined\\\",\\\"notFoundStyles\\\":\\\"$undefined\\\",\\\"styles\\\":[[\\\"$\\\",\\\"link\\\",\\\"0\\\",{\\\"rel\\\":\\\"stylesheet\\\",\\\"href\\\":\\\"/next-blog/_next/static/css/203da25389b4eeab.css\\\",\\\"precedence\\\":\\\"next\\\",\\\"crossOrigin\\\":\\\"$undefined\\\"}]]}],null]},[[\\\"$\\\",\\\"html\\\",null,{\\\"lang\\\":\\\"kr\\\",\\\"className\\\":\\\"__variable_fa65fd __variable_7691e4 scroll-smooth\\\",\\\"children\\\":[\\\"$\\\",\\\"body\\\",null,{\\\"className\\\":\\\"__className_fa65fd flex flex-col text-gray-800\\\",\\\"children\\\":[[\\\"$\\\",\\\"link\\\",null,{\\\"href\\\":\\\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/plugins/line-numbers/prism-line-numbers.min.css\\\",\\\"rel\\\":\\\"stylesheet\\\"}],[\\\"$\\\",\\\"header\\\",null,{\\\"className\\\":\\\"flex flex-row justify-center py-2 items-center self-center w-full max-w-screen-md px-4\\\",\\\"children\\\":[[\\\"$\\\",\\\"$Lc\\\",null,{\\\"href\\\":\\\"/\\\",\\\"children\\\":[\\\"$\\\",\\\"$Ld\\\",null,{\\\"height\\\":48}]}],[\\\"$\\\",\\\"div\\\",null,{\\\"className\\\":\\\"flex-1\\\"}],[\\\"$\\\",\\\"$Le\\\",null,{}]]}],[\\\"$\\\",\\\"main\\\",null,{\\\"className\\\":\\\"self-center w-full max-w-screen-md p-4 text-gray-800\\\",\\\"children\\\":[\\\"$\\\",\\\"$L8\\\",null,{\\\"parallelRouterKey\\\":\\\"children\\\",\\\"segmentPath\\\":[\\\"children\\\"],\\\"error\\\":\\\"$undefined\\\",\\\"errorStyles\\\":\\\"$undefined\\\",\\\"errorScripts\\\":\\\"$undefined\\\",\\\"template\\\":[\\\"$\\\",\\\"$La\\\",null,{}],\\\"templateStyles\\\":\\\"$undefined\\\",\\\"templateScripts\\\":\\\"$undefined\\\",\\\"notFound\\\":[\\\"$\\\",\\\"div\\\",null,{\\\"children\\\":[[\\\"$\\\",\\\"h2\\\",null,{\\\"children\\\":\\\"Not Found\\\"}],[\\\"$\\\",\\\"p\\\",null,{\\\"children\\\":\\\"Could not find requested resource\\\"}],[\\\"$\\\",\\\"$Lc\\\",null,{\\\"href\\\":\\\"/\\\",\\\"children\\\":\\\"Return Home\\\"}]]}],\\\"notFoundStyles\\\":[],\\\"styles\\\":null}]}],[\\\"$\\\",\\\"footer\\\",null,{\\\"className\\\":\\\"self-center w-full max-w-screen-md px-4 h-96\\\",\\\"children\\\":[\\\"$\\\",\\\"p\\\",null,{\\\"children\\\":[\\\"© 2024-\\\",2024,\\\" \\\",\\\"dev2820\\\",\\\". All rights reserved.\\\"]}]}]]}]}],null],null],\\\"couldBeIntercepted\\\":false,\\\"initialHead\\\":[null,\\\"$Lf\\\"],\\\"globalErrorComponent\\\":\\\"$10\\\",\\\"missingSlots\\\":\\\"$W11\\\"}]]\\n\"])</script><script>self.__next_f.push([1,\"12:I[5969,[\\\"587\\\",\\\"static/chunks/952ad60e-7cdac7b6bf36214c.js\\\",\\\"618\\\",\\\"static/chunks/618-f2bb34773a0d24b2.js\\\",\\\"372\\\",\\\"static/chunks/372-b649e69f56e8eb19.js\\\",\\\"805\\\",\\\"static/chunks/805-a8af350d35fb9160.js\\\",\\\"333\\\",\\\"static/chunks/app/posts/%5Bslug%5D/page-e951164d6ad6c144.js\\\"],\\\"Image\\\"]\\n13:I[2870,[\\\"587\\\",\\\"static/chunks/952ad60e-7cdac7b6bf36214c.js\\\",\\\"618\\\",\\\"static/chunks/618-f2bb34773a0d24b2.js\\\",\\\"372\\\",\\\"static/chunks/372-b649e69f56e8eb19.js\\\",\\\"805\\\",\\\"static/chunks/805-a8af350d35fb9160.js\\\",\\\"333\\\",\\\"static/chunks/app/posts/%5Bslug%5D/page-e951164d6ad6c144.js\\\"],\\\"TableOfContents\\\"]\\n14:I[6894,[\\\"587\\\",\\\"static/chunks/952ad60e-7cdac7b6bf36214c.js\\\",\\\"618\\\",\\\"static/chunks/618-f2bb34773a0d24b2.js\\\",\\\"372\\\",\\\"static/chunks/372-b649e69f56e8eb19.js\\\",\\\"805\\\",\\\"static/chunks/805-a8af350d35fb9160.js\\\",\\\"333\\\",\\\"static/chunks/app/posts/%5Bslug%5D/page-e951164d6ad6c144.js\\\"],\\\"Anchor\\\"]\\n15:I[4547,[\\\"587\\\",\\\"static/chunks/952ad60e-7cdac7b6bf36214c.js\\\",\\\"618\\\",\\\"static/chunks/618-f2bb34773a0d24b2.js\\\",\\\"372\\\",\\\"static/chunks/372-b649e69f56e8eb19.js\\\",\\\"805\\\",\\\"static/chunks/805-a8af350d35fb9160.js\\\",\\\"333\\\",\\\"static/chunks/app/posts/%5Bslug%5D/page-e951164d6ad6c144.js\\\"],\\\"ShareButton\\\"]\\n16:I[6398,[\\\"587\\\",\\\"static/chunks/952ad60e-7cdac7b6bf36214c.js\\\",\\\"618\\\",\\\"static/chunks/618-f2bb34773a0d24b2.js\\\",\\\"372\\\",\\\"static/chunks/372-b649e69f56e8eb19.js\\\",\\\"805\\\",\\\"static/chunks/805-a8af350d35fb9160.js\\\",\\\"333\\\",\\\"static/chunks/app/posts/%5Bslug%5D/page-e951164d6ad6c144.js\\\"],\\\"AuthorInfo\\\"]\\n\"])</script><script>self.__next_f.push([1,\"7:[\\\"$\\\",\\\"article\\\",null,{\\\"className\\\":\\\"relative\\\",\\\"children\\\":[[\\\"$\\\",\\\"header\\\",null,{\\\"id\\\":\\\"post-meta\\\",\\\"children\\\":[[\\\"$\\\",\\\"$L12\\\",null,{\\\"alt\\\":\\\"hero image\\\",\\\"src\\\":\\\"/next-blog/posts/how-does-v8-array-sort-work/images/fibonacci.jpg\\\",\\\"className\\\":\\\"max-w-full w-full rounded-md\\\",\\\"width\\\":\\\"500\\\",\\\"height\\\":\\\"300\\\"}],[\\\"$\\\",\\\"h1\\\",null,{\\\"className\\\":\\\"mt-10 mb-4 text-heading1 font-bold leading-normal\\\",\\\"id\\\":\\\"V8의 `Array.sort`는 어떻게 동작하는가?\\\",\\\"children\\\":\\\"V8의 `Array.sort`는 어떻게 동작하는가?\\\"}],[\\\"$\\\",\\\"time\\\",null,{\\\"dateTime\\\":\\\"2024-04-23\\\",\\\"aria-label\\\":\\\"Published on 2024-04-23\\\",\\\"children\\\":\\\"2024-04-23\\\"}],\\\" \\\",\\\"|\\\",\\\" \\\",[\\\"$\\\",\\\"time\\\",null,{\\\"dateTime\\\":\\\"PT4M\\\",\\\"aria-label\\\":\\\"Estimated reading time\\\",\\\"children\\\":[4,\\\" mins\\\"]}]]}],[\\\"$\\\",\\\"div\\\",null,{\\\"id\\\":\\\"content\\\",\\\"className\\\":\\\"relative\\\",\\\"children\\\":[[\\\"$\\\",\\\"div\\\",null,{\\\"id\\\":\\\"table-of-header\\\",\\\"className\\\":\\\"absolute -right-12 translate-x-full h-full w-52 desktop:block hidden\\\",\\\"children\\\":[\\\"$\\\",\\\"$L13\\\",null,{\\\"toc\\\":[{\\\"level\\\":2,\\\"content\\\":\\\"V8은 정렬 이전과 이후에 무엇을 하는가\\\",\\\"slug\\\":\\\"#v8은-정렬-이전과-이후에-무엇을-하는가\\\"},{\\\"level\\\":3,\\\"content\\\":\\\"전처리 과정\\\",\\\"slug\\\":\\\"#전처리-과정\\\"},{\\\"level\\\":3,\\\"content\\\":\\\"후처리 과정\\\",\\\"slug\\\":\\\"#후처리-과정\\\"},{\\\"level\\\":2,\\\"content\\\":\\\"과거의 정렬 방식 (QuickSort)\\\",\\\"slug\\\":\\\"#과거의-정렬-방식-quicksort\\\"},{\\\"level\\\":2,\\\"content\\\":\\\"현재의 정렬 방식 (Timsort)\\\",\\\"slug\\\":\\\"#현재의-정렬-방식-timsort\\\"},{\\\"level\\\":3,\\\"content\\\":\\\"run이란 무엇인가?\\\",\\\"slug\\\":\\\"#run이란-무엇인가\\\"},{\\\"level\\\":3,\\\"content\\\":\\\"알고리즘 (simple)\\\",\\\"slug\\\":\\\"#알고리즘-simple\\\"},{\\\"level\\\":3,\\\"content\\\":\\\"minrun의 크기를 결정하는 방식\\\",\\\"slug\\\":\\\"#minrun의-크기를-결정하는-방식\\\"},{\\\"level\\\":3,\\\"content\\\":\\\"Insertion sort를 이용하는 이유\\\",\\\"slug\\\":\\\"#insertion-sort를-이용하는-이유\\\"},{\\\"level\\\":3,\\\"content\\\":\\\"minrun를 기준으로 run 만들기\\\",\\\"slug\\\":\\\"#minrun를-기준으로-run-만들기\\\"},{\\\"level\\\":3,\\\"content\\\":\\\"run을 병합하기\\\",\\\"slug\\\":\\\"#run을-병합하기\\\"},{\\\"level\\\":3,\\\"content\\\":\\\"run 병합 최적화하기 - 메모리 최적화\\\",\\\"slug\\\":\\\"#run-병합-최적화하기---메모리-최적화\\\"},{\\\"level\\\":3,\\\"content\\\":\\\"run 병합 최적화하기 - 검사할 필요가 없는 지점 찾기\\\",\\\"slug\\\":\\\"#run-병합-최적화하기---검사할-필요가-없는-지점-찾기\\\"},{\\\"level\\\":3,\\\"content\\\":\\\"run 병합 최적화하기 - Galloping 모드\\\",\\\"slug\\\":\\\"#run-병합-최적화하기---galloping-모드\\\"},{\\\"level\\\":3,\\\"content\\\":\\\"알고리즘 (detail)\\\",\\\"slug\\\":\\\"#알고리즘-detail\\\"},{\\\"level\\\":3,\\\"content\\\":\\\"Timsort의 시간복잡도\\\",\\\"slug\\\":\\\"#timsort의-시간복잡도\\\"},{\\\"level\\\":2,\\\"content\\\":\\\"V8의 Torque\\\",\\\"slug\\\":\\\"#v8의-torque\\\"},{\\\"level\\\":2,\\\"content\\\":\\\"참고\\\",\\\"slug\\\":\\\"#참고\\\"}],\\\"className\\\":\\\"sticky top-24\\\"}]}],[[\\\"$\\\",\\\"section\\\",null,{\\\"aria-labelledby\\\":\\\"v8은-정렬-이전과-이후에-무엇을-하는가\\\",\\\"children\\\":[[\\\"$\\\",\\\"h2\\\",null,{\\\"className\\\":\\\"mt-8 mb-3 text-heading2 font-semibold leading-normal\\\",\\\"id\\\":\\\"v8은-정렬-이전과-이후에-무엇을-하는가\\\",\\\"children\\\":[[\\\"$\\\",\\\"$L14\\\",null,{\\\"aria-hidden\\\":\\\"true\\\",\\\"tabIndex\\\":\\\"-1\\\",\\\"href\\\":\\\"#v8은-정렬-이전과-이후에-무엇을-하는가\\\",\\\"children\\\":[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"icon icon-link\\\"}]}],\\\"V8은 정렬 이전과 이후에 무엇을 하는가\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"V8은 한 개의 전처리 과정과 한 개의 후처리 과정을 거친다. 기본적인 아이디어는 다음과 같다.\\\"}],[\\\"$\\\",\\\"blockquote\\\",null,{\\\"className\\\":\\\"my-4 border-l-4 border-primary p-6 bg-gray-100 text-gray-700 [\\u0026_*:first-child]:mt-0 [\\u0026_*:last-child]:mb-0\\\",\\\"children\\\":[\\\"\\\\n\\\",[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":[\\\"모든 \\\",[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\\\",\\\"children\\\":\\\"undefined\\\"}],\\\" 값들을 임시 list에 모은 뒤, \\\",[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\\\",\\\"children\\\":\\\"undefined\\\"}],\\\"가 아닌 값들을 정렬하고 \\\",[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\\\",\\\"children\\\":\\\"undefined\\\"}],\\\"를 뒤에 붙인다.\\\"]}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"section\\\",null,{\\\"aria-labelledby\\\":\\\"전처리-과정\\\",\\\"children\\\":[[\\\"$\\\",\\\"h3\\\",null,{\\\"className\\\":\\\"mt-7 mb-2 text-heading3 font-semibold leading-normal\\\",\\\"id\\\":\\\"전처리-과정\\\",\\\"children\\\":[[\\\"$\\\",\\\"$L14\\\",null,{\\\"aria-hidden\\\":\\\"true\\\",\\\"tabIndex\\\":\\\"-1\\\",\\\"href\\\":\\\"#전처리-과정\\\",\\\"children\\\":[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"icon icon-link\\\"}]}],\\\"전처리 과정\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"먼저 배열의 값들을 다음과 같이 분류한다.\\\"}],[\\\"$\\\",\\\"ol\\\",null,{\\\"className\\\":\\\"list-decimal my-4\\\",\\\"children\\\":[\\\"\\\\n\\\",[\\\"$\\\",\\\"li\\\",null,{\\\"className\\\":\\\"text-paragraph font-light leading-normal py-1 ml-6\\\",\\\"children\\\":[\\\"모든 \\\",[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\\\",\\\"children\\\":\\\"undefined\\\"}],\\\"가 아닌 값들(비교 함수에 따라 정렬될 값)\\\"]}],\\\"\\\\n\\\",[\\\"$\\\",\\\"li\\\",null,{\\\"className\\\":\\\"text-paragraph font-light leading-normal py-1 ml-6\\\",\\\"children\\\":[\\\"모든 \\\",[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\\\",\\\"children\\\":\\\"undefined\\\"}],\\\"값들\\\"]}],\\\"\\\\n\\\",[\\\"$\\\",\\\"li\\\",null,{\\\"className\\\":\\\"text-paragraph font-light leading-normal py-1 ml-6\\\",\\\"children\\\":\\\"모든 빈칸, 즉 존재하지 않는 속성들\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"실제 정렬 알고리즘은 첫 번째 분류(undefined가 아닌 값)에만 적용되면 된다. 이를 위해서 V8은 다음과 같이 동작하는 전처리 과정을 가진다.\\\"}],[\\\"$\\\",\\\"ol\\\",null,{\\\"className\\\":\\\"list-decimal my-4\\\",\\\"children\\\":[\\\"\\\\n\\\",[\\\"$\\\",\\\"li\\\",null,{\\\"className\\\":\\\"text-paragraph font-light leading-normal py-1 ml-6\\\",\\\"children\\\":[\\\"배열을 순회하며\\\",\\\"\\\\n\\\",[\\\"$\\\",\\\"ol\\\",null,{\\\"className\\\":\\\"list-decimal my-4\\\",\\\"children\\\":[\\\"\\\\n\\\",[\\\"$\\\",\\\"li\\\",null,{\\\"className\\\":\\\"text-paragraph font-light leading-normal py-1 ml-6\\\",\\\"children\\\":\\\"만약 원소가 hole이다. -\\u003e 아무것도 하지 않는다.\\\"}],\\\"\\\\n\\\",[\\\"$\\\",\\\"li\\\",null,{\\\"className\\\":\\\"text-paragraph font-light leading-normal py-1 ml-6\\\",\\\"children\\\":[\\\"만약 원소가 \\\",[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\\\",\\\"children\\\":\\\"undefined\\\"}],\\\"이다. -\\u003e \\\",[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\\\",\\\"children\\\":\\\"numberOfUndefineds\\\"}],\\\"의 값을 1 증가시킨다.\\\"]}],\\\"\\\\n\\\",[\\\"$\\\",\\\"li\\\",null,{\\\"className\\\":\\\"text-paragraph font-light leading-normal py-1 ml-6\\\",\\\"children\\\":\\\"둘 다 아니라면 원소를 elements라는 임시 배열에 추가한다.\\\"}],\\\"\\\\n\\\"]}],\\\"\\\\n\\\"]}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":[\\\"이 작업이 이루어지면, 모든 \\\",[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\\\",\\\"children\\\":\\\"undefined\\\"}],\\\"가 아닌 값들은 \\\",[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\\\",\\\"children\\\":\\\"elements\\\"}],\\\"라는 임시 배열에 담기게 된다. \\\",[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\\\",\\\"children\\\":\\\"undefined\\\"}],\\\"들은 개수만 알면 된다. 자바스크립트 sort의 명세에 따르면 \\\",[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\\\",\\\"children\\\":\\\"undefined\\\"}],\\\" 들이 맨 끝에 정렬되어야한다. \\\",[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\\\",\\\"children\\\":\\\"undefined\\\"}],\\\" 값들은 실제로 유저가 제공한 비교 함수에 전달되지 않을 것이기 때문에 \\\",[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\\\",\\\"children\\\":\\\"undefined\\\"}],\\\"가 등장한 횟수만 새면 된다.\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":[\\\"다음으로 \\\",[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\\\",\\\"children\\\":\\\"elements\\\"}],\\\" 배열을 실제로 정렬한다. 글의 후반부 TimSort 섹션에서 자세한 내용을 다룬다.\\\"]}]]}],[\\\"$\\\",\\\"section\\\",null,{\\\"aria-labelledby\\\":\\\"후처리-과정\\\",\\\"children\\\":[[\\\"$\\\",\\\"h3\\\",null,{\\\"className\\\":\\\"mt-7 mb-2 text-heading3 font-semibold leading-normal\\\",\\\"id\\\":\\\"후처리-과정\\\",\\\"children\\\":[[\\\"$\\\",\\\"$L14\\\",null,{\\\"aria-hidden\\\":\\\"true\\\",\\\"tabIndex\\\":\\\"-1\\\",\\\"href\\\":\\\"#후처리-과정\\\",\\\"children\\\":[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"icon icon-link\\\"}]}],\\\"후처리 과정\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"전처리를 거치고 얻은 정렬된 값들을 원본 배열 혹은 객체에 덮어써야 한다. 후처리 과정은 다시 세 단계로 구성된다.\\\"}],[\\\"$\\\",\\\"ol\\\",null,{\\\"className\\\":\\\"list-decimal my-4\\\",\\\"children\\\":[\\\"\\\\n\\\",[\\\"$\\\",\\\"li\\\",null,{\\\"className\\\":\\\"text-paragraph font-light leading-normal py-1 ml-6\\\",\\\"children\\\":[\\\"원본 객체의 앞부터 \\\",[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\\\",\\\"children\\\":\\\"elements\\\"}],\\\" 배열로 덮어쓴다.\\\"]}],\\\"\\\\n\\\",[\\\"$\\\",\\\"li\\\",null,{\\\"className\\\":\\\"text-paragraph font-light leading-normal py-1 ml-6\\\",\\\"children\\\":[\\\"그 뒤를 \\\",[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\\\",\\\"children\\\":\\\"numberOfUndefineds\\\"}],\\\" 값만큼 \\\",[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\\\",\\\"children\\\":\\\"undefined\\\"}],\\\"로 채운다.\\\"]}],\\\"\\\\n\\\",[\\\"$\\\",\\\"li\\\",null,{\\\"className\\\":\\\"text-paragraph font-light leading-normal py-1 ml-6\\\",\\\"children\\\":\\\"나머지 값들은 삭제한다.\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"3번 과정은 정렬하려는 원본 객체에 hole이 포함된 경우에 필요하다. 3번을 하지 않으면 배열에 중복된 값이 생길 수 있다.\\\"}]]}]]}],\\\"\\\\n\\\",[\\\"$\\\",\\\"section\\\",null,{\\\"aria-labelledby\\\":\\\"과거의-정렬-방식-quicksort\\\",\\\"children\\\":[[\\\"$\\\",\\\"h2\\\",null,{\\\"className\\\":\\\"mt-8 mb-3 text-heading2 font-semibold leading-normal\\\",\\\"id\\\":\\\"과거의-정렬-방식-quicksort\\\",\\\"children\\\":[[\\\"$\\\",\\\"$L14\\\",null,{\\\"aria-hidden\\\":\\\"true\\\",\\\"tabIndex\\\":\\\"-1\\\",\\\"href\\\":\\\"#과거의-정렬-방식-quicksort\\\",\\\"children\\\":[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"icon icon-link\\\"}]}],\\\"과거의 정렬 방식 (QuickSort)\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":[[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\\\",\\\"children\\\":\\\"Array.prototype.sort\\\"}],\\\" 와 \\\",[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\\\",\\\"children\\\":\\\"TypedArray.prototype.sort\\\"}],\\\" 는 자바스크립트로 구현된 Quicksort 구현체에 의존했었다. 정렬 알고리즘 다소 단순하다: 기본적으로는 Quicksort를 하지만, 길이가 짧은 배열(length \\u003c 10)에 대해서는 삽입 정렬을 사용한다. Quicksort 재귀 중 하위 배열의 길이가 10에 도달하면 삽입 정렬로 대체된다. 작은 배열에 대해서는 삽입 정렬이 더 효율적인데, 이는 Quicksort가 분할 이후 재귀적으로 두 번 호출되기 때문이다. 각 재귀 호출은 스택 프레임을 생성하고(그리고 제거하는) 오버헤드가 있다.\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"Quicksort에서 적절한 pivot을 선택하는 것은 성능에 큰 영향을 준다. V8은 2가지 전략을 채택했다.\\\"}],[\\\"$\\\",\\\"ul\\\",null,{\\\"className\\\":\\\"list-disc my-4\\\",\\\"children\\\":[\\\"\\\\n\\\",[\\\"$\\\",\\\"li\\\",null,{\\\"className\\\":\\\"text-paragraph font-light leading-normal py-1 ml-6\\\",\\\"children\\\":\\\"피봇은 정렬될 배열의 첫 번째, 마지막 그리고 third-element 중 중앙값으로 선택되었다. 작은 배열의 경우 third-element는 단순히 배열의 중간 요소로 선정했다.\\\"}],\\\"\\\\n\\\",[\\\"$\\\",\\\"li\\\",null,{\\\"className\\\":\\\"text-paragraph font-light leading-normal py-1 ml-6\\\",\\\"children\\\":\\\"큰 배열에선 표본을 추출하고, 표본을 정렬한 뒤, 정렬된 표본의 중앙값을 위 계산의 third-element로 사용했다.\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"퀵소트의 이점 중 하나는 in-place 정렬을 한다(혹은 그렇게 구현할 수 있다)는 것이다. 메모리 오버헤드는 큰 배열을 정렬할 때 표본을 저장하기 위한 작은 배열 할당과 log(n)의 스택 영역 할당뿐이다. 단점은 안정정렬이 아니라는 점과 QuickSort는 최악의 상황에 O(n^2)의 성능을 보인다는 점이다. 즉, 안정적이지 않았다.\\\"}]]}],\\\"\\\\n\\\",[\\\"$\\\",\\\"section\\\",null,{\\\"aria-labelledby\\\":\\\"현재의-정렬-방식-timsort\\\",\\\"children\\\":[[\\\"$\\\",\\\"h2\\\",null,{\\\"className\\\":\\\"mt-8 mb-3 text-heading2 font-semibold leading-normal\\\",\\\"id\\\":\\\"현재의-정렬-방식-timsort\\\",\\\"children\\\":[[\\\"$\\\",\\\"$L14\\\",null,{\\\"aria-hidden\\\":\\\"true\\\",\\\"tabIndex\\\":\\\"-1\\\",\\\"href\\\":\\\"#현재의-정렬-방식-timsort\\\",\\\"children\\\":[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"icon icon-link\\\"}]}],\\\"현재의 정렬 방식 (Timsort)\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":[\\\"2002년 파이썬에 탑재하기 위해 Tim Peter가 개발한 \\\",[\\\"$\\\",\\\"strong\\\",null,{\\\"className\\\":\\\"font-medium\\\",\\\"children\\\":\\\"Timsort\\\"}],\\\"는 Merge sort와 Insertion sort를 기반으로 다양한 최적화 기법을 적용한 정렬이다. 현재는 Python, V8, Swift, Java SE 7 등 다양한 언어에서 채택되었다.\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"기본적인 아이디어는 다음과 같다.\\\"}],[\\\"$\\\",\\\"blockquote\\\",null,{\\\"className\\\":\\\"my-4 border-l-4 border-primary p-6 bg-gray-100 text-gray-700 [\\u0026_*:first-child]:mt-0 [\\u0026_*:last-child]:mb-0\\\",\\\"children\\\":[\\\"\\\\n\\\",[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"연속적으로 정렬된 부분을 \\\\\\\"run\\\\\\\"이라고 하자.\\\"}],\\\"\\\\n\\\",[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"대부분의 현실 세계 데이터에는 이미 자연적으로 생긴 run들이 포함되어 있다.\\\\n이 run들을 이용하면 비교와 swap 비용을 줄일 수 있다.\\\"}],\\\"\\\\n\\\",[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"따라서 이 run들을 최대한 활용해 보자!\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"section\\\",null,{\\\"aria-labelledby\\\":\\\"run이란-무엇인가\\\",\\\"children\\\":[[\\\"$\\\",\\\"h3\\\",null,{\\\"className\\\":\\\"mt-7 mb-2 text-heading3 font-semibold leading-normal\\\",\\\"id\\\":\\\"run이란-무엇인가\\\",\\\"children\\\":[[\\\"$\\\",\\\"$L14\\\",null,{\\\"aria-hidden\\\":\\\"true\\\",\\\"tabIndex\\\":\\\"-1\\\",\\\"href\\\":\\\"#run이란-무엇인가\\\",\\\"children\\\":[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"icon icon-link\\\"}]}],\\\"run이란 무엇인가?\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"run은 배열 내에 자연적으로 발생한 연속 정렬된 부분 수열이다.\\\"}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":[[\\\"$\\\",\\\"$L12\\\",null,{\\\"className\\\":\\\"object-cover rounded-md mx-auto my-12 w-full max-w-[704px]\\\",\\\"src\\\":\\\"/next-blog/posts/how-does-v8-array-sort-work/images/random_array.jpg\\\",\\\"alt\\\":\\\"random_array\\\",\\\"width\\\":704,\\\"height\\\":300}],[\\\"$\\\",\\\"em\\\",null,{\\\"className\\\":\\\"[img+\\u0026]:block [img+\\u0026]:text-center [img+\\u0026]:text-gray-400 [img+\\u0026]:font-thin [img+\\u0026]:not-italic [img+\\u0026]:text-sm [img+\\u0026]:-translate-y-10\\\",\\\"children\\\":\\\"랜덤한 배열\\\"}]]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":[\\\"위와 같이 10개 원소를 가진 배열이 있다고 하자.\\\\n\\\",[\\\"$\\\",\\\"$L12\\\",null,{\\\"className\\\":\\\"object-cover rounded-md mx-auto my-12 w-full max-w-[704px]\\\",\\\"src\\\":\\\"/next-blog/posts/how-does-v8-array-sort-work/images/run_example.jpg\\\",\\\"alt\\\":\\\"run_example\\\",\\\"width\\\":704,\\\"height\\\":300}]]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"위의 배열에서 run을 찾으면 (7,4) (9,3) (8,6,2) (10,1) (5)이 있다.\\\"}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"run은 마지막 원소가 run이 되는 경우를 제외하고는 항상 길이가 2보다 길다.\\\"}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"run은 증가하는 경우와 감소하는 경우 둘 다 상관없다. 배열을 증가하도록 정렬할 때 감소하는 run은 단순히 뒤집기만 하면 증가하는 run으로 만들 수 있기 때문이다.\\\\nrun을 뒤집을 때는 양 끝값을 서로 swap하며 중앙으로 수렴하는 방식을 이용한다. 이때 stable을 지키기 위해 두 값을 비교해 한쪽이 엄격하게 작은 경우에만 swap한다.\\\"}],[\\\"$\\\",\\\"pre\\\",null,{\\\"className\\\":\\\"rounded-md [\\u0026_code]:py-0 [\\u0026_code]:px-0 line-numbers language-js\\\",\\\"children\\\":[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2 language-js\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"funciton \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token function\\\",\\\"children\\\":\\\"reverseRun\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token parameter\\\",\\\"children\\\":\\\"arr\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"{\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword\\\",\\\"children\\\":\\\"const\\\"}],\\\" middle \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token known-class-name class-name\\\",\\\"children\\\":\\\"Math\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\".\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token method function property-access\\\",\\\"children\\\":\\\"floor\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"arr\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\".\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token property-access\\\",\\\"children\\\":\\\"length\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"/\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"2\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword control-flow\\\",\\\"children\\\":\\\"for\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword\\\",\\\"children\\\":\\\"let\\\"}],\\\" i\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"0\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"i\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"\\u003c\\\"}],\\\"middle\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"i\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"++\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"{\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"    \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword control-flow\\\",\\\"children\\\":\\\"if\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],\\\"arr\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"[\\\"}],\\\"i\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"]\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"===\\\"}],\\\" arr\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"[\\\"}],\\\"arr\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\".\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token property-access\\\",\\\"children\\\":\\\"length\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"-\\\"}],\\\"i\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"-\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"1\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"]\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"{\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"      \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token comment\\\",\\\"children\\\":\\\"// arr는 어느 방향으로든 정렬이 되어있기 때문에 swap할 두 값의 값이 같다면\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"      \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token comment\\\",\\\"children\\\":\\\"// 더 이상 swap을 할 필요가 없다.\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"      \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword control-flow\\\",\\\"children\\\":\\\"break\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"    \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"}\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"    \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword\\\",\\\"children\\\":\\\"const\\\"}],\\\" temp \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" arr\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"[\\\"}],\\\"i\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"]\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"    arr\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"[\\\"}],\\\"i\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"]\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" arr\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"[\\\"}],\\\"arr\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\".\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token property-access\\\",\\\"children\\\":\\\"length\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"-\\\"}],\\\"i\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"-\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"1\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"]\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"    arr\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"[\\\"}],\\\"arr\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\".\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token property-access\\\",\\\"children\\\":\\\"length\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"-\\\"}],\\\"i\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"-\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"1\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"]\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" temp\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"}\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"}\\\"}],\\\"\\\\n\\\"]}]]}]}]]}],[\\\"$\\\",\\\"section\\\",null,{\\\"aria-labelledby\\\":\\\"알고리즘-simple\\\",\\\"children\\\":[[\\\"$\\\",\\\"h3\\\",null,{\\\"className\\\":\\\"mt-7 mb-2 text-heading3 font-semibold leading-normal\\\",\\\"id\\\":\\\"알고리즘-simple\\\",\\\"children\\\":[[\\\"$\\\",\\\"$L14\\\",null,{\\\"aria-hidden\\\":\\\"true\\\",\\\"tabIndex\\\":\\\"-1\\\",\\\"href\\\":\\\"#알고리즘-simple\\\",\\\"children\\\":[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"icon icon-link\\\"}]}],\\\"알고리즘 (simple)\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"알고리즘의 순서는 다음과 같다.\\\"}],[\\\"$\\\",\\\"ol\\\",null,{\\\"className\\\":\\\"list-decimal my-4\\\",\\\"children\\\":[\\\"\\\\n\\\",[\\\"$\\\",\\\"li\\\",null,{\\\"className\\\":\\\"text-paragraph font-light leading-normal py-1 ml-6\\\",\\\"children\\\":\\\"minrun의 길이를 결정한다.\\\"}],\\\"\\\\n\\\",[\\\"$\\\",\\\"li\\\",null,{\\\"className\\\":\\\"text-paragraph font-light leading-normal py-1 ml-6\\\",\\\"children\\\":\\\"배열을 minrun을 기준으로 잘라 run을 만든다.\\\"}],\\\"\\\\n\\\",[\\\"$\\\",\\\"li\\\",null,{\\\"className\\\":\\\"text-paragraph font-light leading-normal py-1 ml-6\\\",\\\"children\\\":\\\"run을 병합한다. (1개의 배열이 될 때까지 반복한다)\\\"}],\\\"\\\\n\\\"]}]]}],[\\\"$\\\",\\\"section\\\",null,{\\\"aria-labelledby\\\":\\\"minrun의-크기를-결정하는-방식\\\",\\\"children\\\":[[\\\"$\\\",\\\"h3\\\",null,{\\\"className\\\":\\\"mt-7 mb-2 text-heading3 font-semibold leading-normal\\\",\\\"id\\\":\\\"minrun의-크기를-결정하는-방식\\\",\\\"children\\\":[[\\\"$\\\",\\\"$L14\\\",null,{\\\"aria-hidden\\\":\\\"true\\\",\\\"tabIndex\\\":\\\"-1\\\",\\\"href\\\":\\\"#minrun의-크기를-결정하는-방식\\\",\\\"children\\\":[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"icon icon-link\\\"}]}],\\\"minrun의 크기를 결정하는 방식\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"run의 크기는 배열의 길이에 따라 유동적으로 결정된다.\\\"}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"배열의 원소 수를 N이라고 하자. minrun이 될 수 있는 최대 값을 MAX_MINRUN이라고 하겠다.\\\\nN \\u003c MAX_MINRUN이라면 minrun값은 N이 된다. 즉, run을 나누지 않는다. 대신 배열을 binary insertion sort한다. 앞서 언급했듯, 작은 배열에선 삽입정렬이 더 효율적이기 때문이다.\\\"}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"Merge Sort에선 Merge(병합)해야하는 배열의 수가 2의 거듭제곱 (2^x)일때 가장 효율적이다.\\\\n그럴 수 없다면 2의 거듭제곱보다 조금 적을 때 효과적이다. 가장 최악은 2의 거듭제곱보다 조금 더 많은 경우이다.\\\"}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"따라서 run의 수가 2의 거듭제곱이 될 수 있게 minrun의 길이를 결정하는 것이 좋다.\\\"}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"예를 들어보자, N=2112, run의 길이는 32라고 하자.\\\\nrun의 개수는 2112/32 = 66개가 나온다.\\\"}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":[\\\"66개의 run들을 병합하는 과정을 보자. 각 병합에는 최악의 경우 \\\",[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\\\",\\\"children\\\":\\\"2 * (run의 길이) - 1\\\"}],\\\" 번의 비교가 일어난다. 최악의 경우를 따져보자.\\\"]}],[\\\"$\\\",\\\"ol\\\",null,{\\\"className\\\":\\\"list-decimal my-4\\\",\\\"children\\\":[\\\"\\\\n\\\",[\\\"$\\\",\\\"li\\\",null,{\\\"className\\\":\\\"text-paragraph font-light leading-normal py-1 ml-6\\\",\\\"children\\\":\\\"32길이의 run을 33번 병합해야 한다. 63 * 33번의 비교가 발생했다. (64길이 33개의 run이 남았다)\\\"}],\\\"\\\\n\\\",[\\\"$\\\",\\\"li\\\",null,{\\\"className\\\":\\\"text-paragraph font-light leading-normal py-1 ml-6\\\",\\\"children\\\":\\\"64길이의 run을 16번 병합해야 한다. 127 * 16번의 비교가 발생했다. (128길이 16개, 64길이 1개의 run이 남았다)\\\"}],\\\"\\\\n\\\",[\\\"$\\\",\\\"li\\\",null,{\\\"className\\\":\\\"text-paragraph font-light leading-normal py-1 ml-6\\\",\\\"children\\\":\\\"128길이의 run과 64길이의 run을 병합한다. 128 + 64 - 1번의 비교가 발생했다. (128길이 15개, 192길이 1개의 run이 남았다)\\\"}],\\\"\\\\n\\\",[\\\"$\\\",\\\"li\\\",null,{\\\"className\\\":\\\"text-paragraph font-light leading-normal py-1 ml-6\\\",\\\"children\\\":\\\"128길이의 run을 7번 병합해야 한다. 255 * 7번의 비교가 발생했다. (256길이 7개, 192길이 1개, 128길이 1개의 run이 남았다)\\\"}],\\\"\\\\n\\\",[\\\"$\\\",\\\"li\\\",null,{\\\"className\\\":\\\"text-paragraph font-light leading-normal py-1 ml-6\\\",\\\"children\\\":\\\"192길이의 run 1개와 128길이의 run을 병합한다. 192 + 128 - 1번의 비교가 발생했다. (256길이 7개, 320길이 1개의 run이 남았다)\\\"}],\\\"\\\\n\\\",[\\\"$\\\",\\\"li\\\",null,{\\\"className\\\":\\\"text-paragraph font-light leading-normal py-1 ml-6\\\",\\\"children\\\":\\\"256길이의 run을 3번 병합해야 한다. 511 * 3번의 비교가 발생했다. (512길이 3개, 320길이 1개, 256길이 1개의 run이 남았다)\\\"}],\\\"\\\\n\\\",[\\\"$\\\",\\\"li\\\",null,{\\\"className\\\":\\\"text-paragraph font-light leading-normal py-1 ml-6\\\",\\\"children\\\":\\\"320길이의 run 1개와 256길이의 run을 병합한다. 320 + 256 - 1번의 비교가 발생했다. (512길이 3개, 576길이 1개의 run이 남았다)\\\"}],\\\"\\\\n\\\",[\\\"$\\\",\\\"li\\\",null,{\\\"className\\\":\\\"text-paragraph font-light leading-normal py-1 ml-6\\\",\\\"children\\\":\\\"512길이의 run을 1번 병합해야 한다. 1023번의 비교가 발생했다. (1024길이 1개, 576길이 1개, 512길이 1개의 run이 남았다)\\\"}],\\\"\\\\n\\\",[\\\"$\\\",\\\"li\\\",null,{\\\"className\\\":\\\"text-paragraph font-light leading-normal py-1 ml-6\\\",\\\"children\\\":\\\"576길이의 run 1개와 512길이의 run을 병합한다. 1088번의 비교가 발생했다. (1088길이 1개, 1024길이 1개의 run이 남았다)\\\"}],\\\"\\\\n\\\",[\\\"$\\\",\\\"li\\\",null,{\\\"className\\\":\\\"text-paragraph font-light leading-normal py-1 ml-6\\\",\\\"children\\\":\\\"1088길이의 run 1개와 1024길이의 run을 병합한다. 2111번의 비교가 발생했다. (병합 완료)\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":[\\\"모두 \\\",[\\\"$\\\",\\\"strong\\\",null,{\\\"className\\\":\\\"font-medium\\\",\\\"children\\\":\\\"12736\\\"}],\\\"번의 비교가 발생한다.\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"하지만 run의 길이가 33이라면 어떨까?\\\\nrun의 개수는 2112/33 = 64개가 나온다.\\\"}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"같은 방식으로 병합을 진행해 보자.\\\"}],[\\\"$\\\",\\\"ol\\\",null,{\\\"className\\\":\\\"list-decimal my-4\\\",\\\"children\\\":[\\\"\\\\n\\\",[\\\"$\\\",\\\"li\\\",null,{\\\"className\\\":\\\"text-paragraph font-light leading-normal py-1 ml-6\\\",\\\"children\\\":\\\"33길이의 run을 32번 병합해야 한다. 65 * 32번의 비교가 발생했다.\\\"}],\\\"\\\\n\\\",[\\\"$\\\",\\\"li\\\",null,{\\\"className\\\":\\\"text-paragraph font-light leading-normal py-1 ml-6\\\",\\\"children\\\":\\\"66길이의 run을 16번 병합해야 한다. 131 * 16번의 비교가 발생했다.\\\"}],\\\"\\\\n\\\",[\\\"$\\\",\\\"li\\\",null,{\\\"className\\\":\\\"text-paragraph font-light leading-normal py-1 ml-6\\\",\\\"children\\\":\\\"132길이의 run을 8번 병합해야 한다. 263 * 8번의 비교가 발생했다.\\\"}],\\\"\\\\n\\\",[\\\"$\\\",\\\"li\\\",null,{\\\"className\\\":\\\"text-paragraph font-light leading-normal py-1 ml-6\\\",\\\"children\\\":\\\"264길이의 run을 4번 병합해야 한다. 527 * 4번의 비교가 발생했다.\\\"}],\\\"\\\\n\\\",[\\\"$\\\",\\\"li\\\",null,{\\\"className\\\":\\\"text-paragraph font-light leading-normal py-1 ml-6\\\",\\\"children\\\":\\\"528길이의 run을 2번 병합해야 한다. 1055 * 2번의 비교가 발생했다.\\\"}],\\\"\\\\n\\\",[\\\"$\\\",\\\"li\\\",null,{\\\"className\\\":\\\"text-paragraph font-light leading-normal py-1 ml-6\\\",\\\"children\\\":\\\"1056길이의 run을 1번 병합해야 한다. 2111 * 1번의 비교가 발생했다.\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":[\\\"모두 \\\",[\\\"$\\\",\\\"strong\\\",null,{\\\"className\\\":\\\"font-medium\\\",\\\"children\\\":\\\"12609\\\"}],\\\"번의 비교가 발생한다.\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"즉, run의 길이가 길어지더라도 run의 개수가 2의 거듭제곱과 일치하면 더 적은 비교가 발생한다.\\\\nrun의 개수가 2의 거듭제곱보다 조금 많을 때 최악의 경우가 발생한다.\\\"}],[\\\"$\\\",\\\"blockquote\\\",null,{\\\"className\\\":\\\"my-4 border-l-4 border-primary p-6 bg-gray-100 text-gray-700 [\\u0026_*:first-child]:mt-0 [\\u0026_*:last-child]:mb-0\\\",\\\"children\\\":[\\\"\\\\n\\\",[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"run의 개수가 2의 거듭제곱과 같다면 효율적이다.\\\\nrun의 개수가 2의 거듭제곱보다 조금 클 때 비효율적이다.\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":[\\\"따라서 N / minrun이 2의 거듭제곱이 되는 minrun을 선택하고, 그런 minrun을 선택할 수 없다면 2의 거듭제곱에 가깝지만 엄격하게 2의 거듭제곱보다 작아지도록 \\\",[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\\\",\\\"children\\\":\\\"MAX_MINRUN / 2 ~ MAX_MINRUN\\\"}],\\\" 사이의 값 중에서 minrun을 선택한다.\\\\n예를 들어 MAX_MINRUN이 64라면 32 ~ 64중에 minrun을 선택한다.\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"Timsort에선 실제로 MAX_MINRUN을 64로 잡는다. MAX_MINRUN이 8이면 함수 호출이 너무 많아 오버헤드가 더 크고 256이면 binary insertion sort가 느려 마찬가지로 영향을 주는 것을 확인했고, 최종적으로 32를 최적이라 생각했지만, 2112길이의 배열 예시처럼 2의 거듭제곱을 만들 수 있도록 32보다 큰 값을 허용하는 것이 좋다고 판단했기 때문이다.\\\"}]]}],[\\\"$\\\",\\\"section\\\",null,{\\\"aria-labelledby\\\":\\\"insertion-sort를-이용하는-이유\\\",\\\"children\\\":[[\\\"$\\\",\\\"h3\\\",null,{\\\"className\\\":\\\"mt-7 mb-2 text-heading3 font-semibold leading-normal\\\",\\\"id\\\":\\\"insertion-sort를-이용하는-이유\\\",\\\"children\\\":[[\\\"$\\\",\\\"$L14\\\",null,{\\\"aria-hidden\\\":\\\"true\\\",\\\"tabIndex\\\":\\\"-1\\\",\\\"href\\\":\\\"#insertion-sort를-이용하는-이유\\\",\\\"children\\\":[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"icon icon-link\\\"}]}],\\\"Insertion sort를 이용하는 이유\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"Insertion sort(삽입 정렬)는 언뜻 보면 n^2의 시간복잡도를 가져 느리다고 생각할 수 있다. 하지만 앞서 Quicksort에서 설명했듯, 작은 길이 배열에 대해선 2번의 재귀 호출이 일어나는 Merge Sort보다 참조 지역성 원리의 수혜를 아주 잘 누리는 Insertion sort가 더 효율적이다.\\\"}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"특히 배열이 이미 어느 정도 정렬되어 있으면 Insertion Sort는 더욱 효과적으로 된다. Insertion Sort는 최선의 경우 O(n)만큼의 복잡도를 갖기 때문이다.\\\"}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"여기에 Binary Insertion sort를 사용하면 원소가 삽입될 위치를 O(nlogn)만에 찾도록 더 최적화할 수 있다.\\\"}]]}],[\\\"$\\\",\\\"section\\\",null,{\\\"aria-labelledby\\\":\\\"minrun를-기준으로-run-만들기\\\",\\\"children\\\":[[\\\"$\\\",\\\"h3\\\",null,{\\\"className\\\":\\\"mt-7 mb-2 text-heading3 font-semibold leading-normal\\\",\\\"id\\\":\\\"minrun를-기준으로-run-만들기\\\",\\\"children\\\":[[\\\"$\\\",\\\"$L14\\\",null,{\\\"aria-hidden\\\":\\\"true\\\",\\\"tabIndex\\\":\\\"-1\\\",\\\"href\\\":\\\"#minrun를-기준으로-run-만들기\\\",\\\"children\\\":[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"icon icon-link\\\"}]}],\\\"minrun를 기준으로 run 만들기\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"주어진 배열의 길이로부터 minrun을 결정했다. 이제 minrun에 맞춰 배열을 자른다.\\\\n앞서 minrun은 32~64 사이의 값을 사용한다고 했지만, 이해를 위해 minrun의 값을 4로 잡자.\\\"}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":[\\\"$\\\",\\\"$L12\\\",null,{\\\"className\\\":\\\"object-cover rounded-md mx-auto my-12 w-full max-w-[704px]\\\",\\\"src\\\":\\\"/next-blog/posts/how-does-v8-array-sort-work/images/find_minrun1.jpg\\\",\\\"alt\\\":\\\"find minrun 1\\\",\\\"width\\\":704,\\\"height\\\":300}]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"먼저 감소하는 부분수열 (7,4)를 찾았다. 하지만 minrun의 길이 4보다 짧기 때문에 뒤의 2개 수를 더 포함해 Binary Insertion Sort를 수행한다.\\\"}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":[\\\"$\\\",\\\"$L12\\\",null,{\\\"className\\\":\\\"object-cover rounded-md mx-auto my-12 w-full max-w-[704px]\\\",\\\"src\\\":\\\"/next-blog/posts/how-does-v8-array-sort-work/images/find_minrun2.jpg\\\",\\\"alt\\\":\\\"find minrun 2\\\",\\\"width\\\":704,\\\"height\\\":300}]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"이로써 minrun을 만족하는 첫 번째 run을 만들었다.\\\\n다음 run을 만들어보자.\\\"}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":[\\\"$\\\",\\\"$L12\\\",null,{\\\"className\\\":\\\"object-cover rounded-md mx-auto my-12 w-full max-w-[704px]\\\",\\\"src\\\":\\\"/next-blog/posts/how-does-v8-array-sort-work/images/find_minrun3.jpg\\\",\\\"alt\\\":\\\"find minrun 3\\\",\\\"width\\\":704,\\\"height\\\":300}]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"마찬가지로 감소하는 길이 3인 부분 수열 (8,6,2)를 찾았다. 마지막 원소를 추가해 Binary Insertion Sort를 수행한다.\\\"}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":[\\\"$\\\",\\\"$L12\\\",null,{\\\"className\\\":\\\"object-cover rounded-md mx-auto my-12 w-full max-w-[704px]\\\",\\\"src\\\":\\\"/next-blog/posts/how-does-v8-array-sort-work/images/find_minrun4.jpg\\\",\\\"alt\\\":\\\"find minrun 4\\\",\\\"width\\\":704,\\\"height\\\":300}]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"2번째로 생성한 run은 minrun 길이는 만족했지만, run은 길수록 좋다. 따라서 뒤에 붙은 원소들을 포함해도 감소/증가하는 부분 수열임을 만족한다면 생성한 run에 추가한다.\\\"}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"앞선 run에선 (10)을 포함할 수 없었다. 감소하는 run이었기 때문이다.\\\\n이번 run에선 뒤의 원소 (1)을 붙여도 여전히 감소하는 부분 수열을 만족하기 때문에 (1)을 run에 추가한다.\\\"}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":[\\\"$\\\",\\\"$L12\\\",null,{\\\"className\\\":\\\"object-cover rounded-md mx-auto my-12 w-full max-w-[704px]\\\",\\\"src\\\":\\\"/next-blog/posts/how-does-v8-array-sort-work/images/find_minrun5.jpg\\\",\\\"alt\\\":\\\"find minrun 5\\\",\\\"width\\\":704,\\\"height\\\":300}]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"마지막 원소는 합칠 수 있는 원소가 더 이상 없기 때문에 그 자체로 run이 된다.\\\"}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":[\\\"$\\\",\\\"$L12\\\",null,{\\\"className\\\":\\\"object-cover rounded-md mx-auto my-12 w-full max-w-[704px]\\\",\\\"src\\\":\\\"/next-blog/posts/how-does-v8-array-sort-work/images/find_minrun6.jpg\\\",\\\"alt\\\":\\\"find minrun 6\\\",\\\"width\\\":704,\\\"height\\\":300}]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"이렇게 해서 배열은 마지막 run을 제외하고 minrun과 같거나 더 긴 run들로 구성되었다.\\\\n이제 이들을 merge하면 된다.\\\"}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"여기서 잠깐, 눈치 챘는지 모르겠지만, TimSort는 일반적인 MergeSort와 달리 재귀가 아닌 반복문을 이용해 구현한다. run을 생성하는 과정은 반복문이 이용된다. 이 덕분에 call stack overflow가 발생하지 않는 점도 최적화 포인트이다.\\\"}]]}],[\\\"$\\\",\\\"section\\\",null,{\\\"aria-labelledby\\\":\\\"run을-병합하기\\\",\\\"children\\\":[[\\\"$\\\",\\\"h3\\\",null,{\\\"className\\\":\\\"mt-7 mb-2 text-heading3 font-semibold leading-normal\\\",\\\"id\\\":\\\"run을-병합하기\\\",\\\"children\\\":[[\\\"$\\\",\\\"$L14\\\",null,{\\\"aria-hidden\\\":\\\"true\\\",\\\"tabIndex\\\":\\\"-1\\\",\\\"href\\\":\\\"#run을-병합하기\\\",\\\"children\\\":[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"icon icon-link\\\"}]}],\\\"run을 병합하기\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"Merge Sort는 병합할 때 비슷한 길이의 두 배열을 Merge하는 것이 더 효율적이다.\\\"}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"길이 m,h인 두 배열을 Merge할 때 최악의 경우 두 배열을 모두 순회하며 비교해야하기 때문에 m+h-1 만큼의 비용이 든다.\\\"}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":[\\\"$\\\",\\\"$L12\\\",null,{\\\"className\\\":\\\"object-cover rounded-md mx-auto my-12 w-full max-w-[704px]\\\",\\\"src\\\":\\\"/next-blog/posts/how-does-v8-array-sort-work/images/merge_compare.jpg\\\",\\\"alt\\\":\\\"merge compare\\\",\\\"width\\\":704,\\\"height\\\":300}]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"5개의 원소를 병합하는 과정을 거칠 때를 예로 들어 보자. 앞의 배열부터 순서대로 병합을 진행한다고 하자. 이렇게 되면 큰 배열과 작은 배열을 연속적으로 병합하는 형태가 될 것이다.\\\\n이때 5개의 원소를 모두 병합하는데 들어가는 비용은 1 + 2 + 3 + 4 = 10이다.\\\"}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"반면 작은 길이 배열을 먼저 병합하는 경우 모든 원소를 병합하는 비용은 1 + 1 + 2 + 4 = 8이다.\\\"}],[\\\"$\\\",\\\"blockquote\\\",null,{\\\"className\\\":\\\"my-4 border-l-4 border-primary p-6 bg-gray-100 text-gray-700 [\\u0026_*:first-child]:mt-0 [\\u0026_*:last-child]:mb-0\\\",\\\"children\\\":[\\\"\\\\n\\\",[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"비슷한 길이의 두 배열을 Merge하는 것이 더 효율적이다.\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"따라서 Timsort도 비슷한 길이의 배열을 merge할 수 있도록 다음의 방식으로 run들을 병합한다.\\\"}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":[\\\"$\\\",\\\"$L12\\\",null,{\\\"className\\\":\\\"object-cover rounded-md mx-auto my-12 w-full max-w-[704px]\\\",\\\"src\\\":\\\"/next-blog/posts/how-does-v8-array-sort-work/images/merge_criteria.jpg\\\",\\\"alt\\\":\\\"merge_criteria\\\",\\\"width\\\":704,\\\"height\\\":300}]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"run을 생성할 때마다 Stack에 추가한다.\\\"}],[\\\"$\\\",\\\"ol\\\",null,{\\\"className\\\":\\\"list-decimal my-4\\\",\\\"children\\\":[\\\"\\\\n\\\",[\\\"$\\\",\\\"li\\\",null,{\\\"className\\\":\\\"text-paragraph font-light leading-normal py-1 ml-6\\\",\\\"children\\\":\\\"스택의 상위 3개 run을 확인한다. 각각 A, B, C라고 하겠다.\\\"}],\\\"\\\\n\\\",[\\\"$\\\",\\\"li\\\",null,{\\\"className\\\":\\\"text-paragraph font-light leading-normal py-1 ml-6\\\",\\\"children\\\":\\\"각 run의 길이는 |A|,|B|,|C|라고 하겠다.\\\"}],\\\"\\\\n\\\",[\\\"$\\\",\\\"li\\\",null,{\\\"className\\\":\\\"text-paragraph font-light leading-normal py-1 ml-6\\\",\\\"children\\\":[\\\"다음의 조건을 만족하지 않으면 B를 A와 C 중 짧은 쪽과 병합한다.\\\",\\\"\\\\n\\\",[\\\"$\\\",\\\"ol\\\",null,{\\\"className\\\":\\\"list-decimal my-4\\\",\\\"children\\\":[\\\"\\\\n\\\",[\\\"$\\\",\\\"li\\\",null,{\\\"className\\\":\\\"text-paragraph font-light leading-normal py-1 ml-6\\\",\\\"children\\\":\\\"|B|가 |A|보다 길다.\\\"}],\\\"\\\\n\\\",[\\\"$\\\",\\\"li\\\",null,{\\\"className\\\":\\\"text-paragraph font-light leading-normal py-1 ml-6\\\",\\\"children\\\":\\\"|C|가 |A| + |B| 보다 길다.\\\"}],\\\"\\\\n\\\"]}],\\\"\\\\n\\\"]}],\\\"\\\\n\\\",[\\\"$\\\",\\\"li\\\",null,{\\\"className\\\":\\\"text-paragraph font-light leading-normal py-1 ml-6\\\",\\\"children\\\":\\\"조건을 만족할 때까지 2를 반복한다.\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"이렇게 하면 결과적으로 다음과 같은 Stack을 얻을 수 있다.\\\"}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":[\\\"$\\\",\\\"$L12\\\",null,{\\\"className\\\":\\\"object-cover rounded-md mx-auto my-12 w-full max-w-[704px]\\\",\\\"src\\\":\\\"/next-blog/posts/how-does-v8-array-sort-work/images/fibonacci.jpg\\\",\\\"alt\\\":\\\"fibonacci runstack\\\",\\\"width\\\":704,\\\"height\\\":300}]}],[\\\"$\\\",\\\"ul\\\",null,{\\\"className\\\":\\\"list-disc my-4\\\",\\\"children\\\":[\\\"\\\\n\\\",[\\\"$\\\",\\\"li\\\",null,{\\\"className\\\":\\\"text-paragraph font-light leading-normal py-1 ml-6\\\",\\\"children\\\":\\\"A + B \\u003c C\\\"}],\\\"\\\\n\\\",[\\\"$\\\",\\\"li\\\",null,{\\\"className\\\":\\\"text-paragraph font-light leading-normal py-1 ml-6\\\",\\\"children\\\":\\\"B + C \\u003c D\\\"}],\\\"\\\\n\\\",[\\\"$\\\",\\\"li\\\",null,{\\\"className\\\":\\\"text-paragraph font-light leading-normal py-1 ml-6\\\",\\\"children\\\":\\\"C + D \\u003c E\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"이 스택은 마치 피보나치의 수처럼 생겼다.\\\"}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"이 스택을 위에서부터 순서대로 병합을 하면 비슷한 길이의 run들을 병합할 수 있다.\\\\n또한 스택에 원소들을 적게 유지할 수 있다. 피보나치의 수를 1부터 38까지 전부 더하면 1억을 좀 넘는 값이 나온다. 즉, 이러한 형태의 스택은 1억 개가 넘는 원소를 스택에 38개의 원소로 담고 있을 수 있다.\\\"}]]}],[\\\"$\\\",\\\"section\\\",null,{\\\"aria-labelledby\\\":\\\"run-병합-최적화하기---메모리-최적화\\\",\\\"children\\\":[[\\\"$\\\",\\\"h3\\\",null,{\\\"className\\\":\\\"mt-7 mb-2 text-heading3 font-semibold leading-normal\\\",\\\"id\\\":\\\"run-병합-최적화하기---메모리-최적화\\\",\\\"children\\\":[[\\\"$\\\",\\\"$L14\\\",null,{\\\"aria-hidden\\\":\\\"true\\\",\\\"tabIndex\\\":\\\"-1\\\",\\\"href\\\":\\\"#run-병합-최적화하기---메모리-최적화\\\",\\\"children\\\":[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"icon icon-link\\\"}]}],\\\"run 병합 최적화하기 - 메모리 최적화\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"길이가 m,h인 두 run M,H를 병합할 때 우리는 (m+h)*2만큼의 메모리가 필요하다는 것을 알고 있다.\\\\n하지만 실은 간단한 최적화를 통해 2m + h (m \\u003c h)만큼의 메모리를 사용하도록 개선할 수 있다.\\\"}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":[\\\"$\\\",\\\"$L12\\\",null,{\\\"className\\\":\\\"object-cover rounded-md mx-auto my-12 w-full max-w-[704px]\\\",\\\"src\\\":\\\"/next-blog/posts/how-does-v8-array-sort-work/images/merge_optimization.jpg\\\",\\\"alt\\\":\\\"merge optimization\\\",\\\"width\\\":704,\\\"height\\\":300}]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"위와 같은 run H와 M이 있다고 하자. (m \\u003c h)\\\"}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"H 앞에 M을 복사해 붙여 넣는다.\\\"}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":[\\\"$\\\",\\\"$L12\\\",null,{\\\"className\\\":\\\"object-cover rounded-md mx-auto my-12 w-full max-w-[704px]\\\",\\\"src\\\":\\\"/next-blog/posts/how-does-v8-array-sort-work/images/merge_optimization2.jpg\\\",\\\"alt\\\":\\\"merge optimization 2\\\",\\\"width\\\":704,\\\"height\\\":300}]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"이제 M의 시작 지점을 i, H의 시작 지점을 j로 두고 각 i와 j를 증가시키며 M의 복사본 + H 배열에 덮어쓰는 식으로 merge를 수행하면 된다.\\\\ni와 j 이전 인덱스는 확인할 필요가 없기 때문에 이러한 전략이 가능하다.\\\"}]]}],[\\\"$\\\",\\\"section\\\",null,{\\\"aria-labelledby\\\":\\\"run-병합-최적화하기---검사할-필요가-없는-지점-찾기\\\",\\\"children\\\":[[\\\"$\\\",\\\"h3\\\",null,{\\\"className\\\":\\\"mt-7 mb-2 text-heading3 font-semibold leading-normal\\\",\\\"id\\\":\\\"run-병합-최적화하기---검사할-필요가-없는-지점-찾기\\\",\\\"children\\\":[[\\\"$\\\",\\\"$L14\\\",null,{\\\"aria-hidden\\\":\\\"true\\\",\\\"tabIndex\\\":\\\"-1\\\",\\\"href\\\":\\\"#run-병합-최적화하기---검사할-필요가-없는-지점-찾기\\\",\\\"children\\\":[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"icon icon-link\\\"}]}],\\\"run 병합 최적화하기 - 검사할 필요가 없는 지점 찾기\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":[\\\"$\\\",\\\"$L12\\\",null,{\\\"className\\\":\\\"object-cover rounded-md mx-auto my-12 w-full max-w-[704px]\\\",\\\"src\\\":\\\"/next-blog/posts/how-does-v8-array-sort-work/images/merge_optimization3.jpg\\\",\\\"alt\\\":\\\"merge optimization 3\\\",\\\"width\\\":704,\\\"height\\\":300}]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"M의 최댓값(즉 M의 마지막 원소)과 최솟값(M의 첫 번째 원소)가 H안의 어디에 위치하는지 확인하면 그 이후는 병합을 수행하지 않아도 된다.\\\\n위 이미지에서 M의 최댓값은 6이며 H[3] = 7보다 작다. 따라서 j가 k(=3)위치에 도착했다면 M[i] ~ M[M.length-1]까지의 값과 H[j] ~ H[H.length-1]값은 비교 없이 배열에 추가해 주면 된다.\\\"}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"M의 최댓값, 최솟값이 H 안에서 어디 위치하는지는 Binary Search로 찾으면 된다.\\\"}]]}],[\\\"$\\\",\\\"section\\\",null,{\\\"aria-labelledby\\\":\\\"run-병합-최적화하기---galloping-모드\\\",\\\"children\\\":[[\\\"$\\\",\\\"h3\\\",null,{\\\"className\\\":\\\"mt-7 mb-2 text-heading3 font-semibold leading-normal\\\",\\\"id\\\":\\\"run-병합-최적화하기---galloping-모드\\\",\\\"children\\\":[[\\\"$\\\",\\\"$L14\\\",null,{\\\"aria-hidden\\\":\\\"true\\\",\\\"tabIndex\\\":\\\"-1\\\",\\\"href\\\":\\\"#run-병합-최적화하기---galloping-모드\\\",\\\"children\\\":[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"icon icon-link\\\"}]}],\\\"run 병합 최적화하기 - Galloping 모드\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":[\\\"$\\\",\\\"$L12\\\",null,{\\\"className\\\":\\\"object-cover rounded-md mx-auto my-12 w-full max-w-[704px]\\\",\\\"src\\\":\\\"/next-blog/posts/how-does-v8-array-sort-work/images/galloping1.jpg\\\",\\\"alt\\\":\\\"galloping1\\\",\\\"width\\\":704,\\\"height\\\":300}]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"앞선 예시에서 H를 좀 더 확장해 j와 k 사이에 많은 원소들이 있다고 치자. M[i] 원소를 삽입하기 전까지 H[j]에서부터 6을 발견할 때까지 j와 k 사이를 순회해야한다.\\\\n\\\\\\\"1개씩 모두 순회하지 않고 중간중간을 생략해 보자!\\\\\\\"가 Galloping의 아이디어이다.\\\"}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"비교할 위치를 2^n씩 건너뛰며 검사한다. 예를 들어 처음 H[1]과 M[1]을 비교했다면 그 다음은 H[2], H[4], H[8]... 형식으로 비교할 index를 증가시킨다.\\\\n만약 H[8]과 비교해도 M[1]이 더 크다면 H[1] ~ H[8]은 M[1]보다 작은 값이니 H[1] ~ H[8]을 비교없이 merge하면 된다. 만약 M[1]이 H[16]보다 작다면 다시 H[8]로 돌아가 index를 1씩 증가시키며 원소를 비교한다.\\\"}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":[\\\"Galloping은 꽤 효율적으로 보이지만, Galloping이 비효율적인 구간도 있다.\\\\n일반적으로 H[0] ~ H[i]까지의 값이 M[0]보다 작을 때 선형적으로 i를 찾게되면 \\\",[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\\\",\\\"children\\\":\\\"i+1\\\"}],\\\"번의 비교가 발생하지만, Galloping을 이용하면 \\\",[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\\\",\\\"children\\\":\\\"2 * floor(log(i)) + 2\\\"}],\\\" 번의 비교가 필요하다.\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"따라서 i가 6보다 크거나 같아지는 순간부터 Galloping이 효율적이게 된다. 따라서 선형 비교를 할지 Galloping을 할지 적절한 전략을 세우는 것이 필요하다. (선형비교가 3번 이상 일어나면 Galloping모드로 치환하는 등)\\\"}]]}],[\\\"$\\\",\\\"section\\\",null,{\\\"aria-labelledby\\\":\\\"알고리즘-detail\\\",\\\"children\\\":[[\\\"$\\\",\\\"h3\\\",null,{\\\"className\\\":\\\"mt-7 mb-2 text-heading3 font-semibold leading-normal\\\",\\\"id\\\":\\\"알고리즘-detail\\\",\\\"children\\\":[[\\\"$\\\",\\\"$L14\\\",null,{\\\"aria-hidden\\\":\\\"true\\\",\\\"tabIndex\\\":\\\"-1\\\",\\\"href\\\":\\\"#알고리즘-detail\\\",\\\"children\\\":[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"icon icon-link\\\"}]}],\\\"알고리즘 (detail)\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"다시 알고리즘을 세분화하여 다시 작성해 보자.\\\"}],[\\\"$\\\",\\\"ol\\\",null,{\\\"className\\\":\\\"list-decimal my-4\\\",\\\"children\\\":[\\\"\\\\n\\\",[\\\"$\\\",\\\"li\\\",null,{\\\"className\\\":\\\"text-paragraph font-light leading-normal py-1 ml-6\\\",\\\"children\\\":[\\\"minrun을 찾는다. (\\\",[\\\"$\\\",\\\"$L14\\\",null,{\\\"href\\\":\\\"https://github.com/python/cpython/blob/main/Objects/listsort.txt\\\",\\\"children\\\":\\\"listsort.txt\\\"}],\\\"의 313줄 참고)\\\"]}],\\\"\\\\n\\\",[\\\"$\\\",\\\"li\\\",null,{\\\"className\\\":\\\"text-paragraph font-light leading-normal py-1 ml-6\\\",\\\"children\\\":[\\\"배열의 앞부분부터 run을 생성한다.\\\",\\\"\\\\n\\\",[\\\"$\\\",\\\"ol\\\",null,{\\\"className\\\":\\\"list-decimal my-4\\\",\\\"children\\\":[\\\"\\\\n\\\",[\\\"$\\\",\\\"li\\\",null,{\\\"className\\\":\\\"text-paragraph font-light leading-normal py-1 ml-6\\\",\\\"children\\\":\\\"minrun만큼 잘라 binary insertion sort를 수행한다. (처음 두 원소가 증가하는 방향이면 increase 정렬을, 감소하는 방향이면 decrease정렬을 수행한다)\\\"}],\\\"\\\\n\\\",[\\\"$\\\",\\\"li\\\",null,{\\\"className\\\":\\\"text-paragraph font-light leading-normal py-1 ml-6\\\",\\\"children\\\":\\\"그 뒤에 오는 원소들을 run에 합쳐도 증가/감소하는 방향을 유지할 수 있다면 run에 붙인다.\\\"}],\\\"\\\\n\\\"]}],\\\"\\\\n\\\"]}],\\\"\\\\n\\\",[\\\"$\\\",\\\"li\\\",null,{\\\"className\\\":\\\"text-paragraph font-light leading-normal py-1 ml-6\\\",\\\"children\\\":[\\\"생성한 run을 stack에 추가한다.\\\",\\\"\\\\n\\\",[\\\"$\\\",\\\"ol\\\",null,{\\\"className\\\":\\\"list-decimal my-4\\\",\\\"children\\\":[\\\"\\\\n\\\",[\\\"$\\\",\\\"li\\\",null,{\\\"className\\\":\\\"text-paragraph font-light leading-normal py-1 ml-6\\\",\\\"children\\\":\\\"stack의 길이가 3보다 크다면, 스택 상위 3개의 원소(A,B,C)를 다음 조건에 맞는지 확인한다.\\\"}],\\\"\\\\n\\\"]}],\\\"\\\\n\\\",[\\\"$\\\",\\\"ul\\\",null,{\\\"className\\\":\\\"list-disc my-4\\\",\\\"children\\\":[\\\"\\\\n\\\",[\\\"$\\\",\\\"li\\\",null,{\\\"className\\\":\\\"text-paragraph font-light leading-normal py-1 ml-6\\\",\\\"children\\\":\\\"|B| \\u003e |A|\\\"}],\\\"\\\\n\\\",[\\\"$\\\",\\\"li\\\",null,{\\\"className\\\":\\\"text-paragraph font-light leading-normal py-1 ml-6\\\",\\\"children\\\":\\\"[C| \\u003e |A| + |B|\\\"}],\\\"\\\\n\\\"]}],\\\"\\\\n\\\",[\\\"$\\\",\\\"ol\\\",null,{\\\"className\\\":\\\"list-decimal my-4\\\",\\\"start\\\":\\\"2\\\",\\\"children\\\":[\\\"\\\\n\\\",[\\\"$\\\",\\\"li\\\",null,{\\\"className\\\":\\\"text-paragraph font-light leading-normal py-1 ml-6\\\",\\\"children\\\":\\\"조건에 부합하지 않으면 B를 A와 C중 작은 쪽과 병합(merge)한다. 이를 조건에 부합할 때까지 반복한다.\\\"}],\\\"\\\\n\\\"]}],\\\"\\\\n\\\"]}],\\\"\\\\n\\\",[\\\"$\\\",\\\"li\\\",null,{\\\"className\\\":\\\"text-paragraph font-light leading-normal py-1 ml-6\\\",\\\"children\\\":\\\"2번으로 돌아가 다음 run을 생성한다.\\\"}],\\\"\\\\n\\\",[\\\"$\\\",\\\"li\\\",null,{\\\"className\\\":\\\"text-paragraph font-light leading-normal py-1 ml-6\\\",\\\"children\\\":\\\"모든 run 생성을 마치고 Stack에 run이 모두 채워졌다면 스택의 맨 위 원소부터 병합을 수행한다.\\\"}],\\\"\\\\n\\\"]}]]}],[\\\"$\\\",\\\"section\\\",null,{\\\"aria-labelledby\\\":\\\"timsort의-시간복잡도\\\",\\\"children\\\":[[\\\"$\\\",\\\"h3\\\",null,{\\\"className\\\":\\\"mt-7 mb-2 text-heading3 font-semibold leading-normal\\\",\\\"id\\\":\\\"timsort의-시간복잡도\\\",\\\"children\\\":[[\\\"$\\\",\\\"$L14\\\",null,{\\\"aria-hidden\\\":\\\"true\\\",\\\"tabIndex\\\":\\\"-1\\\",\\\"href\\\":\\\"#timsort의-시간복잡도\\\",\\\"children\\\":[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"icon icon-link\\\"}]}],\\\"Timsort의 시간복잡도\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"Insertion Sort의 최선 시간복잡도는 O(n), run을 생성한 결과 run이 1개만 나온 경우 (즉, 이미 정렬된 경우) O(n)의 시간복잡도를 가진다.\\\\n따라서 Timsort의 최선 시간복잡도는 O(n)이다.\\\"}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":\\\"나머지는 사실상 Merge Sort가 진행되는 것과 같기 때문에 최악 시간복잡도와 평균 시간복잡도는 O(nlogn)이다.\\\"}]]}]]}],\\\"\\\\n\\\",[\\\"$\\\",\\\"section\\\",null,{\\\"aria-labelledby\\\":\\\"v8의-torque\\\",\\\"children\\\":[[\\\"$\\\",\\\"h2\\\",null,{\\\"className\\\":\\\"mt-8 mb-3 text-heading2 font-semibold leading-normal\\\",\\\"id\\\":\\\"v8의-torque\\\",\\\"children\\\":[[\\\"$\\\",\\\"$L14\\\",null,{\\\"aria-hidden\\\":\\\"true\\\",\\\"tabIndex\\\":\\\"-1\\\",\\\"href\\\":\\\"#v8의-torque\\\",\\\"children\\\":[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"icon icon-link\\\"}]}],\\\"V8의 Torque\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":[\\\"이 부분은 간단하게만 언급하려고 한다. V8은 Torque라는 V8용 언어를 지원하며, 이 언어를 통해 V8의 JIT 수행에서 미리 컴파일 된 코드를 제공하도록 만들 수 있다.\\\\nV8은 Torque로 기존 js로 작성된 Array#sort를 다시 작성했으며, 이를 통해 속도를 더욱 끌어올렸다. 구체적인 설명은 \\\",[\\\"$\\\",\\\"$L14\\\",null,{\\\"href\\\":\\\"https://v8.dev/blog/array-sort#introducing-v8-torque\\\",\\\"children\\\":\\\"Introducing V8 Torque\\\"}],\\\"를 참고하면 된다.\\\"]}]]}],\\\"\\\\n\\\",[\\\"$\\\",\\\"section\\\",null,{\\\"aria-labelledby\\\":\\\"참고\\\",\\\"children\\\":[[\\\"$\\\",\\\"h2\\\",null,{\\\"className\\\":\\\"mt-8 mb-3 text-heading2 font-semibold leading-normal\\\",\\\"id\\\":\\\"참고\\\",\\\"children\\\":[[\\\"$\\\",\\\"$L14\\\",null,{\\\"aria-hidden\\\":\\\"true\\\",\\\"tabIndex\\\":\\\"-1\\\",\\\"href\\\":\\\"#참고\\\",\\\"children\\\":[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"icon icon-link\\\"}]}],\\\"참고\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":[[\\\"$\\\",\\\"$L14\\\",null,{\\\"href\\\":\\\"https://v8.dev/blog/array-sort\\\",\\\"children\\\":\\\"V8 Blog - array-sort\\\"}],\\\"\\\\n\\\",[\\\"$\\\",\\\"$L14\\\",null,{\\\"href\\\":\\\"https://en.wikipedia.org/wiki/Timsort\\\",\\\"children\\\":\\\"위키피디아 - Timsort\\\"}],\\\"\\\\n\\\",[\\\"$\\\",\\\"$L14\\\",null,{\\\"href\\\":\\\"https://github.com/python/cpython/blob/main/Objects/listsort.txt\\\",\\\"children\\\":\\\"cpython - Timsort\\\"}],\\\"\\\\n\\\",[\\\"$\\\",\\\"$L14\\\",null,{\\\"href\\\":\\\"https://d2.naver.com/helloworld/0315536\\\",\\\"children\\\":\\\"D2 - Timsort에 대해 알아보자\\\"}]]}]]}]],[\\\"$\\\",\\\"$L15\\\",null,{\\\"size\\\":\\\"lg\\\",\\\"shareData\\\":{\\\"title\\\":\\\"Terra Dev Blog - V8의 `Array.sort`는 어떻게 동작하는가?\\\",\\\"text\\\":\\\"$undefined\\\",\\\"url\\\":\\\"/next-blog/posts/how-does-v8-array-sort-work\\\"},\\\"aria-label\\\":\\\"Share this article\\\"}]]}],[\\\"$\\\",\\\"section\\\",null,{\\\"id\\\":\\\"author\\\",\\\"children\\\":[\\\"$\\\",\\\"$L16\\\",null,{}]}],[\\\"$\\\",\\\"section\\\",null,{\\\"children\\\":[[\\\"$\\\",\\\"$Lb\\\",null,{\\\"src\\\":\\\"https://giscus.app/client.js\\\",\\\"data-repo\\\":\\\"dev2820/blog-posts\\\",\\\"data-repo-id\\\":\\\"R_kgDOLQagPA\\\",\\\"data-category\\\":\\\"General\\\",\\\"data-category-id\\\":\\\"DIC_kwDOLQagPM4CjAtl\\\",\\\"data-mapping\\\":\\\"og:title\\\",\\\"data-strict\\\":\\\"0\\\",\\\"data-reactions-enabled\\\":\\\"1\\\",\\\"data-emit-metadata\\\":\\\"0\\\",\\\"data-input-position\\\":\\\"top\\\",\\\"data-theme\\\":\\\"light\\\",\\\"data-lang\\\":\\\"ko\\\",\\\"data-loading\\\":\\\"lazy\\\",\\\"cross-origin\\\":\\\"anonymous\\\",\\\"async\\\":true}],[\\\"$\\\",\\\"div\\\",null,{\\\"className\\\":\\\"giscus w-full min-w-screen-md\\\"}]]}]]}]\\n\"])</script><script>self.__next_f.push([1,\"f:[[\\\"$\\\",\\\"meta\\\",\\\"0\\\",{\\\"name\\\":\\\"viewport\\\",\\\"content\\\":\\\"width=device-width, initial-scale=1\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"1\\\",{\\\"charSet\\\":\\\"utf-8\\\"}],[\\\"$\\\",\\\"title\\\",\\\"2\\\",{\\\"children\\\":\\\"Terra Dev Blog - V8의 `Array.sort`는 어떻게 동작하는가?\\\"}],[\\\"$\\\",\\\"link\\\",\\\"3\\\",{\\\"rel\\\":\\\"canonical\\\",\\\"href\\\":\\\"https://dev2820.github.io/next-blog/how-does-v8-array-sort-work\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"4\\\",{\\\"property\\\":\\\"og:title\\\",\\\"content\\\":\\\"V8의 `Array.sort`는 어떻게 동작하는가?\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"5\\\",{\\\"property\\\":\\\"og:url\\\",\\\"content\\\":\\\"https://dev2820.github.io/next-blog/how-does-v8-array-sort-work\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"6\\\",{\\\"property\\\":\\\"og:locale\\\",\\\"content\\\":\\\"ko_KR\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"7\\\",{\\\"property\\\":\\\"og:image\\\",\\\"content\\\":\\\"https://dev2820.github.io/next-blog/next-blog/posts/how-does-v8-array-sort-work/images/fibonacci.jpg\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"8\\\",{\\\"property\\\":\\\"og:image:width\\\",\\\"content\\\":\\\"800\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"9\\\",{\\\"property\\\":\\\"og:image:height\\\",\\\"content\\\":\\\"600\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"10\\\",{\\\"property\\\":\\\"og:image:alt\\\",\\\"content\\\":\\\"V8의 `Array.sort`는 어떻게 동작하는가?\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"11\\\",{\\\"property\\\":\\\"og:type\\\",\\\"content\\\":\\\"article\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"12\\\",{\\\"name\\\":\\\"twitter:card\\\",\\\"content\\\":\\\"summary_large_image\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"13\\\",{\\\"name\\\":\\\"twitter:title\\\",\\\"content\\\":\\\"V8의 `Array.sort`는 어떻게 동작하는가?\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"14\\\",{\\\"name\\\":\\\"twitter:image\\\",\\\"content\\\":\\\"https://dev2820.github.io/next-blog/next-blog/posts/how-does-v8-array-sort-work/images/fibonacci.jpg\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"15\\\",{\\\"name\\\":\\\"twitter:image:width\\\",\\\"content\\\":\\\"800\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"16\\\",{\\\"name\\\":\\\"twitter:image:height\\\",\\\"content\\\":\\\"600\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"17\\\",{\\\"name\\\":\\\"twitter:image:alt\\\",\\\"content\\\":\\\"V8의 `Array.sort`는 어떻게 동작하는가?\\\"}],[\\\"$\\\",\\\"link\\\",\\\"18\\\",{\\\"rel\\\":\\\"icon\\\",\\\"href\\\":\\\"/next-blog/favicon.ico\\\",\\\"type\\\":\\\"image/x-icon\\\",\\\"sizes\\\":\\\"16x16\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"19\\\",{\\\"name\\\":\\\"next-size-adjust\\\"}]]\\n6:null\\n\"])</script></body></html>",
            "url": "https://dev2820.github.io/next-bloghow-does-v8-array-sort-work",
            "title": "V8의 `Array.sort`는 어떻게 동작하는가?",
            "image": "https:/dev2820.github.io/next-blog/how-does-v8-array-sort-work/images/fibonacci.jpg",
            "date_modified": "2024-04-23T13:57:24.083Z",
            "author": {
                "name": "dev2820",
                "url": "https://dev2820.github.io/next-blog/about"
            },
            "tags": [
                "V8",
                "sort",
                "js"
            ]
        },
        {
            "id": "test-post",
            "content_html": "<!DOCTYPE html><html lang=\"kr\" class=\"__variable_fa65fd __variable_7691e4 scroll-smooth\"><head><meta charSet=\"utf-8\"/><meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"/><link rel=\"preload\" href=\"/next-blog/_next/static/media/3e7b7e3fd4560936-s.p.woff2\" as=\"font\" crossorigin=\"\" type=\"font/woff2\"/><link rel=\"preload\" href=\"/next-blog/_next/static/media/ff840cfebfb63b0c-s.p.woff2\" as=\"font\" crossorigin=\"\" type=\"font/woff2\"/><link rel=\"stylesheet\" href=\"/next-blog/_next/static/css/16077bc16defb9b9.css\" data-precedence=\"next\"/><link rel=\"stylesheet\" href=\"/next-blog/_next/static/css/203da25389b4eeab.css\" data-precedence=\"next\"/><link rel=\"preload\" as=\"script\" fetchPriority=\"low\" href=\"/next-blog/_next/static/chunks/webpack-8f27d743501d147d.js\"/><script src=\"/next-blog/_next/static/chunks/f14ca715-03ac7b40665f0731.js\" async=\"\"></script><script src=\"/next-blog/_next/static/chunks/465-9f8ee17d6a70e147.js\" async=\"\"></script><script src=\"/next-blog/_next/static/chunks/main-app-e31317f2a5bf611e.js\" async=\"\"></script><script src=\"/next-blog/_next/static/chunks/805-a8af350d35fb9160.js\" async=\"\"></script><script src=\"/next-blog/_next/static/chunks/app/posts/%5Bslug%5D/layout-1cf1294e1a2539f4.js\" async=\"\"></script><script src=\"/next-blog/_next/static/chunks/618-f2bb34773a0d24b2.js\" async=\"\"></script><script src=\"/next-blog/_next/static/chunks/app/posts/page-e8c6275c8ebfad50.js\" async=\"\"></script><script src=\"/next-blog/_next/static/chunks/372-b649e69f56e8eb19.js\" async=\"\"></script><script src=\"/next-blog/_next/static/chunks/app/layout-c7fa40d911107206.js\" async=\"\"></script><script src=\"/next-blog/_next/static/chunks/952ad60e-7cdac7b6bf36214c.js\" async=\"\"></script><script src=\"/next-blog/_next/static/chunks/app/posts/%5Bslug%5D/page-e951164d6ad6c144.js\" async=\"\"></script><link rel=\"preload\" href=\"https://giscus.app/client.js\" as=\"script\"/><link rel=\"preload\" href=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/prism.min.js\" as=\"script\"/><link rel=\"preload\" href=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-javascript.min.js\" as=\"script\"/><link rel=\"preload\" href=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-typescript.min.js\" as=\"script\"/><link rel=\"preload\" href=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-jsx.min.js\" as=\"script\"/><link rel=\"preload\" href=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-tsx.min.js\" as=\"script\"/><link rel=\"preload\" href=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-c.min.js\" as=\"script\"/><link rel=\"preload\" href=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/plugins/line-numbers/prism-line-numbers.min.js\" as=\"script\"/><title>Terra Dev Blog - test-post</title><link rel=\"canonical\" href=\"https://dev2820.github.io/next-blog/test-post\"/><meta property=\"og:title\" content=\"test-post\"/><meta property=\"og:url\" content=\"https://dev2820.github.io/next-blog/test-post\"/><meta property=\"og:locale\" content=\"ko_KR\"/><meta property=\"og:image\" content=\"https://dev2820.github.io/next-blog/next-blog/posts/test-post\"/><meta property=\"og:image:width\" content=\"800\"/><meta property=\"og:image:height\" content=\"600\"/><meta property=\"og:image:alt\" content=\"test-post\"/><meta property=\"og:type\" content=\"article\"/><meta name=\"twitter:card\" content=\"summary_large_image\"/><meta name=\"twitter:title\" content=\"test-post\"/><meta name=\"twitter:image\" content=\"https://dev2820.github.io/next-blog/next-blog/posts/test-post\"/><meta name=\"twitter:image:width\" content=\"800\"/><meta name=\"twitter:image:height\" content=\"600\"/><meta name=\"twitter:image:alt\" content=\"test-post\"/><link rel=\"icon\" href=\"/next-blog/favicon.ico\" type=\"image/x-icon\" sizes=\"16x16\"/><meta name=\"next-size-adjust\"/><script src=\"/next-blog/_next/static/chunks/polyfills-78c92fac7aa8fdd8.js\" noModule=\"\"></script></head><body class=\"__className_fa65fd flex flex-col text-gray-800\"><link href=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/plugins/line-numbers/prism-line-numbers.min.css\" rel=\"stylesheet\"/><header class=\"flex flex-row justify-center py-2 items-center self-center w-full max-w-screen-md px-4\"><a href=\"/next-blog\"><img alt=\"Terra&#x27;s Devlog logo\" loading=\"lazy\" width=\"258\" height=\"48\" decoding=\"async\" data-nimg=\"1\" style=\"color:transparent\" src=\"/next-blog/_next/static/media/logo-full.a2c57f51.svg\"/></a><div class=\"flex-1\"></div><nav class=\"\"><menu class=\"flex flex-row gap-8\"><li><a aria-disabled=\"false\" href=\"/next-blog/posts\"><div class=\"cursor-pointer duration-200 font-medium text-primary hover:text-primary\">Posts</div></a></li><li><a aria-disabled=\"true\" href=\"\"><div class=\"duration-200 font-medium cursor-not-allowed text-muted hover:text-muted\">About Me</div></a></li><li><a aria-disabled=\"true\" href=\"\"><div class=\"duration-200 font-medium cursor-not-allowed text-muted hover:text-muted\">Contact</div></a></li></menu></nav></header><main class=\"self-center w-full max-w-screen-md p-4 text-gray-800\"><article class=\"relative\"><header id=\"post-meta\"><h1 class=\"mt-10 mb-4 text-heading1 font-bold leading-normal\" id=\"test-post\">test-post</h1><time dateTime=\"2024-02-06\" aria-label=\"Published on 2024-02-06\">2024-02-06</time> <!-- -->|<!-- --> <time dateTime=\"PT0M\" aria-label=\"Estimated reading time\">0<!-- --> mins</time></header><div id=\"content\" class=\"relative\"><div id=\"table-of-header\" class=\"absolute -right-12 translate-x-full h-full w-52 desktop:block hidden\"><nav class=\"sticky top-24\"><ol><li><a href=\"#whats-new\"><div class=\"text-sm font-light data-[active=&quot;true&quot;]:text-base data-[active=&quot;true&quot;]:font-semibold py-0.5 text-neutral-400 data-[active=&quot;true&quot;]:text-primary duration-200 hover:text-primary pl-4\" data-id=\"#whats-new\">What&#x27;s New</div></a></li></ol></nav></div><section aria-labelledby=\"whats-new\"><h2 class=\"mt-8 mb-3 text-heading2 font-semibold leading-normal\" id=\"whats-new\"><a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" aria-hidden=\"true\" tabindex=\"-1\" href=\"#whats-new\"><span class=\"icon icon-link\"></span></a>What&#x27;s New</h2><pre class=\"rounded-md [&amp;_code]:py-0 [&amp;_code]:px-0 line-numbers language-js\"><code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2 language-js\"><span class=\"code-line\"><span class=\"token keyword\">function</span> <span class=\"token function\">abc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">  <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">&quot;hello world&quot;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">  <span class=\"token keyword\">const</span> a <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">  <span class=\"token keyword\">const</span> b <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\">\n</span><span class=\"code-line\">  <span class=\"token keyword control-flow\">return</span> a <span class=\"token operator\">+</span> b<span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\"><span class=\"token punctuation\">}</span>\n</span></code></pre><p class=\"font-light leading-normal mt-4 mb-2\">테스트 <strong class=\"font-medium\">문자열 ??</strong></p><p class=\"font-light leading-normal mt-4 mb-2\"><img alt=\"nya nya\" loading=\"lazy\" width=\"704\" height=\"300\" decoding=\"async\" data-nimg=\"1\" class=\"object-cover rounded-md mx-auto my-12 w-full max-w-[704px]\" style=\"color:transparent\" src=\"/next-blog/posts/test-post/images/cat-nyan-cat.gif\"/></p><p class=\"font-light leading-normal mt-4 mb-2\">a <em class=\"[img+&amp;]:block [img+&amp;]:text-center [img+&amp;]:text-gray-400 [img+&amp;]:font-thin [img+&amp;]:not-italic [img+&amp;]:text-sm [img+&amp;]:-translate-y-10\">b</em> <strong class=\"font-medium\">c</strong> <del>d</del> <u>underline</u> colored</p><p class=\"font-light leading-normal mt-4 mb-2\"><img alt=\"cat\" loading=\"lazy\" width=\"704\" height=\"300\" decoding=\"async\" data-nimg=\"1\" class=\"object-cover rounded-md mx-auto my-12 w-full max-w-[704px]\" style=\"color:transparent\" src=\"/next-blog/posts/test-post/images/cat.jpg\"/>\n<img alt=\"another cat\" loading=\"lazy\" width=\"704\" height=\"300\" decoding=\"async\" data-nimg=\"1\" class=\"object-cover rounded-md mx-auto my-12 w-full max-w-[704px]\" style=\"color:transparent\" src=\"/next-blog/posts/test-post/images/cat.jpg\"/></p><p class=\"font-light leading-normal mt-4 mb-2\"><code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\">inline code</code></p><p class=\"font-light leading-normal mt-4 mb-2\"><img alt=\"nyan cat\" loading=\"lazy\" width=\"704\" height=\"300\" decoding=\"async\" data-nimg=\"1\" class=\"object-cover rounded-md mx-auto my-12 w-full max-w-[704px]\" style=\"color:transparent\" src=\"/next-blog/posts/test-post/images/cat-nyan-cat.gif\"/></p><ol class=\"list-decimal my-4\">\n<li class=\"text-paragraph font-light leading-normal py-1 ml-6\">ordered<!-- -->\n<ol class=\"list-decimal my-4\">\n<li class=\"text-paragraph font-light leading-normal py-1 ml-6\">nested</li>\n<li class=\"text-paragraph font-light leading-normal py-1 ml-6\">next</li>\n</ol>\n</li>\n</ol><p class=\"font-light leading-normal mt-4 mb-2\"><a class=\"__trds trds-inline-flex trds-items-center trds-justify-start trds-whitespace-nowrap trds-gap-1 trds-transition-colors trds-cursor-pointer trds-underline-offset-4 trds-underline-under trds-decoration-[2px] trds-font-bold hover:trds-underline trds-text-primary-500 active:trds-text-primary-800 visited:trds-text-primary-800 hover:trds-text-primary-700 font-medium\" type=\"link\" href=\"https://www.naver.com\">link to naver</a></p><pre class=\"rounded-md [&amp;_code]:py-0 [&amp;_code]:px-0 line-numbers language-js\"><code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2 language-js\"><span class=\"code-line\"><span class=\"token keyword\">function</span> <span class=\"token function\">abc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n</span><span class=\"code-line\">  <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">&quot;hello world&quot;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span><span class=\"code-line\"><span class=\"token punctuation\">}</span>\n</span></code></pre><blockquote class=\"my-4 border-l-4 border-primary p-6 bg-gray-100 text-gray-700 [&amp;_*:first-child]:mt-0 [&amp;_*:last-child]:mb-0\">\n<p class=\"font-light leading-normal mt-4 mb-2\">test block quotes\nmultiline\n<code class=\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\">code in quotes</code></p>\n</blockquote><table class=\"trds-caption-bottom trds-w-full trds-text-sm\"><thead class=\"trds-text-fg-title trds-font-medium trds-text-left trds-align-middle trds-bg-layer1 trds-border-boundary trds-border-b-[1px] trds-h-11 trds-px-4\"><tr class=\"trds-border-b trds-border-boundary trds-duration-normal trds-transition-[background,color] trds-ease-default hover:trds-bg-layer1 data-selected:trds-bg-layer1\"><th class=\"trds-align-middle trds-h-14 trds-px-4\">Name</th><th class=\"trds-align-middle trds-h-14 trds-px-4\">Age</th><th class=\"trds-align-middle trds-h-14 trds-px-4\">Occupation</th></tr></thead><tbody class=\"[&amp;_tr:last-child]:trds-border-b-0\"><tr class=\"trds-border-b trds-border-boundary trds-duration-normal trds-transition-[background,color] trds-ease-default hover:trds-bg-layer1 data-selected:trds-bg-layer1\"><td class=\"trds-align-middle trds-text-fg-description trds-h-14 trds-px-4\">Alice</td><td class=\"trds-align-middle trds-text-fg-description trds-h-14 trds-px-4\">28</td><td class=\"trds-align-middle trds-text-fg-description trds-h-14 trds-px-4\">Software Engineer</td></tr><tr class=\"trds-border-b trds-border-boundary trds-duration-normal trds-transition-[background,color] trds-ease-default hover:trds-bg-layer1 data-selected:trds-bg-layer1\"><td class=\"trds-align-middle trds-text-fg-description trds-h-14 trds-px-4\">Bob</td><td class=\"trds-align-middle trds-text-fg-description trds-h-14 trds-px-4\">34</td><td class=\"trds-align-middle trds-text-fg-description trds-h-14 trds-px-4\">Data Scientist</td></tr><tr class=\"trds-border-b trds-border-boundary trds-duration-normal trds-transition-[background,color] trds-ease-default hover:trds-bg-layer1 data-selected:trds-bg-layer1\"><td class=\"trds-align-middle trds-text-fg-description trds-h-14 trds-px-4\">Charlie</td><td class=\"trds-align-middle trds-text-fg-description trds-h-14 trds-px-4\">25</td><td class=\"trds-align-middle trds-text-fg-description trds-h-14 trds-px-4\">Designer</td></tr></tbody></table></section><button class=\"__trds __trds button trds-inline-flex trds-justify-center trds-place-items-center trds-whitespace-nowrap trds-rounded-lg trds-text-md trds-font-medium trds-gap-2 trds-transition-colors trds-cursor-pointer disabled:trds-cursor-not-allowed disabled:trds-opacity-50 trds-bg-neutral trds-text-fg-neutral disabled:trds-bg-neutral enabled:hover:trds-bg-neutral-hover enabled:active:trds-bg-neutral-pressed __trds trds-h-11 trds-w-11 trds-px-0 trds-py-0\" type=\"button\" aria-disabled=\"false\" aria-busy=\"false\" aria-label=\"Share this article\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-share\"><path d=\"M4 12v8a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-8\"></path><polyline points=\"16 6 12 2 8 6\"></polyline><line x1=\"12\" x2=\"12\" y1=\"2\" y2=\"15\"></line></svg></button><div data-scope=\"toast\" data-part=\"group\" dir=\"ltr\" tabindex=\"-1\" aria-label=\"bottom Notifications alt+T\" id=\"toast-group:bottom\" data-placement=\"bottom\" data-side=\"bottom\" data-align=\"center\" aria-live=\"polite\" role=\"region\" style=\"position:fixed;pointer-events:none;display:flex;flex-direction:column;--gap:16px;--first-height:0px;z-index:2147483647;align-items:center;bottom:max(env(safe-area-inset-bottom, 0px), 1rem);inset-inline-end:calc(env(safe-area-inset-right, 0px) + 1rem);inset-inline-start:calc(env(safe-area-inset-left, 0px) + 1rem)\"></div></div><section id=\"author\"><div class=\"flex flex-row gap-4 items-center\"><div class=\"__trds trds-animate-shimmer trds-bg-clip-padding-box trds-text-transparent trds-cursor-default trds-pointer-events-none trds-select-none before::trds-invisible after::trds-invisible [&amp;_*]:trds-invisible trds-rounded-lg rounded-full\"><div data-scope=\"avatar\" data-part=\"root\" dir=\"ltr\" id=\"avatar::Rn7obtsra:\" class=\"trds-rounded-full trds-overflow-hidden w-16 h-16\"><img data-scope=\"avatar\" data-part=\"image\" hidden=\"\" dir=\"ltr\" id=\"avatar::Rn7obtsra::image\" data-state=\"hidden\" class=\"trds-bg-muted\"/><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"64\" height=\"64\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-user trds-bg-muted trds-w-full trds-h-full\" data-scope=\"avatar\" data-part=\"fallback\" dir=\"ltr\" id=\"avatar::Rn7obtsra::fallback\" data-state=\"visible\"><path d=\"M19 21v-2a4 4 0 0 0-4-4H9a4 4 0 0 0-4 4v2\"></path><circle cx=\"12\" cy=\"7\" r=\"4\"></circle></svg></div></div><div class=\"text-pretty flex flex-col gap-2\"><div class=\"__trds trds-animate-shimmer trds-bg-clip-padding-box trds-text-transparent trds-cursor-default trds-pointer-events-none trds-select-none before::trds-invisible after::trds-invisible [&amp;_*]:trds-invisible trds-rounded-lg h-fit w-fit\"><strong class=\"inline-block h-6 min-w-36\"> </strong></div><div class=\"__trds trds-animate-shimmer trds-bg-clip-padding-box trds-text-transparent trds-cursor-default trds-pointer-events-none trds-select-none before::trds-invisible after::trds-invisible [&amp;_*]:trds-invisible trds-rounded-lg h-fit w-fit\"><p class=\"whitespace-pre-wrap h-6 min-w-64\"></p></div></div></div></section><section><div class=\"giscus w-full min-w-screen-md\"></div></section></article></main><footer class=\"self-center w-full max-w-screen-md px-4 h-96\"><p>© 2024-<!-- -->2024<!-- --> <!-- -->dev2820<!-- -->. All rights reserved.</p></footer><script src=\"/next-blog/_next/static/chunks/webpack-8f27d743501d147d.js\" async=\"\"></script><script>(self.__next_f=self.__next_f||[]).push([0]);self.__next_f.push([2,null])</script><script>self.__next_f.push([1,\"1:HL[\\\"/next-blog/_next/static/media/3e7b7e3fd4560936-s.p.woff2\\\",\\\"font\\\",{\\\"crossOrigin\\\":\\\"\\\",\\\"type\\\":\\\"font/woff2\\\"}]\\n2:HL[\\\"/next-blog/_next/static/media/ff840cfebfb63b0c-s.p.woff2\\\",\\\"font\\\",{\\\"crossOrigin\\\":\\\"\\\",\\\"type\\\":\\\"font/woff2\\\"}]\\n3:HL[\\\"/next-blog/_next/static/css/16077bc16defb9b9.css\\\",\\\"style\\\"]\\n4:HL[\\\"/next-blog/_next/static/css/203da25389b4eeab.css\\\",\\\"style\\\"]\\n\"])</script><script>self.__next_f.push([1,\"5:I[5726,[],\\\"\\\"]\\n8:I[1699,[],\\\"\\\"]\\na:I[2579,[],\\\"\\\"]\\nb:I[3805,[\\\"805\\\",\\\"static/chunks/805-a8af350d35fb9160.js\\\",\\\"418\\\",\\\"static/chunks/app/posts/%5Bslug%5D/layout-1cf1294e1a2539f4.js\\\"],\\\"\\\"]\\nc:I[9618,[\\\"618\\\",\\\"static/chunks/618-f2bb34773a0d24b2.js\\\",\\\"991\\\",\\\"static/chunks/app/posts/page-e8c6275c8ebfad50.js\\\"],\\\"\\\"]\\nd:I[6210,[\\\"618\\\",\\\"static/chunks/618-f2bb34773a0d24b2.js\\\",\\\"372\\\",\\\"static/chunks/372-b649e69f56e8eb19.js\\\",\\\"185\\\",\\\"static/chunks/app/layout-c7fa40d911107206.js\\\"],\\\"BrandLogo\\\"]\\ne:I[9205,[\\\"618\\\",\\\"static/chunks/618-f2bb34773a0d24b2.js\\\",\\\"372\\\",\\\"static/chunks/372-b649e69f56e8eb19.js\\\",\\\"185\\\",\\\"static/chunks/app/layout-c7fa40d911107206.js\\\"],\\\"GlobalNavigationBar\\\"]\\n10:I[3141,[],\\\"\\\"]\\n9:[\\\"slug\\\",\\\"test-post\\\",\\\"d\\\"]\\n11:[]\\n\"])</script><script>self.__next_f.push([1,\"0:[[[\\\"$\\\",\\\"link\\\",\\\"0\\\",{\\\"rel\\\":\\\"stylesheet\\\",\\\"href\\\":\\\"/next-blog/_next/static/css/16077bc16defb9b9.css\\\",\\\"precedence\\\":\\\"next\\\",\\\"crossOrigin\\\":\\\"$undefined\\\"}]],[\\\"$\\\",\\\"$L5\\\",null,{\\\"buildId\\\":\\\"FkDD4ed24GsUGsJlrpxW5\\\",\\\"assetPrefix\\\":\\\"/next-blog\\\",\\\"initialCanonicalUrl\\\":\\\"/posts/test-post\\\",\\\"initialTree\\\":[\\\"\\\",{\\\"children\\\":[\\\"posts\\\",{\\\"children\\\":[[\\\"slug\\\",\\\"test-post\\\",\\\"d\\\"],{\\\"children\\\":[\\\"__PAGE__?{\\\\\\\"slug\\\\\\\":\\\\\\\"test-post\\\\\\\"}\\\",{}]}]}]},\\\"$undefined\\\",\\\"$undefined\\\",true],\\\"initialSeedData\\\":[\\\"\\\",{\\\"children\\\":[\\\"posts\\\",{\\\"children\\\":[[\\\"slug\\\",\\\"test-post\\\",\\\"d\\\"],{\\\"children\\\":[\\\"__PAGE__\\\",{},[[\\\"$L6\\\",\\\"$L7\\\"],null],null]},[[[\\\"$\\\",\\\"$L8\\\",null,{\\\"parallelRouterKey\\\":\\\"children\\\",\\\"segmentPath\\\":[\\\"children\\\",\\\"posts\\\",\\\"children\\\",\\\"$9\\\",\\\"children\\\"],\\\"error\\\":\\\"$undefined\\\",\\\"errorStyles\\\":\\\"$undefined\\\",\\\"errorScripts\\\":\\\"$undefined\\\",\\\"template\\\":[\\\"$\\\",\\\"$La\\\",null,{}],\\\"templateStyles\\\":\\\"$undefined\\\",\\\"templateScripts\\\":\\\"$undefined\\\",\\\"notFound\\\":\\\"$undefined\\\",\\\"notFoundStyles\\\":\\\"$undefined\\\",\\\"styles\\\":null}],[\\\"$\\\",\\\"$Lb\\\",null,{\\\"src\\\":\\\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/prism.min.js\\\"}],[\\\"$\\\",\\\"$Lb\\\",null,{\\\"src\\\":\\\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-javascript.min.js\\\"}],[\\\"$\\\",\\\"$Lb\\\",null,{\\\"src\\\":\\\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-typescript.min.js\\\"}],[\\\"$\\\",\\\"$Lb\\\",null,{\\\"src\\\":\\\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-jsx.min.js\\\"}],[\\\"$\\\",\\\"$Lb\\\",null,{\\\"src\\\":\\\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-tsx.min.js\\\"}],[\\\"$\\\",\\\"$Lb\\\",null,{\\\"src\\\":\\\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-c.min.js\\\"}],[\\\"$\\\",\\\"$Lb\\\",null,{\\\"src\\\":\\\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/plugins/line-numbers/prism-line-numbers.min.js\\\"}]],null],null]},[\\\"$\\\",\\\"$L8\\\",null,{\\\"parallelRouterKey\\\":\\\"children\\\",\\\"segmentPath\\\":[\\\"children\\\",\\\"posts\\\",\\\"children\\\"],\\\"error\\\":\\\"$undefined\\\",\\\"errorStyles\\\":\\\"$undefined\\\",\\\"errorScripts\\\":\\\"$undefined\\\",\\\"template\\\":[\\\"$\\\",\\\"$La\\\",null,{}],\\\"templateStyles\\\":\\\"$undefined\\\",\\\"templateScripts\\\":\\\"$undefined\\\",\\\"notFound\\\":\\\"$undefined\\\",\\\"notFoundStyles\\\":\\\"$undefined\\\",\\\"styles\\\":[[\\\"$\\\",\\\"link\\\",\\\"0\\\",{\\\"rel\\\":\\\"stylesheet\\\",\\\"href\\\":\\\"/next-blog/_next/static/css/203da25389b4eeab.css\\\",\\\"precedence\\\":\\\"next\\\",\\\"crossOrigin\\\":\\\"$undefined\\\"}]]}],null]},[[\\\"$\\\",\\\"html\\\",null,{\\\"lang\\\":\\\"kr\\\",\\\"className\\\":\\\"__variable_fa65fd __variable_7691e4 scroll-smooth\\\",\\\"children\\\":[\\\"$\\\",\\\"body\\\",null,{\\\"className\\\":\\\"__className_fa65fd flex flex-col text-gray-800\\\",\\\"children\\\":[[\\\"$\\\",\\\"link\\\",null,{\\\"href\\\":\\\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/plugins/line-numbers/prism-line-numbers.min.css\\\",\\\"rel\\\":\\\"stylesheet\\\"}],[\\\"$\\\",\\\"header\\\",null,{\\\"className\\\":\\\"flex flex-row justify-center py-2 items-center self-center w-full max-w-screen-md px-4\\\",\\\"children\\\":[[\\\"$\\\",\\\"$Lc\\\",null,{\\\"href\\\":\\\"/\\\",\\\"children\\\":[\\\"$\\\",\\\"$Ld\\\",null,{\\\"height\\\":48}]}],[\\\"$\\\",\\\"div\\\",null,{\\\"className\\\":\\\"flex-1\\\"}],[\\\"$\\\",\\\"$Le\\\",null,{}]]}],[\\\"$\\\",\\\"main\\\",null,{\\\"className\\\":\\\"self-center w-full max-w-screen-md p-4 text-gray-800\\\",\\\"children\\\":[\\\"$\\\",\\\"$L8\\\",null,{\\\"parallelRouterKey\\\":\\\"children\\\",\\\"segmentPath\\\":[\\\"children\\\"],\\\"error\\\":\\\"$undefined\\\",\\\"errorStyles\\\":\\\"$undefined\\\",\\\"errorScripts\\\":\\\"$undefined\\\",\\\"template\\\":[\\\"$\\\",\\\"$La\\\",null,{}],\\\"templateStyles\\\":\\\"$undefined\\\",\\\"templateScripts\\\":\\\"$undefined\\\",\\\"notFound\\\":[\\\"$\\\",\\\"div\\\",null,{\\\"children\\\":[[\\\"$\\\",\\\"h2\\\",null,{\\\"children\\\":\\\"Not Found\\\"}],[\\\"$\\\",\\\"p\\\",null,{\\\"children\\\":\\\"Could not find requested resource\\\"}],[\\\"$\\\",\\\"$Lc\\\",null,{\\\"href\\\":\\\"/\\\",\\\"children\\\":\\\"Return Home\\\"}]]}],\\\"notFoundStyles\\\":[],\\\"styles\\\":null}]}],[\\\"$\\\",\\\"footer\\\",null,{\\\"className\\\":\\\"self-center w-full max-w-screen-md px-4 h-96\\\",\\\"children\\\":[\\\"$\\\",\\\"p\\\",null,{\\\"children\\\":[\\\"© 2024-\\\",2024,\\\" \\\",\\\"dev2820\\\",\\\". All rights reserved.\\\"]}]}]]}]}],null],null],\\\"couldBeIntercepted\\\":false,\\\"initialHead\\\":[null,\\\"$Lf\\\"],\\\"globalErrorComponent\\\":\\\"$10\\\",\\\"missingSlots\\\":\\\"$W11\\\"}]]\\n\"])</script><script>self.__next_f.push([1,\"12:I[2870,[\\\"587\\\",\\\"static/chunks/952ad60e-7cdac7b6bf36214c.js\\\",\\\"618\\\",\\\"static/chunks/618-f2bb34773a0d24b2.js\\\",\\\"372\\\",\\\"static/chunks/372-b649e69f56e8eb19.js\\\",\\\"805\\\",\\\"static/chunks/805-a8af350d35fb9160.js\\\",\\\"333\\\",\\\"static/chunks/app/posts/%5Bslug%5D/page-e951164d6ad6c144.js\\\"],\\\"TableOfContents\\\"]\\n13:I[6894,[\\\"587\\\",\\\"static/chunks/952ad60e-7cdac7b6bf36214c.js\\\",\\\"618\\\",\\\"static/chunks/618-f2bb34773a0d24b2.js\\\",\\\"372\\\",\\\"static/chunks/372-b649e69f56e8eb19.js\\\",\\\"805\\\",\\\"static/chunks/805-a8af350d35fb9160.js\\\",\\\"333\\\",\\\"static/chunks/app/posts/%5Bslug%5D/page-e951164d6ad6c144.js\\\"],\\\"Anchor\\\"]\\n14:I[5969,[\\\"587\\\",\\\"static/chunks/952ad60e-7cdac7b6bf36214c.js\\\",\\\"618\\\",\\\"static/chunks/618-f2bb34773a0d24b2.js\\\",\\\"372\\\",\\\"static/chunks/372-b649e69f56e8eb19.js\\\",\\\"805\\\",\\\"static/chunks/805-a8af350d35fb9160.js\\\",\\\"333\\\",\\\"static/chunks/app/posts/%5Bslug%5D/page-e951164d6ad6c144.js\\\"],\\\"Image\\\"]\\n15:I[1137,[\\\"587\\\",\\\"static/chunks/952ad60e-7cdac7b6bf36214c.js\\\",\\\"618\\\",\\\"static/chunks/618-f2bb34773a0d24b2.js\\\",\\\"372\\\",\\\"static/chunks/372-b649e69f56e8eb19.js\\\",\\\"805\\\",\\\"static/chunks/805-a8af350d35fb9160.js\\\",\\\"333\\\",\\\"static/chunks/app/posts/%5Bslug%5D/page-e951164d6ad6c144.js\\\"],\\\"Table\\\"]\\n16:I[1368,[\\\"587\\\",\\\"static/chunks/952ad60e-7cdac7b6bf36214c.js\\\",\\\"618\\\",\\\"static/chunks/618-f2bb34773a0d24b2.js\\\",\\\"372\\\",\\\"static/chunks/372-b649e69f56e8eb19.js\\\",\\\"805\\\",\\\"static/chunks/805-a8af350d35fb9160.js\\\",\\\"333\\\",\\\"static/chunks/app/posts/%5Bslug%5D/page-e951164d6ad6c144.js\\\"],\\\"TableHeader\\\"]\\n17:I[7024,[\\\"587\\\",\\\"static/chunks/952ad60e-7cdac7b6bf36214c.js\\\",\\\"618\\\",\\\"static/chunks/618-f2bb34773a0d24b2.js\\\",\\\"372\\\",\\\"static/chunks/372-b649e69f56e8eb19.js\\\",\\\"805\\\",\\\"static/chunks/805-a8af350d35fb9160.js\\\",\\\"333\\\",\\\"static/chunks/app/posts/%5Bslug%5D/page-e951164d6ad6c144.js\\\"],\\\"TableRow\\\"]\\n18:I[9787,[\\\"587\\\",\\\"static/chunks/952ad60e-7cdac7b6bf36214c.js\\\",\\\"618\\\",\\\"static/chunks/618-f2bb34773a0d24b2.js\\\",\\\"372\\\",\\\"static/chunks/372-b649e69f56e8eb19.js\\\",\\\"805\\\",\\\"static/chunks/805-a8af350d35fb9160.js\\\",\\\"333\\\",\\\"static/chunks/app/posts/%5Bslug%5D/page-e951164d6ad6c144.js\\\"],\\\"TableHead\\\"]\\n19:I[1962,[\\\"587\\\",\\\"static/chunks/952ad60e-7cdac7b6bf36214c.js\\\",\\\"618\\\",\\\"static/ch\"])</script><script>self.__next_f.push([1,\"unks/618-f2bb34773a0d24b2.js\\\",\\\"372\\\",\\\"static/chunks/372-b649e69f56e8eb19.js\\\",\\\"805\\\",\\\"static/chunks/805-a8af350d35fb9160.js\\\",\\\"333\\\",\\\"static/chunks/app/posts/%5Bslug%5D/page-e951164d6ad6c144.js\\\"],\\\"TableBody\\\"]\\n1a:I[6432,[\\\"587\\\",\\\"static/chunks/952ad60e-7cdac7b6bf36214c.js\\\",\\\"618\\\",\\\"static/chunks/618-f2bb34773a0d24b2.js\\\",\\\"372\\\",\\\"static/chunks/372-b649e69f56e8eb19.js\\\",\\\"805\\\",\\\"static/chunks/805-a8af350d35fb9160.js\\\",\\\"333\\\",\\\"static/chunks/app/posts/%5Bslug%5D/page-e951164d6ad6c144.js\\\"],\\\"TableCell\\\"]\\n1b:I[4547,[\\\"587\\\",\\\"static/chunks/952ad60e-7cdac7b6bf36214c.js\\\",\\\"618\\\",\\\"static/chunks/618-f2bb34773a0d24b2.js\\\",\\\"372\\\",\\\"static/chunks/372-b649e69f56e8eb19.js\\\",\\\"805\\\",\\\"static/chunks/805-a8af350d35fb9160.js\\\",\\\"333\\\",\\\"static/chunks/app/posts/%5Bslug%5D/page-e951164d6ad6c144.js\\\"],\\\"ShareButton\\\"]\\n1c:I[6398,[\\\"587\\\",\\\"static/chunks/952ad60e-7cdac7b6bf36214c.js\\\",\\\"618\\\",\\\"static/chunks/618-f2bb34773a0d24b2.js\\\",\\\"372\\\",\\\"static/chunks/372-b649e69f56e8eb19.js\\\",\\\"805\\\",\\\"static/chunks/805-a8af350d35fb9160.js\\\",\\\"333\\\",\\\"static/chunks/app/posts/%5Bslug%5D/page-e951164d6ad6c144.js\\\"],\\\"AuthorInfo\\\"]\\n\"])</script><script>self.__next_f.push([1,\"7:[\\\"$\\\",\\\"article\\\",null,{\\\"className\\\":\\\"relative\\\",\\\"children\\\":[[\\\"$\\\",\\\"header\\\",null,{\\\"id\\\":\\\"post-meta\\\",\\\"children\\\":[\\\"$undefined\\\",[\\\"$\\\",\\\"h1\\\",null,{\\\"className\\\":\\\"mt-10 mb-4 text-heading1 font-bold leading-normal\\\",\\\"id\\\":\\\"test-post\\\",\\\"children\\\":\\\"test-post\\\"}],[\\\"$\\\",\\\"time\\\",null,{\\\"dateTime\\\":\\\"2024-02-06\\\",\\\"aria-label\\\":\\\"Published on 2024-02-06\\\",\\\"children\\\":\\\"2024-02-06\\\"}],\\\" \\\",\\\"|\\\",\\\" \\\",[\\\"$\\\",\\\"time\\\",null,{\\\"dateTime\\\":\\\"PT0M\\\",\\\"aria-label\\\":\\\"Estimated reading time\\\",\\\"children\\\":[0,\\\" mins\\\"]}]]}],[\\\"$\\\",\\\"div\\\",null,{\\\"id\\\":\\\"content\\\",\\\"className\\\":\\\"relative\\\",\\\"children\\\":[[\\\"$\\\",\\\"div\\\",null,{\\\"id\\\":\\\"table-of-header\\\",\\\"className\\\":\\\"absolute -right-12 translate-x-full h-full w-52 desktop:block hidden\\\",\\\"children\\\":[\\\"$\\\",\\\"$L12\\\",null,{\\\"toc\\\":[{\\\"level\\\":2,\\\"content\\\":\\\"What's New\\\",\\\"slug\\\":\\\"#whats-new\\\"}],\\\"className\\\":\\\"sticky top-24\\\"}]}],[\\\"$\\\",\\\"section\\\",null,{\\\"aria-labelledby\\\":\\\"whats-new\\\",\\\"children\\\":[[\\\"$\\\",\\\"h2\\\",null,{\\\"className\\\":\\\"mt-8 mb-3 text-heading2 font-semibold leading-normal\\\",\\\"id\\\":\\\"whats-new\\\",\\\"children\\\":[[\\\"$\\\",\\\"$L13\\\",null,{\\\"aria-hidden\\\":\\\"true\\\",\\\"tabIndex\\\":\\\"-1\\\",\\\"href\\\":\\\"#whats-new\\\",\\\"children\\\":[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"icon icon-link\\\"}]}],\\\"What's New\\\"]}],[\\\"$\\\",\\\"pre\\\",null,{\\\"className\\\":\\\"rounded-md [\\u0026_code]:py-0 [\\u0026_code]:px-0 line-numbers language-js\\\",\\\"children\\\":[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2 language-js\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword\\\",\\\"children\\\":\\\"function\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token function\\\",\\\"children\\\":\\\"abc\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"{\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token console class-name\\\",\\\"children\\\":\\\"console\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\".\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token method function property-access\\\",\\\"children\\\":\\\"log\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token string\\\",\\\"children\\\":\\\"\\\\\\\"hello world\\\\\\\"\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword\\\",\\\"children\\\":\\\"const\\\"}],\\\" a \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"3\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword\\\",\\\"children\\\":\\\"const\\\"}],\\\" b \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"=\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token number\\\",\\\"children\\\":\\\"4\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":\\\"\\\\n\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword control-flow\\\",\\\"children\\\":\\\"return\\\"}],\\\" a \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token operator\\\",\\\"children\\\":\\\"+\\\"}],\\\" b\\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"}\\\"}],\\\"\\\\n\\\"]}]]}]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":[\\\"테스트 \\\",[\\\"$\\\",\\\"strong\\\",null,{\\\"className\\\":\\\"font-medium\\\",\\\"children\\\":\\\"문자열 ??\\\"}]]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":[\\\"$\\\",\\\"$L14\\\",null,{\\\"className\\\":\\\"object-cover rounded-md mx-auto my-12 w-full max-w-[704px]\\\",\\\"src\\\":\\\"/next-blog/posts/test-post/images/cat-nyan-cat.gif\\\",\\\"alt\\\":\\\"nya nya\\\",\\\"width\\\":704,\\\"height\\\":300}]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":[\\\"a \\\",[\\\"$\\\",\\\"em\\\",null,{\\\"className\\\":\\\"[img+\\u0026]:block [img+\\u0026]:text-center [img+\\u0026]:text-gray-400 [img+\\u0026]:font-thin [img+\\u0026]:not-italic [img+\\u0026]:text-sm [img+\\u0026]:-translate-y-10\\\",\\\"children\\\":\\\"b\\\"}],\\\" \\\",[\\\"$\\\",\\\"strong\\\",null,{\\\"className\\\":\\\"font-medium\\\",\\\"children\\\":\\\"c\\\"}],\\\" \\\",[\\\"$\\\",\\\"del\\\",null,{\\\"children\\\":\\\"d\\\"}],\\\" \\\",[\\\"$\\\",\\\"u\\\",null,{\\\"children\\\":\\\"underline\\\"}],\\\" colored\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":[[\\\"$\\\",\\\"$L14\\\",null,{\\\"className\\\":\\\"object-cover rounded-md mx-auto my-12 w-full max-w-[704px]\\\",\\\"src\\\":\\\"/next-blog/posts/test-post/images/cat.jpg\\\",\\\"alt\\\":\\\"cat\\\",\\\"width\\\":704,\\\"height\\\":300}],\\\"\\\\n\\\",[\\\"$\\\",\\\"$L14\\\",null,{\\\"className\\\":\\\"object-cover rounded-md mx-auto my-12 w-full max-w-[704px]\\\",\\\"src\\\":\\\"/next-blog/posts/test-post/images/cat.jpg\\\",\\\"alt\\\":\\\"another cat\\\",\\\"width\\\":704,\\\"height\\\":300}]]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\\\",\\\"children\\\":\\\"inline code\\\"}]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":[\\\"$\\\",\\\"$L14\\\",null,{\\\"className\\\":\\\"object-cover rounded-md mx-auto my-12 w-full max-w-[704px]\\\",\\\"src\\\":\\\"/next-blog/posts/test-post/images/cat-nyan-cat.gif\\\",\\\"alt\\\":\\\"nyan cat\\\",\\\"width\\\":704,\\\"height\\\":300}]}],[\\\"$\\\",\\\"ol\\\",null,{\\\"className\\\":\\\"list-decimal my-4\\\",\\\"children\\\":[\\\"\\\\n\\\",[\\\"$\\\",\\\"li\\\",null,{\\\"className\\\":\\\"text-paragraph font-light leading-normal py-1 ml-6\\\",\\\"children\\\":[\\\"ordered\\\",\\\"\\\\n\\\",[\\\"$\\\",\\\"ol\\\",null,{\\\"className\\\":\\\"list-decimal my-4\\\",\\\"children\\\":[\\\"\\\\n\\\",[\\\"$\\\",\\\"li\\\",null,{\\\"className\\\":\\\"text-paragraph font-light leading-normal py-1 ml-6\\\",\\\"children\\\":\\\"nested\\\"}],\\\"\\\\n\\\",[\\\"$\\\",\\\"li\\\",null,{\\\"className\\\":\\\"text-paragraph font-light leading-normal py-1 ml-6\\\",\\\"children\\\":\\\"next\\\"}],\\\"\\\\n\\\"]}],\\\"\\\\n\\\"]}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":[\\\"$\\\",\\\"$L13\\\",null,{\\\"href\\\":\\\"https://www.naver.com\\\",\\\"children\\\":\\\"link to naver\\\"}]}],[\\\"$\\\",\\\"pre\\\",null,{\\\"className\\\":\\\"rounded-md [\\u0026_code]:py-0 [\\u0026_code]:px-0 line-numbers language-js\\\",\\\"children\\\":[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2 language-js\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token keyword\\\",\\\"children\\\":\\\"function\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token function\\\",\\\"children\\\":\\\"abc\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],\\\" \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"{\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[\\\"  \\\",[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token console class-name\\\",\\\"children\\\":\\\"console\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\".\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token method function property-access\\\",\\\"children\\\":\\\"log\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"(\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token string\\\",\\\"children\\\":\\\"\\\\\\\"hello world\\\\\\\"\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\")\\\"}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\";\\\"}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"code-line\\\",\\\"children\\\":[[\\\"$\\\",\\\"span\\\",null,{\\\"className\\\":\\\"token punctuation\\\",\\\"children\\\":\\\"}\\\"}],\\\"\\\\n\\\"]}]]}]}],[\\\"$\\\",\\\"blockquote\\\",null,{\\\"className\\\":\\\"my-4 border-l-4 border-primary p-6 bg-gray-100 text-gray-700 [\\u0026_*:first-child]:mt-0 [\\u0026_*:last-child]:mb-0\\\",\\\"children\\\":[\\\"\\\\n\\\",[\\\"$\\\",\\\"p\\\",null,{\\\"className\\\":\\\"font-light leading-normal mt-4 mb-2\\\",\\\"children\\\":[\\\"test block quotes\\\\nmultiline\\\\n\\\",[\\\"$\\\",\\\"code\\\",null,{\\\"className\\\":\\\"rounded-md bg-gray-200 text-red-400 py-0.5 px-2\\\",\\\"children\\\":\\\"code in quotes\\\"}]]}],\\\"\\\\n\\\"]}],[\\\"$\\\",\\\"$L15\\\",null,{\\\"children\\\":[[\\\"$\\\",\\\"$L16\\\",null,{\\\"children\\\":[\\\"$\\\",\\\"$L17\\\",null,{\\\"children\\\":[[\\\"$\\\",\\\"$L18\\\",null,{\\\"children\\\":\\\"Name\\\"}],[\\\"$\\\",\\\"$L18\\\",null,{\\\"children\\\":\\\"Age\\\"}],[\\\"$\\\",\\\"$L18\\\",null,{\\\"children\\\":\\\"Occupation\\\"}]]}]}],[\\\"$\\\",\\\"$L19\\\",null,{\\\"children\\\":[[\\\"$\\\",\\\"$L17\\\",null,{\\\"children\\\":[[\\\"$\\\",\\\"$L1a\\\",null,{\\\"children\\\":\\\"Alice\\\"}],[\\\"$\\\",\\\"$L1a\\\",null,{\\\"children\\\":\\\"28\\\"}],[\\\"$\\\",\\\"$L1a\\\",null,{\\\"children\\\":\\\"Software Engineer\\\"}]]}],[\\\"$\\\",\\\"$L17\\\",null,{\\\"children\\\":[[\\\"$\\\",\\\"$L1a\\\",null,{\\\"children\\\":\\\"Bob\\\"}],[\\\"$\\\",\\\"$L1a\\\",null,{\\\"children\\\":\\\"34\\\"}],[\\\"$\\\",\\\"$L1a\\\",null,{\\\"children\\\":\\\"Data Scientist\\\"}]]}],[\\\"$\\\",\\\"$L17\\\",null,{\\\"children\\\":[[\\\"$\\\",\\\"$L1a\\\",null,{\\\"children\\\":\\\"Charlie\\\"}],[\\\"$\\\",\\\"$L1a\\\",null,{\\\"children\\\":\\\"25\\\"}],[\\\"$\\\",\\\"$L1a\\\",null,{\\\"children\\\":\\\"Designer\\\"}]]}]]}]]}]]}],[\\\"$\\\",\\\"$L1b\\\",null,{\\\"size\\\":\\\"lg\\\",\\\"shareData\\\":{\\\"title\\\":\\\"Terra Dev Blog - test-post\\\",\\\"text\\\":\\\"$undefined\\\",\\\"url\\\":\\\"/next-blog/posts/test-post\\\"},\\\"aria-label\\\":\\\"Share this article\\\"}]]}],[\\\"$\\\",\\\"section\\\",null,{\\\"id\\\":\\\"author\\\",\\\"children\\\":[\\\"$\\\",\\\"$L1c\\\",null,{}]}],[\\\"$\\\",\\\"section\\\",null,{\\\"children\\\":[[\\\"$\\\",\\\"$Lb\\\",null,{\\\"src\\\":\\\"https://giscus.app/client.js\\\",\\\"data-repo\\\":\\\"dev2820/blog-posts\\\",\\\"data-repo-id\\\":\\\"R_kgDOLQagPA\\\",\\\"data-category\\\":\\\"General\\\",\\\"data-category-id\\\":\\\"DIC_kwDOLQagPM4CjAtl\\\",\\\"data-mapping\\\":\\\"og:title\\\",\\\"data-strict\\\":\\\"0\\\",\\\"data-reactions-enabled\\\":\\\"1\\\",\\\"data-emit-metadata\\\":\\\"0\\\",\\\"data-input-position\\\":\\\"top\\\",\\\"data-theme\\\":\\\"light\\\",\\\"data-lang\\\":\\\"ko\\\",\\\"data-loading\\\":\\\"lazy\\\",\\\"cross-origin\\\":\\\"anonymous\\\",\\\"async\\\":true}],[\\\"$\\\",\\\"div\\\",null,{\\\"className\\\":\\\"giscus w-full min-w-screen-md\\\"}]]}]]}]\\n\"])</script><script>self.__next_f.push([1,\"f:[[\\\"$\\\",\\\"meta\\\",\\\"0\\\",{\\\"name\\\":\\\"viewport\\\",\\\"content\\\":\\\"width=device-width, initial-scale=1\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"1\\\",{\\\"charSet\\\":\\\"utf-8\\\"}],[\\\"$\\\",\\\"title\\\",\\\"2\\\",{\\\"children\\\":\\\"Terra Dev Blog - test-post\\\"}],[\\\"$\\\",\\\"link\\\",\\\"3\\\",{\\\"rel\\\":\\\"canonical\\\",\\\"href\\\":\\\"https://dev2820.github.io/next-blog/test-post\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"4\\\",{\\\"property\\\":\\\"og:title\\\",\\\"content\\\":\\\"test-post\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"5\\\",{\\\"property\\\":\\\"og:url\\\",\\\"content\\\":\\\"https://dev2820.github.io/next-blog/test-post\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"6\\\",{\\\"property\\\":\\\"og:locale\\\",\\\"content\\\":\\\"ko_KR\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"7\\\",{\\\"property\\\":\\\"og:image\\\",\\\"content\\\":\\\"https://dev2820.github.io/next-blog/next-blog/posts/test-post\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"8\\\",{\\\"property\\\":\\\"og:image:width\\\",\\\"content\\\":\\\"800\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"9\\\",{\\\"property\\\":\\\"og:image:height\\\",\\\"content\\\":\\\"600\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"10\\\",{\\\"property\\\":\\\"og:image:alt\\\",\\\"content\\\":\\\"test-post\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"11\\\",{\\\"property\\\":\\\"og:type\\\",\\\"content\\\":\\\"article\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"12\\\",{\\\"name\\\":\\\"twitter:card\\\",\\\"content\\\":\\\"summary_large_image\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"13\\\",{\\\"name\\\":\\\"twitter:title\\\",\\\"content\\\":\\\"test-post\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"14\\\",{\\\"name\\\":\\\"twitter:image\\\",\\\"content\\\":\\\"https://dev2820.github.io/next-blog/next-blog/posts/test-post\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"15\\\",{\\\"name\\\":\\\"twitter:image:width\\\",\\\"content\\\":\\\"800\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"16\\\",{\\\"name\\\":\\\"twitter:image:height\\\",\\\"content\\\":\\\"600\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"17\\\",{\\\"name\\\":\\\"twitter:image:alt\\\",\\\"content\\\":\\\"test-post\\\"}],[\\\"$\\\",\\\"link\\\",\\\"18\\\",{\\\"rel\\\":\\\"icon\\\",\\\"href\\\":\\\"/next-blog/favicon.ico\\\",\\\"type\\\":\\\"image/x-icon\\\",\\\"sizes\\\":\\\"16x16\\\"}],[\\\"$\\\",\\\"meta\\\",\\\"19\\\",{\\\"name\\\":\\\"next-size-adjust\\\"}]]\\n6:null\\n\"])</script></body></html>",
            "url": "https://dev2820.github.io/next-blogtest-post",
            "title": "test-post",
            "date_modified": "2024-02-06T16:40:10.669Z",
            "author": {
                "name": "dev2820",
                "url": "https://dev2820.github.io/next-blog/about"
            }
        }
    ]
}